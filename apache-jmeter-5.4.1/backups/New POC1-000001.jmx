<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-566" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-576" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/initializers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-578" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/negotiate?negotiateVersion=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.4c9c7ce8ce7b4e98</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-4c9c7ce8ce7b4e98-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;connectionToken&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_Token_NONE</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-580" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${C_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.2e9f549e68734f56</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-2e9f549e68734f56-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-582" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${C_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.a63575ca8bc14168</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-a63575ca8bc14168-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-582" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${C_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.a63575ca8bc14168</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-a63575ca8bc14168-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-583" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;protocol&quot;:&quot;blazorpack&quot;,&quot;version&quot;:1}&#x1e;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=${C_Token}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.a87a72b34a7a4a1e</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-a87a72b34a7a4a1e-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-586" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�&#x7;�&#x1;��0�StartCircuit��*${scheme}://mtblazordemoapp.azurewebsites.net/�*${scheme}://mtblazordemoapp.azurewebsites.net/�&#x3;&#x7f;[{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:0,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxpjBtj4wvvAoOdCjmQTCcrHZ2/GLxxwnPVwZn1wUzRwH05qCiJgBCdUwq3VFReIDyu+guQSRK8sOthokeRfdODnmfb6c3J94gKhLbrzQUpK5LXum8+OwcUxGSeSOw/FCmTys4kWAGi/DWjaw7aQMkhxIMYukaYcJ9NsfJIhc3hTwN25p+DPA2OegQQ3Q9mQW5WQ0601ZrBKknT1FZyl6JP3zj7uSf43/qOHc6sHIqo6rZjGOm+EZPoUPlWRlA6DxFUkkK8QK+BSFelEmJOvjZeiI5bHEbaKb89Dp0hi1jKGF+gKGwVDASjAXDCarxQYp+FskdYBX4BkuIYFkep9pLW8Q&quot;},{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:1,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxpiWJNABEVY9wKJRukNDKshsYVrzdQuWUPqLhjYBqATYpQxiW75SxgukkY4oR1YIoGmPuI6CmzqwoFS5+NYISJRtbRiyGOnhIcMVJoSpAXKI7gk8+SYrc5s3jQ5R1gHHmWv+MhOybSRKtRdvucmhpk3TBbjeLw6jfC03Jf3zMnhb9a++dmdw9CeAl57ZzDoEGH0LZNcxM+wbpHIN30NpBf3k20StZhxL70iNhR4V27uEXW6Gw0PRLqML//k+kZMvkaEYWfmUrpqcHbrASgm8GuCeb4rPI6sRApLL+ZSvKt7IWDviIGfx37k59lH7inkCy3ONp06FCstHHnmfpqTaxHipueZpF4R0ypziHjhKR/eLwIHoO0JhT8uTJcLzNqP/9Iw5Kn37uymERthKbj7fxeQz&quot;}]�</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=${C_Token}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.c89ed56fbb3e44a1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-c89ed56fbb3e44a1-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-587" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${C_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">${__time(,)}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.fef83d123e014255</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-fef83d123e014255-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click on Interim Cash" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-625" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/notify</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-637" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/initializers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-639" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/negotiate?negotiateVersion=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.93019eca5d904c8a</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-93019eca5d904c8a-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-641" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">-F7XZKWrwsvbJQ2NCKdjbQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684833890795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.372e47f1c9f946c4</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-372e47f1c9f946c4-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-643" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;protocol&quot;:&quot;blazorpack&quot;,&quot;version&quot;:1}&#x1e;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=-F7XZKWrwsvbJQ2NCKdjbQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.9311c1c788d54e30</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-9311c1c788d54e30-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-644" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">-F7XZKWrwsvbJQ2NCKdjbQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684833892319</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.a89d65db76de480d</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-a89d65db76de480d-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-646" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�&#x7;�&#x1;��0�StartCircuit��*${scheme}://mtblazordemoapp.azurewebsites.net/�0https://mtblazordemoapp.azurewebsites.net/notify�&#x3;&#x7f;[{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:0,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxphG7jb8tc147VBZ0QGZ1zf0mVhw13f6I1BrQHKQMcQaivfgabmWUENzLRotXuFIeeZo/ej+Kg3lL6Cc5u6o+650DzlKdm7322rLqaOD1CgzqvSqJGMKlyxgPWVEPJitRf1Q8eVMSPKT5I7+BSUY9A9o5/lzCDQ9Cob6y9A9x9xJDXy0ilhARz9cy3K2HGk0YkghnJqe+Dhjq3TcXPhnS5kzDhTD6kZtJ4nRoETdz/jcZe5ag+WKIDdxXfn/us2SFJVQL4H2dLeA+Tw2M3neezX4kZGX2oOYXgSBk+ip+BNY5oq65Rw9g/ki5wNr2Dqi8hnhsSHjWulWdAePElBs+34T&quot;},{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:1,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxpiBJBIDLfSvWppR1Ii/N878Vlf+9yMtZTEGTv+UeIZhyg6a3MP6MG5wnJdtJVUbJZwzawqxoHcnkNfIG14gGMHCxC2PfdVoWU10e7RrqlP4v16FiqrV8dKn+1Z6qeoMCgTGt7BxC+u6LRLTV6UKeVhKR0oY/r1QSWrIwHjzk+rwVP71rsTR4ILNL3a1cQoICN9qvHjpdMjWphXt/bvDUPhEKS0AU4StOKL7DxhEvb9dtkNGQoS+V40DyLuaG1A86bYxLwXO4zcCseeZX41llKBr2894k81d77VHsNLknMt3s4Yt+cU2JgVZTpZQxEQEkzLJFyuH8y9dqjCjHx6SvHAbwHEgblYuW7Ocv8qhN+8x3I1dphatGPQWsfJ0bove+Kv3Rv8fm7H2UCKp+jAxGQr2&quot;}]�</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=-F7XZKWrwsvbJQ2NCKdjbQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.1968a89b79af42da</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-1968a89b79af42da-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-611" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${C_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684833854593</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f2cd20d9844a41b4bf27721895b90237.6c03aa78e11d4630</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f2cd20d9844a41b4bf27721895b90237-6c03aa78e11d4630-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Save" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-692" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Seller" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Seller</stringProp>
                  <stringProp name="Argument.value">test</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="InterinService" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">InterinService</stringProp>
                  <stringProp name="Argument.value">test2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="WireDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">WireDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="RemittanceDue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RemittanceDue</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="FileName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">FileName</stringProp>
                  <stringProp name="Argument.value">123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="Notes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Notes</stringProp>
                  <stringProp name="Argument.value">frefe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/notify</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-701" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/initializers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-704" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/negotiate?negotiateVersion=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.418e4a28c4fe496d</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-418e4a28c4fe496d-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-706" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">Wf6weax3u3loDy3Hd9VjZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834047338</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.a7f75e5845bd447b</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-a7f75e5845bd447b-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-707" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">Wf6weax3u3loDy3Hd9VjZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834048947</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.adeeeb8634644044</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-adeeeb8634644044-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-708" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;protocol&quot;:&quot;blazorpack&quot;,&quot;version&quot;:1}&#x1e;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=Wf6weax3u3loDy3Hd9VjZQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.bece0e9489624ba8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-bece0e9489624ba8-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-710" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�&#x8;�&#x1;��0�StartCircuit��*${scheme}://mtblazordemoapp.azurewebsites.net/كhttps://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe�&#x3;&#x7f;[{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:0,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxphokEo76dZljjKMqMKgJiO/nxKD/h+69DdQgHSt9sgT3F3Jp+LzRF4NIQTw2IKTloe7JzS34i5v0jE2XT0hvOrFrfORX/5LYByXs9I/TFUIQWCkje6cX4Bmtx9oMhU3asZX7Yc+drmItDxP7NOHwslwzHfjh5KYMmHQ+Ek2c3bpsrUwNMUUrALLPutH0jmo5vA4o9j+dvGieUhbIqRSKG3dHWfbP7brhRJd3iMGU//e6I/epV2g+mvFYm6cXQ/5ah8oqLPmsSwROcJbMdlvTf62VuvQSNgoSzWbw1bCeJyxNTHQWFubvKMqiXxb8KVgDmGptE4ZDs7tW0WhiuIV96oV&quot;},{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:1,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxpi4pHBTGmOvZjsMEHIv8aR/HQHAFWf6IsMc7A5q6U9ekFDkFkkh/3Cct+yQc3UfXQHZFe6Qw+rxcVGsWZgmrptlLmJvsHnw3glRwZIR8EMssL3SfiP7tYX6IC1j4orAmXCxMN11WLJPCXAE6nj6CdBQWUy7eBGdJC61+QHpXKgPP2+t079G1rV594artuWgP93SoMMwwhF3IPw6LYqmnGHWsb/5/iXNJ80XB4VXGCHQZGeWV0TH4YBaOr4WDrSFVD/6uM9muIobx3aXdxUd3dckgQKZG8Zj+7INuEGSKDgGhbUZ4BxlATJ5vmhkAUGrgxaZVTbmrF2B6pS+cgmsl9yNP35HdIj6S12AGm6qO+f1Z1UTg7m5BH/YFX9ziNY7oyjjDRvX/lKATUwOjmm8gzKh&quot;}]�</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=Wf6weax3u3loDy3Hd9VjZQ</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.8b4300dd627a4963</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-8b4300dd627a4963-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-680" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">-F7XZKWrwsvbJQ2NCKdjbQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684833985281</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|ae65d739ae1b4b88a98d930b8e6c7bf1.e3a19c4d88b5461d</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ae65d739ae1b4b88a98d930b8e6c7bf1-e3a19c4d88b5461d-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-709" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">Wf6weax3u3loDy3Hd9VjZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834050436</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.324f1d8a792743c4</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-324f1d8a792743c4-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-724" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">Wf6weax3u3loDy3Hd9VjZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834142057</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.6204cc400bc04d68</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-6204cc400bc04d68-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EPD" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-744" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/epd</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-754" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/initializers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-757" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/negotiate?negotiateVersion=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.0ae4fbb9c9bb4de1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-0ae4fbb9c9bb4de1-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-759" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">t0V9pIAU_7u3BLJ_meI73w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834252646</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.99c011fdc15c44cc</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-99c011fdc15c44cc-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-760" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;protocol&quot;:&quot;blazorpack&quot;,&quot;version&quot;:1}&#x1e;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=t0V9pIAU_7u3BLJ_meI73w</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.892298a12435406b</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-892298a12435406b-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-761" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">t0V9pIAU_7u3BLJ_meI73w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834254099</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.2f200b1458624166</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-2f200b1458624166-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-763" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�&#x7;�&#x1;��0�StartCircuit��*${scheme}://mtblazordemoapp.azurewebsites.net/�-${scheme}://mtblazordemoapp.azurewebsites.net/epd�&#x3;&#x7f;[{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:0,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxphUSKx/mMZ0URWvp4a3a3QrxKq3kXRf+VsfJmme99VmbXosxJpSfOc0ZCCnoJGuSZau1l9cnkEq2RTgp3wEt+w91MjyxqXzd8VfmKVoLOVDobg2aAVK7g6+iB5GI1qFEE8P86/nM+yqowVRl/9V+yclXaj3wQG2pzLXwPH5cg0m2srqVserqQqh8Fdf118/lvqbU/aV6RfFwmwW1NiTYrp7BFmAhNOB1G5jqCjqKjVABIIWS+gksIriNi17PmeWOx5ZXtdIZRJTht3RvBfsltYc34jqp82T82GPPkHJries5wr7Ilht7Q42S2b1VwUwDhhtWPFjt87oHp2CO6qMQjbV&quot;},{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:1,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxphDk69tP1rO/t7TOfWQi0q+3sOaxwbKCq7MtF5WpyWhc6ia60VGYyMXD39Y8bTgw8cR+XjbjW3Gj/K3pbZKK2aS9LSRjF7QbzhMxyMghWLAdxWW8STmUEnoNWcwku0Jei20I6G+sCudoPGKJE6SwEcyrhV3b8Y4Z3Aa1bVegdbZduHAR0LaSHRrzDD6MTYNnmhymiR0TaWrXA54G/q/dqdXHwkVzuNPqld1E07GvpKOgNCF6pnPR3ZlOD8u24wz5Kc5qYhy1OmfVIiMprk9hvG9joAMlWZjxCeEdO7yMHdJxs+w+D+1qiAh1lDzzCmnXUlfClaUnEYscConFy3JrpgoXm6q7ESg3zlubEdHjtIP7P5EBKwnwGQUNaZ9j+zoI6ltrhH6mWFgGdDuYo5AicMp&quot;}]�</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=t0V9pIAU_7u3BLJ_meI73w</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.51b32d4de0bc4184</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-51b32d4de0bc4184-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-737" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">Wf6weax3u3loDy3Hd9VjZQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834234118</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|7675991d82464a958d8dc5a0c7a75f52.7475572c6a234a18</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7675991d82464a958d8dc5a0c7a75f52-7475572c6a234a18-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-772" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:300726400,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;20c61984-01dd-4591-b661-6d2d8195c990\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31035}&quot;,&quot;Trouter-CD&quot;: &quot;8&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:300726400,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;20c61984-01dd-4591-b661-6d2d8195c990\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31035}&quot;,&quot;Trouter-CD&quot;: &quot;8&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834325</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Select Filter" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-768" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834301786</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-762" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">t0V9pIAU_7u3BLJ_meI73w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834255489</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.58d9040f22be49dd</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-58d9040f22be49dd-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-776" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:30:55.489Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;bcbbcec00a804187bc00015ac1b0823d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|bcbbcec00a804187bc00015ac1b0823d.58d9040f22be49dd.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=t0V9pIAU_7u3BLJ_meI73w&amp;_=1684834255489&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.393&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=t0V9pIAU_7u3BLJ_meI73w&amp;_=1684834255489&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-773" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834324</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-777" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:40336541,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1d62bbac-d488-40a9-98fa-32bebac66199\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31004}&quot;,&quot;Trouter-CD&quot;: &quot;10&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:40336541,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1d62bbac-d488-40a9-98fa-32bebac66199\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31004}&quot;,&quot;Trouter-CD&quot;: &quot;10&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834351</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-778" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834351</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-779" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="5:512 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:32:53.4104798Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5:512 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:32:53.4104798Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834372</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-780" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834372</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-782" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:101974938,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;ce6368f5-f7dc-4926-8637-255ddf45a908\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:101974938,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;ce6368f5-f7dc-4926-8637-255ddf45a908\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834382</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-774" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834343824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-781" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834382</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-783" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834385994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-786" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/epd</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-794" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authsvc/v1.0/authz</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/_</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="x-ms-session-id" elementType="Header">
                  <stringProp name="Header.name">x-ms-session-id</stringProp>
                  <stringProp name="Header.value">eec9c4b4-db17-fdd2-3ac8-bbd8f161e438</stringProp>
                </elementProp>
                <elementProp name="x-ms-user-type" elementType="Header">
                  <stringProp name="Header.name">x-ms-user-type</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="X-Client-UI-Language" elementType="Header">
                  <stringProp name="Header.name">X-Client-UI-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjA1YjVBOF9WcGdUTmxfbHZGY2pHZHZlVE0tMklLb1Z5Y01vdXNjZDNpdE0iLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL2FwaS5zcGFjZXMuc2t5cGUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmLyIsImlhdCI6MTY4NDgyMzk4MCwibmJmIjoxNjg0ODIzOTgwLCJleHAiOjE2ODQ5MDg2OTksImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVVFBdS84VEFBQUFCcjYrZ1BCalBvL2NGbFlXelZmbjN2YSt6MTBUWHFoVE44cW9sNHo5aG84RmJ3eGVyaHovS011RklPMWhDdVhQTWFVQWhlb0pDVExZSjN5RjkvU2Yydz09IiwiYW1yIjpbInB3ZCIsInJzYSIsIm1mYSJdLCJhcHBpZCI6IjFmZWM4ZTc4LWJjZTQtNGFhZi1hYjFiLTU0NTFjYzM4NzI2NCIsImFwcGlkYWNyIjoiMCIsImF1dGhfdGltZSI6MTY4NDEzOTY0MCwiY2Fwb2xpZHNfbGF0ZWJpbmQiOlsiZTIzNGYzNmItMjkxZi00ZmJkLWI3ZTYtODk3Y2QwMzZiMjExIl0sImNuZiI6eyJ0YmgiOiIvMWlmakU3YzBhMFVISDdZVTBCckRWQUJFcEdNdkpmZzlHWGtnbWoyMlBjPSJ9LCJkZXZpY2VpZCI6IjNmMWI2MzQxLTAxOTctNDRhMS05OWQyLTJhZDk2ZGY4Yjg2MSIsImZhbWlseV9uYW1lIjoiS0FUSUtBUkVERFkiLCJnaXZlbl9uYW1lIjoiVmVudSBHb3BhbCBSZWRkeSIsImlwYWRkciI6IjE0LjE0MC4xNTEuMTE4IiwibmFtZSI6IlZlbnUgR29wYWwgUmVkZHkgS0FUSUtBUkVERFkiLCJvaWQiOiJlZmFlYmYzMy1iZTkzLTQzOGItOWYxMy1lNGVlYmYwYmRjMjciLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMTkxMTkzNDQ3NS03NTgxODAzODUtMTI3NDMwNjcxOS0yMDM2NyIsInB1aWQiOiIxMDAzMjAwMTBFNTExREM2IiwicHdkX2V4cCI6IjU1NDMwODIiLCJwd2RfdXJsIjoiaHR0cHM6Ly9wb3J0YWwubWljcm9zb2Z0b25saW5lLmNvbS9DaGFuZ2VQYXNzd29yZC5hc3B4IiwicmgiOiIwLkFWUUFEMkJzSzh1MktVT3ZPeHN5eGl4RUQxZjlGY3hzTEJkQnFJeURzZFZyUzc1VUFJOC4iLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzaWQiOiI4NGQ1ZjYxNS03ODY3LTQxNjctYTNhOS01MzkzY2Q1NzRmYTgiLCJzaWduaW5fc3RhdGUiOlsiZHZjX21uZ2QiLCJkdmNfZG1qZCIsImlua25vd25udHdrIiwia21zaSJdLCJzdWIiOiJuei1sSFJHX1pTT28yLWJQb2tTc1FQYmdBYXc5N3lOMnBabXZRTkJTcF9RIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwidW5pcXVlX25hbWUiOiJ2ZW51Z29wYWxrLmluQG1vdXJpdGVjaC5jb20iLCJ1cG4iOiJ2ZW51Z29wYWxrLmluQG1vdXJpdGVjaC5jb20iLCJ1dGkiOiJpZlphVDJDNkZrMjRjM2hacVJFN0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX2NjIjpbIkNQMSJdLCJ4bXNfc3NtIjoiMSJ9.mBE5mZTwn2OKUfCuJLIOSmJOgBUSZDmCPL5_BeB8zUVhBfIzYi5VfmAcgbECGZQfCz0RC_pAg3QHugDLAydEbIxt-KL8-UbrwLkecJuoGeJSpQgvfB4DzxsM19n3aUg_yw2GCOkZ5bOT0hJ8xqUwnVGm6FduaNZ34q4gi7GxA6iusEmNL9yJjKf_C9qWNE2NMwtiJz1X6S8yAgHPTYlrZ__JEfDVjR89V5Q-jd0GIVDO9ZCPZEcW8lA4ZkEcAZHknlm9mvfTLltZexE-9kxYcQ3p4ow4raFTCD0qeEqd1tb65rU-meadCCnSWAlpm3DtSNUXI-GvZLDFQj-TUtrIGw</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-type" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-type</stringProp>
                  <stringProp name="Header.value">desktop</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-env" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-env</stringProp>
                  <stringProp name="Header.value">pds-prod-azsc-asse-01</stringProp>
                </elementProp>
                <elementProp name="claimsChallengeCapable" elementType="Header">
                  <stringProp name="Header.name">claimsChallengeCapable</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-ms-scenario-id" elementType="Header">
                  <stringProp name="Header.name">x-ms-scenario-id</stringProp>
                  <stringProp name="Header.value">6799</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-version" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-version</stringProp>
                  <stringProp name="Header.value">27/1.0.0.2023051118</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="ms-teams-authz-type" elementType="Header">
                  <stringProp name="Header.name">ms-teams-authz-type</stringProp>
                  <stringProp name="Header.value">TokenRefresh</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-800" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alt</stringProp>
                  <stringProp name="Argument.value">proto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTEzLjAuNTY3Mi4xMjcScgk9y3jUd6A3OBIFDZFhlU4SBQ203HwCEgUNkWGVThIFDZFhlU4SBQ2sC-asEgUNkWGVThIFDdxbEMQSBQ2RYZVOEgUNkWGVThIFDaOB9FYSBQ2RYZVOEgUNoFSPPRIFDZFhlU4SBQ2RYZVOEgUNEBTECA==</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCI6NywEIk6HLAQid/swBCIWgzQEI0qLNAQiRps0BCMSqzQEIiKvNAQiKsM0BCIWxzQEIv7HNAQi2ss0BCOuzzQE=</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-797" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/initializers</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-801" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor/negotiate?negotiateVersion=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.96b3fd94c8264dc4</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-96b3fd94c8264dc4-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-803" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:32:26.894Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;bcbbcec00a804187bc00015ac1b0823d&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|bcbbcec00a804187bc00015ac1b0823d.5941439345d44d3d.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=t0V9pIAU_7u3BLJ_meI73w&amp;_=1684834346893&quot;,&quot;resultCode&quot;:&quot;0&quot;,&quot;duration&quot;:&quot;00:01:24.530&quot;,&quot;success&quot;:false,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=t0V9pIAU_7u3BLJ_meI73w&amp;_=1684834346893&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2023-05-23T09:33:56.551Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;,&quot;ai.internal.snippet&quot;:&quot;5&quot;,&quot;ai.internal.sdkSrc&quot;:&quot;cdn1&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;BlazorServerApp&quot;,&quot;url&quot;:&quot;${scheme}://mtblazordemoapp.azurewebsites.net/epd&quot;,&quot;duration&quot;:&quot;00:00:06.802&quot;,&quot;properties&quot;:{&quot;refUri&quot;:&quot;${scheme}://mtblazordemoapp.azurewebsites.net/notify?Seller=test&amp;InterinService=test2&amp;WireDate=&amp;RemittanceDue=&amp;FileName=123&amp;Notes=frefe&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;}}},{&quot;time&quot;:&quot;2023-05-23T09:33:56.552Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;BlazorServerApp&quot;,&quot;url&quot;:&quot;${scheme}://mtblazordemoapp.azurewebsites.net/epd&quot;,&quot;duration&quot;:&quot;00:00:06.802&quot;,&quot;perfTotal&quot;:&quot;00:00:06.802&quot;,&quot;networkConnect&quot;:&quot;00:00:00.016&quot;,&quot;sentRequest&quot;:&quot;00:00:01.723&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.045&quot;,&quot;domProcessing&quot;:&quot;00:00:05.018&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{&quot;duration&quot;:6801.5999999940395}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-775" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">t0V9pIAU_7u3BLJ_meI73w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834346893</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|bcbbcec00a804187bc00015ac1b0823d.5941439345d44d3d</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-bcbbcec00a804187bc00015ac1b0823d-5941439345d44d3d-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-804" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834437856</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.6f802713364c45d5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-6f802713364c45d5-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-806" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;protocol&quot;:&quot;blazorpack&quot;,&quot;version&quot;:1}&#x1e;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.c3e8bb9d227447aa</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-c3e8bb9d227447aa-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-805" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834439268</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.abb4e37f2e194859</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-abb4e37f2e194859-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-807" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�&#x7;�&#x1;��0�StartCircuit��*${scheme}://mtblazordemoapp.azurewebsites.net/�-${scheme}://mtblazordemoapp.azurewebsites.net/epd�&#x3;&#x7f;[{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:0,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxpinzEEy9xUMfaElMk57ClbYi20xQtA/XC733b4joqXf4Q/aeCBaPZy+osbaRHd2kC+cv3SZWTZCINbwLEqJB0fFojJ4/DgI1jOKbtpdCG2ez4thdnR6gQXhJ+Tq6vdxUL3v70TJBMlcUoepB1fttu0lE6qxgwuodTLalHUTkwtpJ+bdEjYxThH2sQXEOIp7g54bAApjH9CxxeDmkwPdagTI84S57DIivkBt53ujMxuu5C4zjaMpoab2G3dSKx223TA0rDNlVy5GCOqreSvVfvWvKklufbysuo6/j7FTLuY4ac3LWwoBj3w1f8t4sR2Itv5gdN/q+3TNe/nxMTHeSfT0&quot;},{&quot;type&quot;:&quot;server&quot;,&quot;sequence&quot;:1,&quot;descriptor&quot;:&quot;CfDJ8AnN5G8tjAtAqJktk0iFxphgUAcRxfvI4B8ylApHRU7HuKYpXPAdDqh/qN+V4cW+elCvPQWlkby9MQ5edbbM9FHvixs7i4iwHZxM5iEl/2IvWQxmE72ZtJG9G68EpZOPiQ2whIh6H3uwLtIgRN2Wp346NkDbHTOu6XwR+1MUsAiYcU1fhB9Fj5eChdqslxK49WS9rWm2xdw1TAp0ENZeFLem+KXP3dQUR4Tzxn6u27SsoJ9FisRnCxMZpkq7Q6aU6sTCOzfe6xHFpPAHqm/sPA8ArLl+f8k+Q18kO3Od9vjmgsWPr+m701d3CzzZ7eHepawYt8qDISGhm6PTwrBUlT+Pn/zjO/dNXTUYLqaUqojbydw4pA/PVyZ/PDfCATV6ad2pCSA5cmsyWNVPzMx3BrKUU2Ps3SvNuFRxSiWmfUHv&quot;}]�</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.3e28f1e2bb77484a</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-3e28f1e2bb77484a-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-809" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:33:56.443Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.96b3fd94c8264dc4.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor/negotiate?negotiateVersion=1&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.407&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor/negotiate?negotiateVersion=1&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2023-05-23T09:33:57.857Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.6f802713364c45d5.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834437856&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.408&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834437856&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2023-05-23T09:33:59.272Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.c3e8bb9d227447aa.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.418&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2023-05-23T09:33:59.269Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.abb4e37f2e194859.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834439268&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.438&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834439268&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}},{&quot;time&quot;:&quot;2023-05-23T09:34:00.713Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.3e28f1e2bb77484a.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:00:01.477&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;POST ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;POST&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-784" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834422</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-785" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834427035</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-810" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834463</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-811" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834469001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-813" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834510987</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-814" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:28483142,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;iEtDs0qk+kKH0Ksa07Aqww.1.1.1.1895921441.2.1.1.1895940687.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;29c0b968-f992-4329-bf54-fbc6955ba6c5\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31003}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22sryFxfUhmcxT6CjMyrm4Ig.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_50&amp;connected=true&amp;t=1684834511950</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-808" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834440709</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.08a0590ccdc94cab</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-08a0590ccdc94cab-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-812" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834504</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-818" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:34:00.709Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.08a0590ccdc94cab.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834440709&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.491&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834440709&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-815" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834511952</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-820" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">e��n�@&#x14;��jh&#x1a;K&#x5;*�m�(� U&#x558;�y�&#x13;���&#x11;�*&#xd;
M�.-_Ƒ	��شt&#xd;�,y&#x6;VY�{D~&#x4;x&#x18;l�&#x14;&#x10;������sf���A&#xd;�o����r7Ϧ�?}����&#x1f;;��I�y&#x1e;&#xb;x(|7���D�P&#xd;
&#x12;�ny&#x2;�HqWע�C�����\&apos;�5��&#x16;B���k���k��~30��x@ �8��E!t��!�0RBx(�rq�,���&quot;3�*&#x1b;�I&#xd;
�&#x7;�6_��+��12�A&#x8;&apos;&#x18;&#x14;&#xf;umQ�d�r&apos;�r�&#xe;�Hb�!n&#x10;��A-��[k&#x1f;&#x14;���4N���L&#x5;Q�$&#x1e;��E&#xc;�]]�&#x7f;d�&#xe;��0�98�vg&#x0;��&#xd;l	&#x3;��zV�&apos;0�B��&#xc;2��a�R&#x14;q�Q�&#xd;
a�)��!�:]�&#x5;�M�,�6���6l�&#x1e;6Q���&#x2;&#x14;O��&#xe;�٤eT�ʨ�/�����&#x1a;l�ox��ʢ&#x1a;&amp;����&#xd;
l&#x8;����ݙ�&#x1f;�gQ�b�����Hà&#x16;�Դ�W-�6.�&#x1a;Փx�D�&#x8;l%a�䗩�n&#xe;�&#x1e;F�z�U���}&#xe;��x���j�S�`��Ϋ����&#x10;�h}E�k���+=S��5�Le��G&#x13;&#x15;mcn1A$�&#x4;SV:����X��LJ&amp;J�L�&#x1f;����&#x0;�_</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1684834553950</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                  <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                  <stringProp name="Header.value">t=GwAWAbuEBAAUKFVEGReoCdHdlh1TorgVuqX+P2gOZgAAEEdWz9gfhFalgruLkqeESFjgALgLGPYsY08XvN45VGuoIChMX8Bf5lpmfx0ijftFnNCNwBbibT4dK9HQ/C6MxVnKl/+fpYB2Zd3D4EhspWMbxf2roxgs5UXEkiTYELMjEKQksZjHmNyokygQm949g7GoStWErcQrIRssMp4s0KQVLPrvIw8A8wnyg1qj9jj3cVUvCHUJilSgDKIex2qb8cwSY09snTbX0GWsflSYtea46XFwChpKmB1dSCGDFw2iyMuGQUxvVXAX2cqF2xbFRc+GnYpQOsjjxkM4t0i7P1k8g1PuKmcsBeU8TF2akixbBXiUHwE=&amp;p=</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-ECS-3.6.187.1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-821" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="environment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">environment</stringProp>
                  <stringProp name="Argument.value">prod</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="audienceGroup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">audienceGroup</stringProp>
                  <stringProp name="Argument.value">general</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="teamsRing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">teamsRing</stringProp>
                  <stringProp name="Argument.value">general</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">cdl-worker</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="buildType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buildType</stringProp>
                  <stringProp name="Argument.value">production</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="osPlatform" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osPlatform</stringProp>
                  <stringProp name="Argument.value">windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">efaebf33-be93-438b-9f13-e4eebf0bdc27</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aaduserid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">aaduserid</stringProp>
                  <stringProp name="Argument.value">efaebf33-be93-438b-9f13-e4eebf0bdc27</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">2b6c600f-b6cb-4329-af3b-1b32c62c440f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="experienceBuild" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experienceBuild</stringProp>
                  <stringProp name="Argument.value">23051100018</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agents" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">agents</stringProp>
                  <stringProp name="Argument.value">TeamsNorthstar,TeamsBuilds,Segmentation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">config.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/config/v1/MicrosoftTeams/27_1.0.0.0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-ecs-client-last-telemetry-events" elementType="Header">
                  <stringProp name="Header.name">x-ecs-client-last-telemetry-events</stringProp>
                  <stringProp name="Header.value">ecs_client_library_name=TeamsWeb,ecs_client_app_name=MicrosoftTeams,ecs_client_version=1.0.0.2023051118</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-822" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">mQ[O�@&#x18;�&#x6;d�&#x1a;T&#x12;���h�Hpƹu�%�lw�H���|l��&#x14;�e��V�w_x�&apos;��&amp;�&#x10;ҟ�o�&#x11;�rQ�&#xf;��9�˗0�&#x10;^i��*(��*&#xf;&gt;��������fǏ�%&gt;&#x18;�X$2&#xd;
��+�z4�$��мXqZ߲-=��_[�]?�)��l�M&#x17;cP߶-P߱��&apos;�R�xj b&#xd;
� 	�!N`�&quot;&#x2;�`%�&#x0;&apos;�&#x1b;_&#x7f;��8;*QO��*�A}&#x5f6;N.عsv��`�&#x11;��&#x12;DP8�&#x5;O&#xd;
�R&#x1d;&#x14;j_��2&#x1a;v���:�{�5��JGEVfI��ކ���tZ�N]�&#xc;y&#x4;q�&#x11;9���&#x10;�&#x1f;&#x18;&#x7;�t�*U�X�v�a�&#x1d;���������mx~ �..µ&#xc;2�&#x11;�&#x2;ɕ���2��&#xe;�]��BN�&#x1e;�&#x1d;߁����e�ב�&#x1c;&lt;=��1g&#x12;s	]�	��&#x1b;D)t&#x1d;)8�&#xe;��&#x7;�Mҋ�Yb��c���߭�˶&#x5;���+��J�z��\�K=�K!���?&#x18;�&#x1f;��tzƵ&#x1a;��&#xe;�E����@O���ɡq�[Y�g��&#x3;�Y�&#x4;�q����&#x5eb;�R�{*	��W��&#xf;��0&#x1a;6&#xb;f&#x1b;&#x1c;&#x17;Y&#x1e;����&#x8;8f&#xd;�:c�K���&#xd;.Ի��v��2��H�&#x19;&quot;\.9�bb��i�����;�T�(&amp;��&#x14;S�Q&#x4;&#x0;�&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mobile.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1684834569073</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-817" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834545</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-823" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:220910480,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;90ab0733-bd4f-4b16-838a-2e4a3141e634\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;16&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:220910480,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;90ab0733-bd4f-4b16-838a-2e4a3141e634\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;16&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834577</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-824" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834577</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-825" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:25103432,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;233da372-86e7-4f77-a179-b5dfe8e2b676&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5dbddc13-243f-45ad-a385-a1845e503d70\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:25103432,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;233da372-86e7-4f77-a179-b5dfe8e2b676&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5dbddc13-243f-45ad-a385-a1845e503d70\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834585</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-819" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834552787</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-826" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834585</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-827" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834594690</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-828" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:25114736,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d5e40e89-0c35-4dd1-b1b7-2ae90c0afa49&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;233da372-86e7-4f77-a179-b5dfe8e2b676&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;41c96f89-b341-4422-bede-2b3f11e95465\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:25114736,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d5e40e89-0c35-4dd1-b1b7-2ae90c0afa49&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;233da372-86e7-4f77-a179-b5dfe8e2b676&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;41c96f89-b341-4422-bede-2b3f11e95465\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834598</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-831" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834598559</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-830" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:151371233,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;w6nsvvcu50iwxdb8JmDlXA.1.2.1.1899316571.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;62e62b2f-d18d-40ea-a504-c1ab3d538b87\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31018}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22sryFxfUhmcxT6CjMyrm4Ig.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_50&amp;connected=true&amp;t=1684834598558</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-833" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:103186460,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;w6nsvvcu50iwxdb8JmDlXA.1.3.1.1899333309.1.6.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;78897c11-a701-47a3-9fd8-7b015f31cce2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22sryFxfUhmcxT6CjMyrm4Ig.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_50&amp;connected=true&amp;t=1684834599326</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-829" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834598</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-834" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:102168081,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;ffa92c35-1db5-4749-a9cd-bb3e104f352d&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;f10392c4-f105-4340-892d-0a58739ae9a6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:102168081,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;ffa92c35-1db5-4749-a9cd-bb3e104f352d&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;f10392c4-f105-4340-892d-0a58739ae9a6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834604</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-836" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="usersInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">usersInfo</stringProp>
                  <stringProp name="Argument.value">[{&quot;userId&quot;:&quot;8:orgid:fe11354e-7d6a-4b40-a838-24ab9ec60651&quot;,&quot;displayName&quot;:&quot;Dilip Kumar MARIPI&quot;},{&quot;userId&quot;:&quot;8:orgid:6e0ff76c-a303-4fac-828d-5147cb9ebd5a&quot;,&quot;displayName&quot;:&quot;Sarath GIDUTURI&quot;},{&quot;userId&quot;:&quot;8:orgid:d7558e5f-433a-482b-b6ee-c9c8b608e4cf&quot;,&quot;displayName&quot;:&quot;Shiva Prasad Rao SHAPELLI&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">HR64x64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="voidCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">voidCache</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img.teams.skype.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/beta/users/mergedProfilePicturev2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-835" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834604</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-838" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fe11414bfae3223e" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe11414bfae3223e</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ctldl.windowsupdate.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/msdownload/update/v3/static/trustedr/en/disallowedcertstl.cab</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft-CryptoAPI/10.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-840" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834615</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-841" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834616</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-842" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834616</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-816" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834532206</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.21166b3f261747ba</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-21166b3f261747ba-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-843" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834617</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-845" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834628</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-846" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834629</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-839" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:25128945,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b4f0bc05-38f7-4b73-91f2-3d73bce6cd7c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5f44de07-a91b-4cf0-9f61-3aa5599c6d82\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:25128945,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b4f0bc05-38f7-4b73-91f2-3d73bce6cd7c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5f44de07-a91b-4cf0-9f61-3aa5599c6d82\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834615</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-848" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="�223�3:::{&quot;id&quot;:4507861,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;44b06a42-9654-4b40-996e-44ba0fe781d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:274238546,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;25ff2dbf-e2d6-49b8-bdbc-0b38b6844454&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;8e86e43d-015e-4825-9032-161393893869\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123864831,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;eb406d56-e337-49f1-a6c5-399e86770d8e&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;cdb3b124-4a6b-462c-8a2a-69c36f3997d8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231226159,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;0db849fe-ad6c-4b62-9058-36ead671bd94&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;97f91349-253a-480b-bc34-98ceb0a7c4ed\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:102179154,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b5c94d39-883d-4264-8771-124afc527edc&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;ffa92c35-1db5-4749-a9cd-bb3e104f352d&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;723f0836-60ef-43c1-b31c-723487820920\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:25139903,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d5ffb0c-38a8-4643-9712-340516156dca&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;b4f0bc05-38f7-4b73-91f2-3d73bce6cd7c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1f60c1f6-3790-4c24-a922-66b2a0a30c49\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:73681149,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bda096c5-fc3b-4446-968f-9dae39a52a24&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;25ff2dbf-e2d6-49b8-bdbc-0b38b6844454&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;734ae308-473f-40f7-a3d0-20be50eac1d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:123877155,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;1050e3cb-9605-499f-92f1-88897f9d82c7&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;eb406d56-e337-49f1-a6c5-399e86770d8e&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;03198d68-b298-458d-a7fd-8bb592e08180\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:231236826,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;733edc9c-235d-4dac-9368-2e8f518be923&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;0db849fe-ad6c-4b62-9058-36ead671bd94&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e0656949-9251-4f06-be86-0528be6d6bd8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">�223�3:::{&quot;id&quot;:4507861,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;44b06a42-9654-4b40-996e-44ba0fe781d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:274238546,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;25ff2dbf-e2d6-49b8-bdbc-0b38b6844454&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;8e86e43d-015e-4825-9032-161393893869\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123864831,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;eb406d56-e337-49f1-a6c5-399e86770d8e&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;cdb3b124-4a6b-462c-8a2a-69c36f3997d8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231226159,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;0db849fe-ad6c-4b62-9058-36ead671bd94&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;97f91349-253a-480b-bc34-98ceb0a7c4ed\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:102179154,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b5c94d39-883d-4264-8771-124afc527edc&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;ffa92c35-1db5-4749-a9cd-bb3e104f352d&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;723f0836-60ef-43c1-b31c-723487820920\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31012}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:25139903,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d5ffb0c-38a8-4643-9712-340516156dca&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;b4f0bc05-38f7-4b73-91f2-3d73bce6cd7c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1f60c1f6-3790-4c24-a922-66b2a0a30c49\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:73681149,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bda096c5-fc3b-4446-968f-9dae39a52a24&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;25ff2dbf-e2d6-49b8-bdbc-0b38b6844454&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;734ae308-473f-40f7-a3d0-20be50eac1d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:123877155,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;1050e3cb-9605-499f-92f1-88897f9d82c7&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;eb406d56-e337-49f1-a6c5-399e86770d8e&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;03198d68-b298-458d-a7fd-8bb592e08180\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:231236826,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;733edc9c-235d-4dac-9368-2e8f518be923&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;0db849fe-ad6c-4b62-9058-36ead671bd94&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e0656949-9251-4f06-be86-0528be6d6bd8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834636</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-832" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;sryFxfUhmcxT6CjMyrm4Ig.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834599313</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d093665c45aa5cf-4eddb0316036911b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-849" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:35:32.208Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.21166b3f261747ba.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834532206&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.655&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834532206&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-850" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-851" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834645725</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-852" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">EZJ0QuLqLD9vndmtFOxopg==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-853" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834647545</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-847" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834630</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-856" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:207528793,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;179bcdc0-3867-4485-b4a3-cbcea0ad1b57\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;18&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:207528793,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;179bcdc0-3867-4485-b4a3-cbcea0ad1b57\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;18&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834648</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-855" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834648</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-857" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834670</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-858" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:123913852,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;51fc3fc0-93e2-4a85-a259-c60a6817ba05\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:123913852,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;51fc3fc0-93e2-4a85-a259-c60a6817ba05\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834670</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-860" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:231267760,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;23b4ce50-424c-4a9d-a591-7f71c2a6a8c2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:231267760,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;23b4ce50-424c-4a9d-a591-7f71c2a6a8c2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834670</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-854" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834648472</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-861" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:67006580,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;BUvAwOU6V06GyesDG1WjjA.1.1.1.1901589598.2.1.1.1901554759.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;fe81d0ae-ff2b-4bd2-9002-b4064857d3e6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31007}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834673319</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-862" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834673321</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-863" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:66979271,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;BUvAwOU6V06GyesDG1WjjA.1.1.1.1901589598.2.1.1.1901554759.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;fe81d0ae-ff2b-4bd2-9002-b4064857d3e6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31007}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834674266</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-859" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834670</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-865" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:123925149,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;205e1d87-744b-46f4-bb9a-53d2c81f99d3&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fc7b5d97-cb9f-4608-a63d-c8707f5e1d25\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:123925149,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;205e1d87-744b-46f4-bb9a-53d2c81f99d3&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fc7b5d97-cb9f-4608-a63d-c8707f5e1d25\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834683</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-866" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-867" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834683</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-868" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:231277684,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;98868049-6077-442e-b3c1-a363af73226f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d815d4b0-9737-4f8b-8faa-6873410e2ae2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:231277684,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;98868049-6077-442e-b3c1-a363af73226f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d815d4b0-9737-4f8b-8faa-6873410e2ae2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834683</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-870" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:123925999,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c41fc05f-32ba-4cf2-b8cd-b32e06e91859\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:123925999,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c41fc05f-32ba-4cf2-b8cd-b32e06e91859\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834684</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-871" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�XMs�ƙ&#x6;m}Ҕ����&#x5ee;�&#x1b;%U�&#x1;&#x16;�&#x1b;��e8$&#x1d;V$��P�х&#x1;z$���&#x18;���TN���U9�=7&#x1f;�&#xf;rثK�=�^����&#xd;�&lt;͑(Kڭ��/&#x7;�o7����}пzWm�&#x7;����Y[}�?��_&#x7f;��&#x7f;��?n~��ݝB&#x1a;��,}�k=ͭ����δ�E53Z���?]x���Fs����Ç��l��x4&#x11;�E�&apos;�?��8���#�\�&lt;&#x17;��&#x11;bwl��&#x18;���~��#�����m^��h/&#x1b;y���&#x1d;��X���&lt;�z&#x7f;�w�o�&#x7f;Ѵu����&#x1b;�&apos;�n�&lt;����7/z?Y�~��|;ߖ�J�-�����Y&#x1f;����&gt;�C9&#x4;��&amp;���&#x6;&#x8;&#x7f;�������.ݐ��&#x17;۹VX&#x1;h��&#x81;���&#x0;y�A{&#x1a;��&#xf;us�A���n��ln��g{&#xf;O�5�l����.S�z[:��&#xe;n{5�Szw/+v����0��x/�vscGbog&#xf;&#x16;~���on��.�.+t.2m�;�%eV&#x18;g��F�(�&lt;�&apos;:����Q���͍��\�Vò;}����]ݬ�&#x1b;UU�j�&apos;�&#x16;����&#x1a;�6&#xc;CrcTס�T�&quot;&#xc;c�7&#x1b;yry�h���ɲ��G�n���bޕ�N��&#x1e;O�Ж}�a�bq�κ�e�h&#x5;�f&#x1d;�M&#xc;&lt;&#xc;��tm���+&#x18;�2���{M�wC7[nO&#x1e;�}8�v���Y5�z�W��e���&#x1e;���Z��&#x18;��y�z���&#xe;�&lt;I����E�&#x6;@��&#x12;grs���k�&#x4;��X��&#xf;�x�p&#x2;��2&#x1a;��ޭqtU�s^���nx�T!Zx8DP��y&#x16;%WvW}|A������Z��^���;$&#x4;�����x����x:sRx&#x1a;�P��\����iS���-+7u��e�&#x8;�ia&#x10;mk��,(7��Z��%[q�&#xb;��#|���{����&#x7f;���JujR�&#xd;
��&quot;�:�&amp;�6�.�&gt;Uy�D�t�L�l�\�|�E�1&#xb;��ߤƦ�H�H�J�M]�:�:�:��&quot;-�i��B��I&#xb;�&#x16;.-������&#x17;�`9�B3h&#x0;��ϧBH4��&gt; &#x13;&#x12;zR��&#x1f;0���0&#x6;�Ba&gt; &#xd;
`&#x14;&#xd;
��(&#x0;Ph&lt;&#x1b;�6&#x18;&#x7;Ta��9&#x0;,&#xc;�Y�Y&lt;[&lt;;�&#xb;��a�C��O0&#x6;#&#x4;L&#x10;�Ax�&#x5;��c�c�c&#x1c;6�4B&#x13;hp&#x1f;�9&#x1c;&#x8;[$l�&#x2;c&#x2;c&#x2;}�E��§&#x12;�H��Ζ胣��h胗��&lt;�!5�4#�&gt;�&quot;&#xd;�a�4&#xc;&#x15;�Z�Y��&#x16;	�K��q��w&#x15;x&#x6;vY`����&lt;ϰ&quot;����w&#x5;�&#xd;
X�@��Q	�.Р&#x7;�+�[I�&#x1;���&#x15;s�I&#x1;�����`n09�{&#x5;�&#xd;
~W���g&#x5;|&#xd;
���.�C����7��&#x1d;&#xd;
&#x18;&#x15;0*�W!I&#x14;�D!M&#x14;�D&#x1;�B�(�V𷂯q��I4�f�,�C�&#x18;�E�&#x6;&#xd;��C�o�����S+&gt;C&#xf;��1�ѯ�&#xf;�Zc&#xd;�1d��8�Eÿ�&amp;hX&#xb;�����&#x1b;&#x1a;9���j�����Wÿ&#x1a;���U#?&#xc;p&#x1a;�4�&#x1;V&#x14;	4��f�a&#x1c;8&#xd;|m�k&#x3;_&#x1b;��&#x0;�&#x1;n&#x3;&#x7f;&#x1b;`7�&#xb;&#x3;_&#x1b;�� �Q;�0&#x17;v&#x18;���&#x6;&#x13;7&quot;�`����&#x1c;�``�A&#xc;&#xc;�(�(ba��&#x6;;�Xn[�!�E&#x1f;�b��&#x6;�&#x19;�g�;&#x6;6&#x1a;�h`�A|&#xc;l4�� �Q�R�&#x1c;���&quot;&#x6;&#x16;�Y�W&#xb;�[�f&#x5;�q(�&#x1e;&#xb;{,���=&#x16;�c%�=N&#xb;̇=&#x16;vX���&#x16;�&amp;4�!�-r�&#x2;��~�&lt;`&#x10;&#x3;��j��&quot;&#x16;&#x16;x-�Z`��h��&quot;_,��&quot;&#x6;&#x16;8-�`�G&#x1d;�:��!&#x16;(�h8�&#x4;&#xf;*���&#x5;�O&#x1d;b�����&#xe;{�&#x1;�&#x3;f&#x7;�&#xe;�&#x1d;0;��!�&#x1d;����&#x1d;�:����&#xe;�&#x1d;0;`u8&#xe;Ql�0&#x6;̎&#x7;#O�x4�&#x1f;~v���&#xe;y��&#x1;��o�v�&#x4;&#x1a;&#xe;M`-��B�&#xc;�&#x7f;&#xb;�L&#x1;����&#xd;
&#x1d;�-��&#x0;^�+4��&#x16;�ȗ&#x2;yR��&#x5;r�&#x0;f�&#x1;4�k���&#x5;�&#x2;�&#xb;��0&lt;��l�&#xc;]�}&#x1;&#x1b;&#xd;
؀���1�R��&#x2;�&#xb;�/&#x1c;�s��S&#x1e;��&#x0;�����&#x2;{��&#xe;&#xf;;&lt;���-&gt;g�O=|�&#xf;&lt;��G&#xc;&lt;l򈁇M&#x1e;6y��a�G&#xc;&lt;b�%�&#x6;��&#x7f;&#xf;�&lt;��G&#xc;�f%���{������-&#x1e;q���&#x16;&#xf;[&lt;���&#x1e;&#xf;{&lt;l�G�{��K&#x1e;q��{��x�(�\�ǳL!�&lt;l�8;Q�X�b�Bh X�X�r�&#xd;
&amp;��Z��X�V9�U������#�&#x15;�`嚏,W���&#x2;&amp;��+-�YNc�&#x2;of��&#xd;
�VΪ��X&gt;���h�Q���u+/8��JA�&quot;��Xh9ʒ�����&#x14;��Rľ��&#x15;&#x19;!&#x13;g5���J,&#x10;&amp;&#x11;뱐��&#x1d;&quot;b	&#x16;�H���siQ���p&#x1a;+�0�ƺ&#x1c;&#xb;s���r�u9&#x16;�X�c)&#x16;�H&#x14;\�f	Z$h�(���(˳�&#x1c;�Y�R�R&#x1d;�4&#xb;�`�� ���,Ђ&#x15;Z�DC(&#xd;
&#x12;&#xb;���Z��=��0�z�WF�&#x11;�&#x7;�e��&#x0;C+&#x19;ZI*&quot;UT�\2&#x12;I�H&#x6;�&#x5;]��&#xb;�s�z.X�!�B�&quot;�&#xd;���Cp&#x1;恤�$�AZ.E���&#xf;�Q&amp;�t�&#x1b;q�&#xc;F�u�&#x2;�d&#x0;�+�M�&#x1e;�$2�&#x1e;&quot;%��&#x14;��l��g�&#x17;,��U_�H�&#x18;d&#x16;z&#x8;�b&#x4;&#x15;���Cp&#x1a;�+&#x2;&apos;&#x1;��&#xc;�&#x3;�]E̊�&#x15;��&#xf;&#x8;&#x12;&#x0;��/&#x14;&#x3;�&#x18;P&#x12;&#x0;A&#x6; X����#	&#x10;d&#x1;�&#x14;@�&#x3;&#x8;&#x12;&#x0;&#x8;O�G&#x15;&#x6;T3�d&#x1;&#x10;&#x1c;%W$!��(�ь&#x1b;	� C&#x0;kd&#x1f;�DA&quot;�$�#ã&#x19;&#x1e;&#x12;&#x2;&#x8;.E&#x3;�&#xd; 8����XM&#x3;5&#xd;�&#xc;&#x5;)� g&#x10;$&#xb;&#x10;죁�iK�&#x0;A&#x15;�f(4C�i��m�&#xd;�7$�LLR&#x6;A� H&#x1a;&#x4;Y� e&#x10;�&#xc;&#x10;�d�}*�^&#xe;�@�&#x6;A�&#x0;�i�*�&#x3;��&amp;�d&#x1a;M� H&#x1f;��|9&#x12;e�J�&#x0;���pd&#xc;&#x10;�c&#x4;&#xd;M%{&#x10;�&#xf;��&#x1;��si%�&#x2;&#x4;&#x1e;I&#x1a; &#x4;&#x5;i7�ei&#x1b;Y� e&#x10;�&#x16;�8@h&#xd;
KAeF�2�,7&#x13;y&#x2;D$��@Y��&#x12;���&#x17;&#x17;edH&#x1a; �L��p-��宰�&#x15;��g&#x19;&#xf;�&#x7;A� �&#x1f; �!@��&#xc;&#x10;��&#x1f;&#xb;&lt;#H&#x1d;&#x4;y&#x3;&#x4;&#x7;&#x18;&#x5;R&#x7;|J�Qŏ&#xd;
&gt;ұ�pI&#x10; �&#x1e;�I� H&#x12;��_!&#x4;I� H&#xe;���_��xz�$@P�H&#x1d;�9�&#xb;&#x19;� e��&#xd;
�&#x13;ك }���&#x1;&#x1e;�&#x5;�Lڀ�&#x19;�P�&#x17;�	�`��4&#x8;�&#x2;Qб�&#x6;&#x10;T�w&#xb;�&apos;O&#x10;$&#x7;��@�&#x16;@�;�&#x19;AV&#x0;&#x1;��&#x5;&#x10;&#x4;D�&#x5;�&#x17;��$&#xd;
&#x10;�K&#x13;&#xd;
�U�&#x4;A�&#x0;�O+z�dA�-&#x8;�&#x5;A�&#x0;&#x11;?�8��&apos;&#x1f;��4��&#x19;�&#x1b;�&#x19;A6 H&#x5;&#x4;y� &#x11;&#x10;d&#x1;&#x10;\����XV~�ҏ*�����.���Ͼ���&#x7;@�!���z�&#x1f;{���%&#x5;��X�%˻de����&#xc;ͯBK&#x15;&#x1b;�&#xf;9�8�ϴ&#x1c;�L.����&#xb;��6$����M�$,�K&#x7f;&lt;�;������f&#x1e;&amp;φe8���y9h?�&amp;���⬜&#xf;!�v0��ay��&#x1e;7mx���������=��mH&#x1f;�!���&#x3;�|v��N&amp;�&#x1e;&apos;U9�o��;�q&#x1c;VC��R&#x18;��{����v&#x19;���S��&#x1b;&gt;[5us�﹌K.�+�&apos;a�\��;���&#x6;/6x��k�Wo5�|q�t~s����j&#x1e;V�I�$�����&quot;�g&#x17;1/&#xc;}�p�ˡ��ə^|��_�&#x1f;;�xg&#x15;/_�&#xb;dD�����ɪyG&#x17;�����&#x10;�Wg��p6�&quot;k�L�}�&gt;Jn&#x1c;�a�o����&#x10;ܑ�`&#x1b;�Bd�yE6-gu6��&#x12;3efS|@�5����-�&#x15;fe�Δʦ��&#xc;_���τʂ&#xe;�ϧu%]r���A��߆�c�i&#x8;Y!*������9���&#x1a;|&#xf;�&#xd;
&#x1f;��&#xf;��e&#x15;&#x1e;w�&#x1a;���r:&#xf;�&#xb;�m~��l��U�,&apos;�r&#x19;�����bܵ����&gt;��H�[��&#x15;Ro��!&#x1c;�;ϖa��0���qW��[�ɪ�����p&#x12;���&#x7f;qW�%�v�5&#x3;YP�&#x58b;��=7��t�H�_N�&lt;���m�ż|�E��g]�&#x7;��m9�&#x15;j�,��)&#x1c;,}V��4&#x13;S%+++��Yr�/ۡ�h�Y,&#xb;;-��L&#x15;&lt;&amp;9��ө�l0��͔�1��`Q�_���jq��u��Y�1�&#x0;/��&#x15;F�l���&#x3;e&#x17;�5���&#x1f;e`-�4�Rg���h�v��|&#x17;+3;xG8�&#xf;&#x1b;�m�`�=�=xyC��]�&#x1f;bg�1Hg���&#x1e;�]w�������/�E&#x4;u�8,�f�\�����ͻ��;ɇ�������8�ef򏯏�&#x1d;Tm��0G&#xe;A㍹�XƑ&#x1f;�&gt;���%�?~�&#x1f;g�n&#x19;��Q[&#x1f;=y&#x4;���E�̷��@&#x1d;���(��3&#xd;
&#x1a;&#x1f;���`����&#x1d;��j��?��T&#x18;������۠�Qs&#x1b;  и&#x1e;5&#x10;��у��]�T�&#x1a;�\�N��&#xd;
w�a&#x19;7&#x1;=�����O�U߇v9&gt;W�|&#x15;V�@��&#x19;�&#x1e;�����/�t����q&#x1c;��M�_���&#x5;wW���=L{�t��ux��j����&#xc;Z&#x3;��~� &gt;&#x7f;&#xe;&#x1b;V�γc&#x1c;Q��&gt;�&#x3;&#x13;&#x18;{ҽrN�����0Z-&#x1f;�&#x16;����|���$��a�\��&#x11;,���ۊ�]_�W��J�5��j9`���&gt;��7�a�Z,�~�&gt;&#x6;��Q������l&#x19;&#xc;ݜ�(�֖&#x1b;%�T&#x11;�O�ݣ�І�گ[&#xf;�&#x1f;&#xd;aQr�&lt;&#x13;_���&#x1f;B�1����&lt;���&#x7f;&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mobile.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1684834694108</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">8255342a9a4d4b069b7adbf4798cf544-bf74f026-b3db-4745-a135-a4ad2ba90b51-7489</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-869" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834684</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-872" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="5:513 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">5:513 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834706</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-874" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="�131�5:514 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:515 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:516 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:517 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�363�3:::{&quot;id&quot;:25147332,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d5ffb0c-38a8-4643-9712-340516156dca&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1f60c1f6-3790-4c24-a922-66b2a0a30c49\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�363�3:::{&quot;id&quot;:73689888,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bda096c5-fc3b-4446-968f-9dae39a52a24&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;734ae308-473f-40f7-a3d0-20be50eac1d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123885920,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;1050e3cb-9605-499f-92f1-88897f9d82c7&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;03198d68-b298-458d-a7fd-8bb592e08180\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;2&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231244195,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;733edc9c-235d-4dac-9368-2e8f518be923&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e0656949-9251-4f06-be86-0528be6d6bd8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123913850,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;51fc3fc0-93e2-4a85-a259-c60a6817ba05\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231267759,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;23b4ce50-424c-4a9d-a591-7f71c2a6a8c2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:123925147,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;205e1d87-744b-46f4-bb9a-53d2c81f99d3&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fc7b5d97-cb9f-4608-a63d-c8707f5e1d25\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:231277683,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;98868049-6077-442e-b3c1-a363af73226f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d815d4b0-9737-4f8b-8faa-6873410e2ae2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�223�3:::{&quot;id&quot;:4525428,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;44b06a42-9654-4b40-996e-44ba0fe781d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:220960860,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;90ab0733-bd4f-4b16-838a-2e4a3141e634\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;26&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:207528791,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;179bcdc0-3867-4485-b4a3-cbcea0ad1b57\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;36&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:123925997,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c41fc05f-32ba-4cf2-b8cd-b32e06e91859\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;47&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:215300722,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6f0e5ee0-3324-454e-bc09-269840c667b6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;54&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">�131�5:514 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:515 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:516 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�131�5:517 ::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;etag&quot;:&quot;2023-05-23T09:37:17.3676973Z&quot;,&quot;tag&quot;:&quot;&quot;}]}]}�363�3:::{&quot;id&quot;:25147332,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d5ffb0c-38a8-4643-9712-340516156dca&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1f60c1f6-3790-4c24-a922-66b2a0a30c49\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�363�3:::{&quot;id&quot;:73689888,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bda096c5-fc3b-4446-968f-9dae39a52a24&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;734ae308-473f-40f7-a3d0-20be50eac1d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123885920,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;1050e3cb-9605-499f-92f1-88897f9d82c7&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;03198d68-b298-458d-a7fd-8bb592e08180\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;2&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231244195,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;733edc9c-235d-4dac-9368-2e8f518be923&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e0656949-9251-4f06-be86-0528be6d6bd8\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:123913850,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;51fc3fc0-93e2-4a85-a259-c60a6817ba05\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}�364�3:::{&quot;id&quot;:231267759,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;23b4ce50-424c-4a9d-a591-7f71c2a6a8c2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:123925147,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;205e1d87-744b-46f4-bb9a-53d2c81f99d3&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6662eed7-851d-4a95-9c22-e84586acaeac&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fc7b5d97-cb9f-4608-a63d-c8707f5e1d25\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�444�3:::{&quot;id&quot;:231277683,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;98868049-6077-442e-b3c1-a363af73226f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6046c9fe-5327-4725-a1e3-bade70b50877&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d815d4b0-9737-4f8b-8faa-6873410e2ae2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31027}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}�223�3:::{&quot;id&quot;:4525428,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;44b06a42-9654-4b40-996e-44ba0fe781d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:220960860,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;90ab0733-bd4f-4b16-838a-2e4a3141e634\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;26&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:207528791,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;179bcdc0-3867-4485-b4a3-cbcea0ad1b57\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;36&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:123925997,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c41fc05f-32ba-4cf2-b8cd-b32e06e91859\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;47&quot;},&quot;body&quot;:&quot;&quot;}�225�3:::{&quot;id&quot;:215300722,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6f0e5ee0-3324-454e-bc09-269840c667b6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;54&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834706</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-873" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834706</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-875" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:215300727,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6f0e5ee0-3324-454e-bc09-269840c667b6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;11&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:215300727,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6f0e5ee0-3324-454e-bc09-269840c667b6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;11&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834713</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-864" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834674268</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-844" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834623869</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.928a5df644a04904</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-928a5df644a04904-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-876" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834713</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-880" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:109469658,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;8948af2f-75f5-4ace-a0a0-b00075663dd3&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;9d181747-6a70-42d4-9463-cdf8c1fefcc4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:109469658,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;8948af2f-75f5-4ace-a0a0-b00075663dd3&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;9d181747-6a70-42d4-9463-cdf8c1fefcc4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834722</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-881" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientDescription&quot;:{&quot;appId&quot;:&quot;TeamsCDLWebWorker&quot;,&quot;aesKey&quot;:&quot;&quot;,&quot;languageId&quot;:&quot;en-US&quot;,&quot;platform&quot;:&quot;electron&quot;,&quot;templateKey&quot;:&quot;TeamsCDLWebWorker_1.6&quot;,&quot;platformUIVersion&quot;:&quot;27/1.0.0.2023051118&quot;},&quot;registrationId&quot;:&quot;0bf19ae5-1da0-4802-aa39-a6de909ca974&quot;,&quot;nodeId&quot;:&quot;&quot;,&quot;transports&quot;:{&quot;TROUTER&quot;:[{&quot;context&quot;:&quot;&quot;,&quot;path&quot;:&quot;${scheme}://trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com:3443/v4/f/ctEHQsQ1EkKn9_LvO4Odhg/&quot;,&quot;ttl&quot;:86400}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/registrar/prod/V2/registrations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/statics/hashed/precompiled-shared-worker-5cd35bd47b731d1d.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-882" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:37:03.871Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.928a5df644a04904.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834623869&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.759&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834623869&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-879" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834722</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-883" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:123968824,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;882f1edb-cd5b-475e-a310-e3b1470b86a1&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;46a2df0e-57a0-40fd-959e-714eae2623a4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:123968824,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;882f1edb-cd5b-475e-a310-e3b1470b86a1&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;46a2df0e-57a0-40fd-959e-714eae2623a4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834733</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-884" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834733</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-886" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:109480770,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d20da9b9-edda-49da-9bc9-a588b6071928&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;8948af2f-75f5-4ace-a0a0-b00075663dd3&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;cb972b03-a9a5-4a08-a483-45e9302d69ee\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:109480770,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d20da9b9-edda-49da-9bc9-a588b6071928&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;8948af2f-75f5-4ace-a0a0-b00075663dd3&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;cb972b03-a9a5-4a08-a483-45e9302d69ee\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834735</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-885" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834735</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-888" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:123979278,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dad42e36-5d54-4677-a3b7-758201e38e2a&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;882f1edb-cd5b-475e-a310-e3b1470b86a1&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c20803aa-6e28-471c-ae82-ebe426933e68\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:123979278,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dad42e36-5d54-4677-a3b7-758201e38e2a&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;882f1edb-cd5b-475e-a310-e3b1470b86a1&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;c20803aa-6e28-471c-ae82-ebe426933e68\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834746</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-887" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834746</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-889" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:16853439,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dfae2d87-3af2-414c-a14f-46354f79b30a&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;748e78f6-8a60-4402-8058-5a7da6ada87d\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:16853439,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dfae2d87-3af2-414c-a14f-46354f79b30a&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;748e78f6-8a60-4402-8058-5a7da6ada87d\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834747</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-878" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834715187</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-890" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834747</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-892" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:16865379,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bbeaf157-396b-4f3e-add6-eded8c91d09d&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;dfae2d87-3af2-414c-a14f-46354f79b30a&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;83fc1dfe-3673-4330-b73c-df0b4c6e08a4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:16865379,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;bbeaf157-396b-4f3e-add6-eded8c91d09d&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;dfae2d87-3af2-414c-a14f-46354f79b30a&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;83fc1dfe-3673-4330-b73c-df0b4c6e08a4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834760</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-894" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">apikey,cache-control,client-id,client-version,content-type,time-delta-to-apply-millis,upload-time</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-895" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�}ks۸����W��i��PC&#x10;$H��Vmn3ə8���L�@&#x12;�x,�:$��3�����]�d�V&#x14;ف�R&#x11;�{���&#xf;�&#x0;�&#x1a;%b.G�F�\f~�䣇�&quot;V_,Ӣ��&#x18;&#x16;}g�G�|D�11�&#x7f;B�K�A&#x2;{l���Wy&#x5;���&#x1f;PnZ�G�&#x15;�TR!M�	�����&lt;H+?&#x17;�G&#x7f;���&#x2;�+K!�Όߤo��̠ck� Y.�=zDl�B�E&#x1a;L!�k3�9�&#x1b;}y8&#x12;��*E�/C��2����F�&#x13;&#x5c8;��2�&#x8;&lt;��C/&quot;�H��l�C�7K&#x3;1�&#xe;��x&#x7f;�1���&#x11;a:&#x17;q&#x2;&#x11;�&#x14;�|&lt;��,�Ө&#x18;&#x7;�&#x1c;Z�g�&apos;U���L&#x6;E�&amp;��&#xf;eW�����y�I���9|4�&#x7;���?M�\&amp;@�H�r	��9V[&#xd;�oq&#x12;BY&#xd;u_�{@L�0����l&quot;��&#x8;0�&quot;]���&#x2;�AL&#x13;�C��{�&apos;d���󈪜sY�P&#x14;&#x2;�&quot;E4��(�J=zľ���Q��&#x17;�|w��&#x6;-D&quot;g����݄�Ϫ$�,]Ȭ�e^&#xd;b&#x1e;�H��4/�NE&#x2;��K����@d&#x16;���q:[N⤊&gt;��&#xb;9o#��3$l�U�Y|)��_�&quot;&#xb;��dl����/��/�(�F&lt;&#x19;n��&#x10;��Q��&#x19;�b�N��� ��8��&quot;�Wqr�L}��O�,�3Q@g&#x14;[qa��Q�&#x8;\&#x1e;&#x18;�c&#x12;�sJ��r&#x16;�&#xe;�]!����g�2�R*�&#x3;&#x7;=�J���AQҥjL&#x1b;S�4��&#x2;�;_����`&#x14;�9���c��&#x11;&#x10;�����C��[9)k&#x8;�&gt;T�7��䱗� �bu�uR(�&#x1c;����/������&#x38b;1?��&#x12;9;J39��e&#x12;BAg�(�&#x5f9;�&#x1c;��?%~|!��&#x14;&#xb;�&#x8;SՇ&#x5;&#xd;
3q(&#x6;?&#x0;a&#x16;iV�m�&#x7f;�P&#x18;���mz&#xf;�S�t)�~D��KN&#xd;&#x10;o��&#x11;���%|7�0�\,D&amp;&#x2;x&#x4;sX&gt;&#xb;�iF&#x6;��C&#xe;�&#x1b;&quot;��A|j&#x5;�&#xd;
lی �[�&#x19;���Dfb&#x6;&#x1f;��&#x13;������O�|!���&#x7;�&#x7f;ƿ.?�����N����~��eH��{�Ë��&#x7f;}&#x1c;a�A&#x1a;���{&#x16;����&#x1f;�/��ٟP���i&lt;���	&#x7f;��&#xb;�y���O~�u�:���&#x7f;��_�d�&#x14;�VKAo@+�3Md+�%e^u��2WݞI���&#x13f7;o~ki�X�ȼMU�&#x13;9�A:jZU_)�N&#xe;�7&#x17;�U�������6�&#x14;/&#x16;&quot;�q&#x2;.�������&#x10;���xn&#x10;�S�2��İ&#x1f;V&#x1f;8N,&#x6;�U��&#xe;�n�`uإ���`&#x13;b٘ì?P&#x13;��&#xd;R���c&#xe;fa�&#x7;�!�Sj��&#x7;�!��&#x16;j{���H&#x7;�9��A�ϕzF&#xd;�4z:�!\�-��E�.����~h&#x14;&#x1f;&#x19;��i�	!&#xc;�&#x1a;&#x14;Z ��q&#x16;L�&#x2;��2�����&#x12; �6���DƠ��8�B�&#x8;���{)&#x7;��9D&#xd;�&#x1a;&apos;��:&#x3;!��&quot;�&quot;ѫ&#x1c;J����k:m�kPV��&#xf;&#x7;ZZ~�u��&#x14;A�2k�&#x0;_�&#xc;�&#x1a;���7_Ί��Tꖇ�&apos;iZ&#x13;�}r���PG=+I�B�^�H�6��Ռ&#x1e;�%,&#xd;&quot;�F�D�}-�OivQǽIfq&quot;UE��g2&#x1c;�&#x7;&#xe;�Ξ�O��`�U�&#x7f;�b�&#x1b;d�Y�6a&#x1c;@�PMG�Z+&#x1d;!n�#�&#x0;_���q kA{��^5&#x1f;��-%j#&#x2;��,��쪗�Ii�TE�֬yҘ55&#x7;֦��O&quot;&#x17;��焸�-&#x3;�&#x12;��\�z��p�Z��� �쀀9h��5C&#x1e;x���B2KѲ&#x10;Y&#x1;,���J��E\�&#xd;
Ï&apos;�8��&#x7f;Ƴ���&#x19;�&#xf;��j���g&#x7f;{&#x0;&#x1f;���&#x7; _��&#x0;�o&amp;Ar~���&#x1c;�){�&#x1f;��xw���Y|!&#x1f;�&quot;���?&#x1f;�C���B&#xf;�N�t.&#x7f;&quot;�&#x5;\&#x18;&#x13;�&gt;�&#xd;����?8&#x13;����Fk��Y�W�?�&quot;�&gt;M�_&#x14;&#x13;)�&#xf;�d2	e���Ru�`g���K�4��^&#x11;�:&#xe;�m^��� �/�J�����똍vO&#x1b;��h�VF�[�&#x6;#��k�}��ڀ�&#x6;�6�&#x1;�&#xd;xm�k&#x3;^&#x1b;��&#x80;�ڀ�&#x6;��&#xc;�y&#x1a;�Yk�?�(M0$Q�͕�~&#x1f;�x��&#x1;&#x1b;~Kooc�#K&lt;A���&#x11;��LQˣ�&#x5;`T&#x19;&#xc;�&#x6;�q&#x10;&#x1a;�F�&#x11;F,�����9u&#xe;�&#x1d;�&#x1c;�^�&lt;�&#x3;��ؔ��&#x18;�&#xc;&#x0;&#x1;�&#x13;	ߌ�&apos;L�u*9�#�&#xc;&#x19;�&lt;��ͬ�.��&#x14;����&#x0;C&#x3;&#xc;&#xd;04��&#x0;C&#x3;&#xc;&#xd;0�&#x1e;�`�&#x3;&#x18;��&#x1;�&#x6;&#x18;�&#x2;&#x18;0�&#x6; @�q~�QDՓ�&#xe;�R&#x1e;!T&#x0;AˊzN���3Ep�&#x1;4&#x6;�&#x18;@c&#x0;�&#x1;4&#x6;�&#x18;�na&#x0;6��8 &#x6; &#x1a;&#x3;|o&#xc; J��Ρ�������\}&#x15;��9��2;���J��i��ҏK1;�&#x2;f&#x1;h�|q����υL�؏g���lWe|�&#x18;E�cо�Z���&#x17;�WfEI	���c��I�JC��&#x0;�gqZ}�H�:]UoU,Tz��˙�z�n��5*�q��&#xd;�y%�I0=��4&#xd;�&#xd;m�VJ�S��e�e&#x1f;���;�EѠ����h*�&#x5;&#x10;̢&#x1a;��&#x1c;F&#x5;�T&#x5;&quot;��b��hW.��4��(K�,��4ʺ&#xf;(�yD�1��&#x1;Q��Q�FY{EY�B&gt;^�q�dY&#x14;ir���g0���s�ex�4�&#x6;&#x10;�--&#x1a;��c�ҕ�&#x1d;F��Yč0���xBD\�&#xe;aA&#x13;�y&#xd;
&#xd;
,���&#x14;F~&#xd;���`�&#x13;)&#xb;&lt;�Q&#x1a;g�L&quot;C*�m&#x1;*4&#xe;�Em�z ��&#x13;I�g&#x19;��2C�B&#x1a;~&#x4;&#x1f;&lt;?�&#x0;&#x18;��,V*_���j�&#x6; ����qj�h?�6&#x3;��y���ևf&#x5;�a�7��K��p�|�&quot;�Q1U�OD&#x2;��2Π���I�LN�pd�d�,����^&#x3;64�?��&amp;��&#x1d;&#x6;�}�jm���Z&#x10;u&#xf;��0Y������{xT�&#x1e;#�&#x5;Z��&#x5;�En&#x4;D����gxQD&#xd;BB�9�&#x4;�f�&#x0;�&#x6;`��&#x17;Yc�W�i&#x13;�&#x1f;�4&#x1d;�Jlߓ&#x16;�&#xc;&#x12;��M�&#x1a;��}õ	L�6&#x13;Adm��&#xd;,nz��F�S��ʮ��&#x16;]Z��A�`p&#xe;��\&#x6;i&#x12;&quot;���R�K�/5���R�K�/��˼2֮C���&#xe;�0�F��&#x11;a&#x16;�d2�&#xd;
����&#x7;]{u���p���&#x18;[��Wk���&#x0;��&#x2; ��S���Ɯ&#x15;&#x12;qc^�&#x3;&#x18;�r~��cS��,����Ǻ�����x�P����8 �&#x1;P~&quot;C�,��B@��0&#x8;A�&#x17;9�&lt;��	��O jK�E�&#x1b;� ������ፚ��Y��]�����V���&#x0;&#x4;���e���_��)��sE�R��+��lY&#xd;&#xd;T�Vq�J��&#x7f;%&#x16;&#x19;J�u��J&#x13;`�`&#x1c;�K&#x0;*�Z&#x4;P�&#xd;
֍kD�&quot;w�d*o���&#x1e;êBva٪u�H³t�&#x5;�i�I��(p�hdS�Bi���e!ʵS��gU&#x1e;��`4�/q�&#x2;�z.���䥜�b��3ԠXL��]&#x1a;�?P&#x3;vE&#x13;��&#x15;��ɾ&#x14;��&#x18;�&#x1b;H&quot;�*�I&#x12; &#x18;X�&#xe;ΓJ?���m&#x6;T�J?����&#xf;�&#x6;��~��v1�+V&#x1;n����&#x382;_��s��&#x1e;&#x7;TU�4-�&gt;�v�&#x1e;&#x1b;X�a���p�C&#x11;�1W�n`f�@��&#x7;D&#x0;�v&lt;C&#x12;�A��4���F��@pA&#x1d;7�՜�2y�&#x17;&#x1d;��&#x18;`OgqA������b��x&#x16;&#x17;~&#xc;`�]�&#x1d;X�\[������Z���+��|1W/��&#x0;��&#x6;?&#x1d;;�!�_l���7����&#x1f;���I���j&#x7f;߯v���}��87��&#x1d;�v�|���m��	:շ�������tm���l]�o6O�&#x8;Ku_�-E�]\��=m*�ma�-������Q���Anǰ&gt;�c�G�JvA%;m&#xb;�&#xc;��&#xf;�K&#x1c;�K�#.���_�9���n�&#xb;o��*��\&#x19;��g��q��5�&#x8;&#xc;���6#��!�&#x16;�o�1��5{�&#x19;�VQ�&#x7;�/&#x7;+��Ik��h-B���l&#x11;��� &#x6;-�V�K�5;�*��&#x1e;��&#x1e;~��F����&#x11;L|�8�&#x10;&#x18;P��/&lt;nH&#x1e;&#x0;څI�&#x12;�����0��MGt`�&#x12;�(T�&#x1;&#x13;�\&#x14;���l��;��pW6�y�z&apos;&#x6;ʬ;�&#x19;���&#x7;s ��`J�a�&#x19;p3&#xf;ͧ�&#x19;��[%V&#x1f;�9&#xb;��,�Lԗk���4��i&#x3;&#x19;~P�&#x1;Q�����&#xe;Ug��&#x0;�̕&#xd;S�M��J\��&#x2;���&#x1f;G&apos;WPX�&#x1;f��b&#x17;��/q9����&#xd;썍&#x1e;m�ʦ���ƪ��A)��[ٕ&amp;&#x1b;m��V�&#xe;��=��m�]�j`�gu&#x1b;{�p��~�z�2�&#x1d;��&#x1b;&#x1e;��Ce6&#xf;�C�&#xd;
���Z�&#x1a;&#x1a;��&#x18;�&#x1e;)!�hTY&#xf;�L�&#x8;T��&#x0;Nl&#x5c8;�heGߡN`2;4�t��L&#x10;�#�1�04I��f�FzG_/�츤r/��g]��X��;�zG����]���&#x0;��-�;����ﾣ&#x7f;&#x7f;.G&#x6;��О�W0��m&#xc;:]&lt;�����v&#x3;d3�S���]5�U��}�=&#x4;�Ֆ6s�Q�&#x1e;-S&#x5;�����&gt;r�Y&#x3;��&#x0;`ǃ]�a����O�.ߗ]n��C&#xf;g�;��˿�]~�&lt;mg���,���&lt;]�z����&#x1;~(m�3ч��j�&gt;��I��F�&#x6;���5�d�&#x1c;4�;[Sj�5V&#x3;&#x5;&#xd;&#x14;4P�@A&#x3;&#x5;&#xd;&#x14;4P�@a&#x15;(8c�&#x1d;����;w�;P�?&#xb;�幯��^kϖ�$&#x4;��&#xd;3&#x0;c��&#x8;1� �&#x6;�&#x17;x��&#x11;��%����ݹ5&#x19;�`������B��&#x1c;!&#xd;�&#xd;�P��͢!��&#x6;��|&#x11;\&#xc;��չ���5����5m�k�]���tצ�6���/3զ�6ݵ�Mwm�k�]���tצ�6�oh���|@ӝi�]���2��i(f� �?���&#x1d;2�U�;VW�&#xb;�\��6&#x5f5;���um�ks]��+�:&apos;&#x7;��gڛ^���3�al���`����K&#x16;{�&#x19;��^h�]&#x1b;��h�F�6ڵѮ�vm��&#x1a;�|l��i�Ѿ��i��(�,}&#x7f;&amp;�Ѿv�&#x5cb;�&#x1b;�蓮&#x4;c���	&#x7f;�&#x5;$&#x12;�&#x12;f �-&#x1c;!&lt;�����8&amp;&#x18;��&#x7f;&#x17;*��Ri�w&quot;��ⶥh蠡��&#xe;&#x1a;:h蠡��&#xe;w&#x6;:��&quot;&#xc;�&#x7;w�,r8��j�z�&quot;̷&#x7f;&#x11;�f�ᮼ&#x8;�4N��&#x7;��зy&#xc;f�1&#x8;&#x6;�;���xg�&#x2;Ţ�D����t&#x1c;k��1����&lt;٩���5����k`&gt;r�&#xd;���&#x5f8;��&#x1e;�a&#xe;&#xffde;�z�_��Z;̖Co�w��/�T&#x18;�Fo��&#x2;��}&#x3;f&#x17;9��&#x6;L�~�y)��&#x10;�n��&#x3;S�Grp*�&#x135c;F&#x3;&#xf;���&#x1d;��&#x1e;�����;���;M��;M���&#x1f;�m5�&#x1e;;ۮ��4��C����&#x1b;m}Z�q��R�&#x18;&#xc;���&#x18;�y���b���{X&#xc;�с^&#x16;kw:�ꁱ&#x1b;�b�&gt;0�!��ν(��0���X����M1&#x14;��Ћb�|��b%7]���&#x0;�V�&#x17;��&#xc;�&#x3;���&#x1e;�&#x1d;���|j&#x19;�&#x17;�(��&#x13;&#xd;
g��&#x17;���;��ߋ͞��d�1&#x16;���b�y���&#x11;��&#xf;&#x17;�ܱ&#xf;�&#xd;c�m����u��1&#x8;Z��r�y�,�49���j矾�&#x7f;��^�&#x1b;&#x7;�c&#x6;���j�=A��6�e�X&#x16;&#x0;&#x0;&#x5;�9��Y�y�6&#x19;g��+&#x8;&#x1b;	�*�����$&#x1c;�uN_�e{#�/����&#x18;��x�8���@�cX0�1आ)��)�=��j�&lt; L���5L�+L�/&#xb;�x&#x19;�i&#x5;N0\�&#xc;fqp�ܙN�DG&#xb;P�&#x7f;.d��~&lt;�,m䮪���Q��&#x4;&#x15;&lt;&#xc;�&#x13;4&#x1c;�$&apos;R&#x16;`�V��&quot;�Ȏ�f���&#x8;Hb&#x7;��&apos;��?�N�&quot;��D\���~*-�|���&#xf;�V&#x7;f&#x0;X�Q�[�]���&#x14;O��&#x19;�~��&#x4;�&#x1c;e�A&#x1;K��&#xd;
&#x19;a&#x15;��A&#x0;��B�1��Ҩ�&#x10;,;S����&#xf;O&#x1a;����eu�eC1&#x2;ǺE)�l�&#xd;&#x2;���&#x2;�}&#x5;��ت9m��C�f�Ǘj&#x8;��n�h�z&#xd;
&#xd;#5��0R�H&#xd;#5��0�����&#x1d;�@�z&#x7;|���w&#x16;|O Y���L*�u&apos;O&#x1d;&#xd;��;&#x1d;:&#x1a;n�^�&#x1c;��9&#xe;&#x8;^ʐLd�;�byN���EL&#x0;&#x0;�&#xf;&#x1c;A�}&#x1d;��&lt;6P��&#x11;�ճDd�&#x4;�z7�	�۸7�ȩ��QK&#xd;
&#x3;����&#x19;t3�K�K\��ŜK �+y)g����,��;4RC�֫�8��k&#xd;v�[zJ&#x5fe;֠&#x10;F]W�J!�z��h}���G?��uo�ە�����8�PDg�G+���2�%$�nColJ��}&#x16;&#x18;!u�&#x1f;Y&gt;�U�ڳXCp�Y�=��g��,�k-�߲���:�g1�+-z�^{&#x16;&#x1f;�g1ȳ��M�&#x1d;�Y�g��&#x12;�[��&#x3;Bh&lt;z&#x1c;x�x��1,��&#x18;pRÔ=�&#x14;��9?�=���a��)&#x7;�,~�̵o�q�&#x16;��f�����d�����&#xd;
��&amp;�q�z{q8n*�.���X�K�/5���R�K�/�+����ض��&#x7;|��#&#x1a;aj�c�r�&#x7;�c�g�.�&#x16;�\���&#x18;2����]�_u96����pdU��|�h�c=b��&#x5;�;�&#x5fb;�Ya��&#xb;�R&#x10;��.��H� �&#x6;&#x7f;t0Wd&#x12;Rˡ�&#x1b;.&#x7;(l������/�&#x8;+p)&#x13;&#x1e;&#x1f;iWd&#xd;�w���b��x�&#x17;~&#xc;l�]��+��Y��e��&#x19;3�9�&#xd;
��W`�&#x1e;�vE&gt;&amp;Wd ~uɱ�a���S�&quot;�b�U|? �ƣǁG�&#x7;�&#x1d;Âɏ&#x1;&apos;5L�&#xb;L�&#x1e;���v&#xe;x7�G5L�0E_r�&#x1d;���%���VN��t85����&#x3;Y�J&#xd;+5�&#x530;R�J&#xd;+5�܏&#x7;�&#x2;�&#x0;�&#xe;&#x8;,�#��&#x3;Y{ ��&#x3;��}&#x7;`j��Z�; sw_���&#x1b;���&#x1b;��ЙU�&#x1d;�ڷ��ClK���ݘ�x&#x1b;��`�/&lt;&gt;�&#xb;�C&#x12;&#x8;&quot;&#x1c;&#x0;Ӧ�&#xc;�&#xf;�}&#x1;=&#x1b;��̗&#x4;z�n��^�&#x1a;~k/c�e������^g���=�&#x1c;r��ѫ,z�^{&#x19;&#x1f;����/&lt;���z;Xo&#x7;k&lt;����v��&#xe;&gt;.��&#x1f;�l�Q�0�i��a�&gt;a&#xd;
nS�MA���r���&apos;��qދ&#x1b;&#x0;(�+#W�̰9�&#xc;�5�\&#xc;���6#��!&#xb;��&#x3;����&#x8;&#x74b;C��a��&#xd;
��ڇ��Y&lt;U�v&#x7;P���&#xd;
�Z&#x1f;��&amp;��N&#x19;=�b�B��+&#xf;�X�\t&lt;؊&gt;&#x10;��&#x18;�&#x1a;ϔv&#x18;u]y�o�f�J,�`z&quot;�i��y�t�n,�� ��}��or&gt;�mߌ`&#xd;
&#x7;�&#x14;�  �7|&#x1;0^� �,��,q(��[�L�Z&#x1d;�IL&#x15;�8S�L�35��8S�L�3o�3+�&#x1e;x$�Y�	m&#x12;����O�&#x1e;�f&#x17;&#x3;-�v��Y�jm�U&#x1f;�o�k&#xc;!&#x8;�v��������&#xd;
�&lt;.ty�˹&#x2;���9��?��&#x18;�~&#x1e;W&#xd;
�&#xc;��H%�9����&#x1d;�&quot;~���&#x8;Ԩ��w�2į7�&#x4;J��=��$��/S����&amp;�C��m��,&#x2;��6-&#x2;?�&#x8;�[Z&#x4;��&#x8;��&gt;�C�f&quot;�w��&#x8;|[&#x11;��|/&#x17;�~3&#x11;�Z&#x4;~D&#x11;�P�s��r 98fk�鷴~H9x�&#x16;K&#xf;#&#x3;ΘY����f2��&#x19;��2p@s��-z�Ӏ��F�&#x8;|s&#x11;��yw��K�Z&#x4;��&#x8;X�&#x12;�E@�&#xb;i&#x11;��&#x8;l�v���&#x4;&apos;&#xe;��H��&#x1c;d�A/&#x17;I��&#x18;	#ǷF_�ok־Ǭ]���+��{_�WgZc(&#x6;b����I=*�mi��Y�b�f��xZ�-NK&#x7;¡�UT�k����&#x4;��~���Ե&#x17;!$&#x7f;�8AVqk&#xe;���J�V=�M�m�u�&#x11;&#xd;
O&#x18;6&#xd;���3,۴&#x18;g�[v�)d�o(&apos;&#x8;\�&#x4;Vd8�c;���̦x���6��ȡm9[�&#x11;k��h4-�E�觟�&quot;0Ĭ&#x18;c�8��K9N�(&#xe;$��OJT&#x7;�D&#x19;w&#x2;b9 ��o�p&#x6;�&apos;CfX&gt;(	�(&#xd;
p܋��IV�q_��,&#x3;��$�&apos;�&#x3;��&#x1f;G��[�b�m�`�=V�=F&#x1d;&#x8;�u�a�;�&#x7;u�a��^��P&#xd;
!é��Q�U&#x18;��&amp;�x�f�v���&amp;��:�p�t�g���n�&#x2;&#x1d;��A3���3&#x1c;��!&#x18;?8&#x1e;h�N�&#x1c;�0&#xf;&#x13;���&#xb;&#xd;
&#x1c;&#x12;&#x10;���0�3�A�:@��PC�F�v&#x18;���Pn�N&#x1b;&#x1d;�s��&amp;&#xc;��z&#x10;��G\��&#x7;�e\&#x1b;�d5&#x1f;,�K���%&#x12;�:&#x10;�5h�&#x7;�� &#x1;���&#x4;&#x1b;]��&amp;B���0���H9�a��U��B����B&#x13;�h&#xd;&#x1d;A�&#x1c;�TCGj&#x12;nC��:&#xb;�L�;��Vw�:��Jgn�&#x1;F����&#x4;&#x11;�&#x16;&#x0;�js��n�&#x14;x�k&#xb;0a��2&#xb;t�u�hRj+B�	���&#xc;&amp;����mX5!!	�6�x=~#.�H7H�T#��&#x1d;f%��tx�P�&#xd;h^S�uaPA��:�&quot;��IN��&#x1;K&#x1;�b�Fr8o���AaV�&#x11;&#x10;z&#xf;&#x19;��M]��&#x19;����`�ca%�z&#xe;f�W&#xe;�G]&#x1b;�^&#x17;&#x5;�&#xb;�r&#xd;�&#xd;
��B�(�u�Ǭ��&#xc;��U&#xe;�ڊA�[&#x5;��&#x1b;ڃ&#x1c;;�m 3a��:���d�j�&#x3;5&#x12;&#x1c;�rLl�Q��D`u�aL�MO&#x5;i�&amp;˵&#x1d;��E� wT���^H�8��*&#x8;��&#x10;��l�iK�\&#xf;T&#x13;4��A�zPv�b.�V)/�&#xc;�O&#xf;k%M�jB&#x16;&#x18;�X�e�A�G�Hɤ&#x10;�PAB�&amp;�-���va���ӡr��F&#x14;&lt;��L�&#x1a;���&#xe;�o&#x1b;� &#x5;�&#x1b;��r�N&#x18;&#x18;&#xd;
µ&#x1c;�6����&#xf;&#x1c;&#x3;��yMK�A&#x1d;�8&#x5;�OZ%�&lt;&#xd;
�&#x0;�t�&amp;2&#x17;u&#x12;i�&quot;sl�[&#x5;p��m&quot;(]&#x18;vچa$�&#x8e;&amp;&#x7;�͑/�&#x12;A&#x11;��&#x13;����VYM&#x16;&#x2;ʻ�I��`mc&#x19;�&#x7;&#x17;&#x14;W7�&#xd;Bmu��&#xd;�t�Tu�Q��N�m�xvWU�&amp;2��*WnQ,��`��&#x18;&#xc;��.�����Y�&#x2;�T��FP��V+&#x13;�&#x11;&#x14;ʤ-1,En����S1�k�@rp@&#x1a;m&#x8;C��&#x18;�51�)��Bk� ����&amp;���a;�T&#x8;UE�&#x1;Hd�J�~�薉@!�zv�&amp;&#x13;�&lt;�&#xc;8A&amp;� �4����(&#x10;�!�-��� 3�5Z���Z&#x15;&#x4;�P�;eA�&#xb;�cԺ�e��&#xd;R�3�yI�@�m&lt;��&#x11;&apos;�&amp;&#x12;�/4��_&#x1c;&#x4;&#x6;Iǫ &#xe;&#x6;�jWA��v�g l8�UV˲&#x1d;��h&#x19;H���.�T�Ùj`�&#xd;
=���b�톸ն&#x1;�@&#x4;&#x10;bV6�qp&amp;k&#xd;
��&#x1;&#xb;bu�r&#x1b;&#xb;Ʊ�8�*&#xd;
9�)^t�&#x10;�8�V)�&#xd;Y[&amp;q�D��&#x4;BJ!�!&#x1b;�Y�a�	��ս&#x4;�Ӫ&#x17;�E�&#x1d;&#x14;&#xc;����&#x1d;&#x7;�&#x12;G��&#x5;�k�&#x1a;L&#xc;�;!����i�&#x1c;O��&#x1a;���&#x1b;�Zl׳�FF!&#x4;S�[5&#x1e;B�0��PKH&#x1b;�&#xd;G�&#x10;s��I����&#x1c;Cj���&#xc;m&lt;e�TaW��Մ&#x18;�J&#x1b;lG�&#x6;&#x1a;����	�&#xd;a`�*&#x8;ӧӖ&#x4;��gl&#x10;��� d�B��&#x19;-�7�&#x8;,�jz���@9��&#x1c;�X�����m&#x17;��Wa&#xd;
�M�9	Ö͙&#x12;&#x1a;�̒j&#xd;
Q!`3jw�L&lt;)؄\��&#x7;��q�WYG3&lt;tZ&#x1;�8ǅ�?�D&#x2;��g՝�q�&#x0;̜.qi��5&#x1;H,.E&lt;&#x13;��&lt;2]��&#x14;J/k�����B�qR}�&#x13;��b���E�&amp;W�t�#�[�:��8�%&#x1a;Ē�8&lt;�&#x6;&#x8;{�.�\�EpiU�Y&#x1c;L�-V��W����&#x3;&#x19;&apos;x&#x1b;�&#x8;�~�ecو�E���B�`*&#x10;@�b1M����&#x1c;z&#x2;��d�!&#x8;����&#x12;�&#x1c;42�&gt;_ʬ�&#x10;�˻&#x3;f�d&#x2;i���L\�$�D�J&#x1f;~�h��PL&#x1c;�%A�gPOI�@da~�C�g��&#x1b;��&lt;�i�@�&lt;��q5಼���&#xf;��}&#x19;��@�P����e4���&#x12;1��	��W&#xe;��$����3�&#xb;&#xf;S�&#x18;$&#xd;
�&#x8;�1\�&#x1a;��S\L��$�l}�0piR�&#x5;//�$_�&lt;&#x18;�@�&#x19;�&#x10;�-�|�w㫘I&#x8;D��&apos;�����nN&lt;��@�fxj3&#x11;EM&#x13;&#x15;1W�s)�`��u�&lt;0��q�E�G��Ē��Hf@Ԋ���0��7���bP/�-�YZ���S�2������L�w&amp;e�V��E&#x2;&lt;��d�H���T&#x2;1�m�Vك���j�CW�A_����&#x7f;@�4&#x11;��O����B&#x16;b6K?�*�j&#x1d;	�&#xf;&#x1b;��&#x1c;�7?&#x13;��&#x3;Q�r��&#x7;b���WI0&#x10;Ws�&#x12;���H��&#x17;�EP.&#x13;��&quot;�&#x2;Wr��&#x1d;P=*�_�_��xC�&#x2;�%g�l�bJ���.jUҍ&#x6;M&#x7;�&apos;���u3�&#x1a;&#x5;U�&#xd;
��\@S&#x12;q&#x19;O&#x4;p�`�)�L$�,&#x6;�&#x7;U��,��9�:��i&#x10;S&amp;&#x14;Y,V&quot;��&quot;&#x17;N2&#x1c;f����&#x19;�$&#x1;�T� &#x7;e�JK�&#x1c;x,V&#x1c;ۣ*D+]\�c�pPN&#x14;��AU&#xe;&#x4;��K̋&#x4;�&#x18;�.r�o��&#x8; ���&#x4;�&#xc;&#xe;M4*��&#x1f;�&#xd;��GD&#x8;3&#x8;��b�Jϗ�&#x17;0|�[�&#x12;TqM&#x17;�(�z�&#x2;h�/�^�&#xf;3����&#x10;�k��&#x1;=�t^��,�:�&quot;2&#x10;&#x0;Xu��S���ud�M��Yqi��-&#x7;����&#x15;���2�5N�Y&#x17;&quot;�b�T�Pf�7d ���F�a�&#x7;m���`�4�&amp;ˤ��EM����&#xe;B���?�+&#x1e;&quot;&#x16;�~&#x11;�&#x1e;N�����4��&#x6;�s��gO�{�&#x7f;&#x1;��\�|�c�&#x8;/jx�f��ky�L�o�&#x6;T�&#xc;OK�x&#xd;
�ܴWV���D��7ɴS��o�&#xd;
��&#xc;����X�4����m��R���e��&#xd;
0�Jk�C��&#x14;kt&quot;Ö��y�q\&#x0;���P�#&#x1;ab&#x9b;���\���\oa�=��D���3�.���j�v�q���~�Z5kլU�&#x1;U3��F��-N&#x2;S&#x10;�x&#xc;)&#x18;Y&#x6;&#x0;&#x13;j&#x4;&gt;#�&#xd;
��&#xe;���D&#x2;�ƥ;���V�Z5kլU�!U��Q5&#x3;�x&#x0;,gp�kP���&#x17;D&#xe;&#x10;4&#xd;
P3�Ȓתf\�xW�z�W7o�&#x1a;a��Y&#x1f;�ӺY�f��&#xf;��-k� \��&#x0;���c��&#xd;&#xd;A]��-IL/&#xd;
xȝku�&#xb;��W.9��,V/v甆{7 ������iO���~&lt;��&#x1a;Xk�o���8iv�Nd&#x18;/Q��-�&#x8;��&#x7f;%����+w����|�&#x1d;��Z������ޘ&gt;���&#xd;` �r1�&#x4;&#x17;�,9�&#x15;��$��De���	�&#x15;�V��R����!t�@n���B���&#xe;���z7�z��-��W&#x1f;A,&gt;��&#xd;
&gt;9&amp;&#x7f;�qT���u&gt;R��ǳ��&#xd;
x�x�&#xe;祄�����&#x0;􇫻��t[;-�~�8&#x1;��U&#x11;&#x7;U�K��4�t�f�e��v&#x7;*g��&#x4;/D^��M&#x11;�i���~�^&#x11;J�*��&quot;�&#x1a;Ȫ�&#xf;��&#x13;�&#xb;¼&#xd;
P%.�.w�&#x4;�|�p�}�pP|1*C1بN�`n?Ίi(���Q��p�D2���&#x19;�&#x15;�/c��n c&#x1b;9��v�&#x1b;�YG&#xd;�C���&#x1d;�����I&#x6;˩��^�&#x7f;�@&#x19;����0�$�q&#x14;?��{`g�#o��&#x1d;�o,���&gt;�ԗ&gt;��&amp;�3�(���M�w�&#x0;&amp;&#x1b;咍�\��b�:V�&#xc;V���Nx�D��&#x1;*wb��&#x1b;]��&#x15;&#xe;5j5�p+г~�8D�ԡ���&#xf;�0��&apos;K��3���7�� ���z��j�&gt;�z�@���&#x12;&#x7;�&#xe;&#x16;�ǓD9�&apos;śb:8��I&#x6;�)�&apos;�&#x6;��Q����&lt;&#x15;C���ژ�9z�oȨ↘oY������u���&#x0;\�&#x18;�j&apos;v�&gt;V3�S�e&apos;i&#x6;F���%�Vԉ�&amp;�l9A؈�k[&#xd;
\M�^,&#x1a;&#xb;&#x1d;&#x1b;���&#x7;͏��&#x1f;��{%�n1��sv�d}n�c�&apos;V�!&#x7f;l�:������&#x1c;�&#x5;�&#xd;&#x13;]&#x1d;=8�Ց[��:�ƹ�N���ߔa�&amp;��l��M�6E�$ڨh�&#x14;���:�5J�Mv����nUcu�A]UG&#xe;*�n����&#xe;��n�!��r�6���j����_&#x1e;��&#x0;���7b�U�߉ɯc�ېmS&apos;��B&#x14;S&#x8;~&#x1c;���\)���zf&#x14;��T\c��QҫE�0� ����XX�\�&quot;&#x7f;����/uA����)+XӬ��lM��&#x14;�;&#x0;��N���@�V��L�Su*��!��&amp;�&#x1e;&apos;�?�qp�V.fW�&#x12;�f蘦�	(&#x10;1&#x19;�[������M-&#x3;y�ȵ9}pdv��&#xd;&#x5;��&#x10; � a��Σ�����x��{�:4��X�q�&amp;&quot;��Tb���C�_&#x1e;c��d����@�4+�&#x10;�p�CYR���YRU�&#x1;K��١&#x7;*�JpwW	]�)٨��,7�73Q$.a�+d���&#xc;ڕ$&#x1b;�4�PK�[KZO5���{���1TN/�p&#x11;0\������`	���&#x5;&#x0;M���!�։&#x1e;&#x12;,����e&#x18;�h&#xd;&#xe;&#x15;�K���&#xd;`��ۘq&#xd;�5&#x1d;kb��^�&#x3;G�%�P�n\1�n�@u��&#x14;O=&#xe;��F&#xf;f�R&lt;&#x1b;�&#x7b4;&#x1e;��&amp;v&#x13;]�f��&#xf;3&#x14;��&#x14;�U��S���-L߉&#x1e;��ݛ&#x1c;����к�I�ٿ���&#x4;C�����b&#xb;&apos;t�7��uE�SlP/A��y��{&quot;��Po�S]��5��U&#x1e;.&#x1a;Z0��&#x6;W��bOc���`�n�mMk�8��@Nә:ּ!ՙr&#x13;RSJ�&#xe;t}�V=V�a&#x15;&#x6;�6�&#x7fc;۰@��m��l��x?��&amp;�Ά�&amp;Y��r�&#x1f;ۦ�n���&#x1;&#x13;&lt;��^E�ål�$zI&#x6;`r&apos;v&#x8;�u��%�N��� 	�c&#x13;&#x3;t#7�&#x13;&#x18;&gt;�&#x1f;&#x1b;&#x19;A�&#xe;�E��&#x6;�u�m&#x1a;��\39�x,�}�oS�H���k1[id�����&#x16;��n&lt;ٲ&#x16;�O0�&#x14;��kw�)�k7&#x1d;:���6&#x8;7�&#xe;�N�&#xf;�����-��D[��N2��:v�⦹a%m������W.��&#x15;�X�&#x1;z+�*ײ&#x6;&#x5;+oR&#xe;ۤU�&#x6;+#o+�@�vd?���e�j�A&#x1b;nf��6�SE&#xf;R���e%�-	��,�&#x0;�Խ�&#x1e;&#x18;r��P��PS��a���du;˪���&#x5;nd���B?4l7&#xc;&#xd;&#x11;D�&amp;�`�Ef����B�4&#x1a;�Ț#&#x1c;z܌�ƨ;k��Y�&#x6;_^N�&#x1;:�~BU�o|&#x1a;i��d�w��O&#xf;��H�4�v�&lt;�i$��xuH�� �!�Ҳ�����h�Q%�R3�$4Lײ&#xd;�XPS�&#x6;�}�PJ|FH��R]\��&#x19;̤8auO&apos;�&#x2;��X_o&#x7f;Fo��Z߇�����Z_&#x1f;R_�&#xe;���� Rx�&#x8;&#x1d;����m�&apos;�oP�&quot;�	=;b�5��M�=�O����ǽklW_��5���Zc&#x1f;Vc�&#x1b;il�&#x3;&#xd;
�S`�4��&amp;���$�	&#x1d;SX�	�&#x1a;���(��,����R�[_բU�V�Zu&#x1f;��Y�%&#x1b;ճ&#xf;# =��[/0&#x14;�Z&#x6;�&#x1;5�Kx�&#x12;F���$=W��7�;n{&#x3;���&#x0;al&#x2;z&#x1d;&quot;&#x2;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="upload-time" elementType="Header">
                  <stringProp name="Header.name">upload-time</stringProp>
                  <stringProp name="Header.value">1684834770056</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="apikey" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193,bc3902d8132f43e3ae086a009979fa88-e146a898-5750-49fa-9fe6-e4b86d396d3b-7150,9156e11e549943e5970de3f1661df5b2-1c673737-125c-416c-9121-b8a0db2ec86a-6465</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="client-version" elementType="Header">
                  <stringProp name="Header.name">client-version</stringProp>
                  <stringProp name="Header.value">1DS-Web-JS-3.2.6</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="time-delta-to-apply-millis" elementType="Header">
                  <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                  <stringProp name="Header.value">-1326</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-json-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache, no-store</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-896" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;request protocol=&quot;3.0&quot; updater=&quot;Omaha&quot; updaterversion=&quot;1.3.36.242&quot; shell_version=&quot;1.3.36.151&quot; ismachine=&quot;1&quot; sessionid=&quot;{0EC8F60C-7201-495D-90CD-0B9756CE2DB7}&quot; userid=&quot;{968439B1-F1BB-4B1D-AD6C-5F3F9D66BD60}&quot; installsource=&quot;otherinstallcmd&quot; requestid=&quot;{57C84C9F-9D2F-45F2-85D1-7867836665C8}&quot; dedup=&quot;cr&quot; domainjoined=&quot;1&quot;&gt;&lt;hw physmemory=&quot;16&quot; sse=&quot;1&quot; sse2=&quot;1&quot; sse3=&quot;1&quot; ssse3=&quot;1&quot; sse41=&quot;1&quot; sse42=&quot;1&quot; avx=&quot;1&quot;/&gt;&lt;os platform=&quot;win&quot; version=&quot;10.0.22621.1105&quot; sp=&quot;&quot; arch=&quot;x64&quot;/&gt;&lt;app appid=&quot;{430FD4D0-B729-4F61-AA34-91526481799D}&quot; version=&quot;1.3.36.242&quot; nextversion=&quot;1.3.36.242&quot; lang=&quot;&quot; brand=&quot;GTPM&quot; client=&quot;&quot;&gt;&lt;event eventtype=&quot;2&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;0&quot; install_time_ms=&quot;223&quot;/&gt;&lt;/app&gt;&lt;/request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Goog-Update-Updater" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Updater</stringProp>
                  <stringProp name="Header.value">Omaha-1.3.36.242</stringProp>
                </elementProp>
                <elementProp name="X-Last-HR" elementType="Header">
                  <stringProp name="Header.name">X-Last-HR</stringProp>
                  <stringProp name="Header.value">0x0</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Attempts" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Attempts</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-Retry-Count" elementType="Header">
                  <stringProp name="Header.name">X-Retry-Count</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Interactivity" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Interactivity</stringProp>
                  <stringProp name="Header.value">bg</stringProp>
                </elementProp>
                <elementProp name="X-Last-HTTP-Status-Code" elementType="Header">
                  <stringProp name="Header.name">X-Last-HTTP-Status-Code</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Google Update/1.3.36.242;winhttp</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-897" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;request protocol=&quot;3.0&quot; updater=&quot;Omaha&quot; updaterversion=&quot;1.3.36.242&quot; shell_version=&quot;1.3.36.151&quot; ismachine=&quot;1&quot; sessionid=&quot;{0EC8F60C-7201-495D-90CD-0B9756CE2DB7}&quot; userid=&quot;{968439B1-F1BB-4B1D-AD6C-5F3F9D66BD60}&quot; installsource=&quot;otherinstallcmd&quot; requestid=&quot;{707D9DAD-33E9-4D4F-AED4-66AF649F76B3}&quot; dedup=&quot;cr&quot; domainjoined=&quot;1&quot;&gt;&lt;hw physmemory=&quot;16&quot; sse=&quot;1&quot; sse2=&quot;1&quot; sse3=&quot;1&quot; ssse3=&quot;1&quot; sse41=&quot;1&quot; sse42=&quot;1&quot; avx=&quot;1&quot;/&gt;&lt;os platform=&quot;win&quot; version=&quot;10.0.22621.1105&quot; sp=&quot;&quot; arch=&quot;x64&quot;/&gt;&lt;app appid=&quot;{8A69D345-D564-463C-AFF1-A69D9E530F96}&quot; version=&quot;&quot; nextversion=&quot;&quot; lang=&quot;&quot; brand=&quot;GTPM&quot; client=&quot;&quot; installage=&quot;260&quot; installdate=&quot;5719&quot;&gt;&lt;updatecheck/&gt;&lt;/app&gt;&lt;/request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2?cup2key=13:EM0KhPI5MhaAJD-Tj3qxCaDvirtuETv_cnJfOSJTnEU&amp;cup2hreq=f3f3d289877547805ccb8324141039c5f7630190009a9bb167fc2f91707db8bb</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Goog-Update-AppId" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-AppId</stringProp>
                  <stringProp name="Header.value">{8A69D345-D564-463C-AFF1-A69D9E530F96}</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Updater" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Updater</stringProp>
                  <stringProp name="Header.value">Omaha-1.3.36.242</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Attempts" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Attempts</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Interactivity" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Interactivity</stringProp>
                  <stringProp name="Header.value">fg</stringProp>
                </elementProp>
                <elementProp name="X-Last-HTTP-Status-Code" elementType="Header">
                  <stringProp name="Header.name">X-Last-HTTP-Status-Code</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="X-Last-HR" elementType="Header">
                  <stringProp name="Header.name">X-Last-HR</stringProp>
                  <stringProp name="Header.value">0x0</stringProp>
                </elementProp>
                <elementProp name="X-Retry-Count" elementType="Header">
                  <stringProp name="Header.name">X-Retry-Count</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Google Update/1.3.36.242;winhttp;cup-ecdsa</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-891" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834756971</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-898" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:3078466,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;huFAhhZA/0K7tC2UaRAMTA.1.1.1.1906330112.2.1.1.1906353027.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;db723403-732b-42c2-8685-f84dadccb337\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834778182</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://amcore-ens.rest.gti.trellix.com/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-900" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;ci&quot;:{&quot;affid&quot;:&quot;0&quot;,&quot;cid&quot;:&quot;41DFFE45647D42B59F4E92FFF9218374&quot;,&quot;cliid&quot;:&quot;41163428e298488ea694ec116a37323c&quot;,&quot;epoid&quot;:&quot;D28DA7732563420DA1D07CE2CA694607&quot;,&quot;pev&quot;:1,&quot;prn&quot;:&quot;AMCore-ENS&quot;,&quot;pv&quot;:&quot;10.7.0&quot;,&quot;rid&quot;:-7750727718529393732,&quot;sdkv&quot;:&quot;1.0&quot;},&quot;q&quot;:[{&quot;md5&quot;:&quot;d089261dbf472f5cd0ef008993586ce7&quot;,&quot;op&quot;:&quot;file&quot;,&quot;qmd&quot;:{&quot;amc_addinfo&quot;:&quot;BAAAAAAAAAAyMi43LjAuNTczLjEy&quot;,&quot;7&quot;:&quot;yi8AAAAAAAABCAQBAA0AMjIuNy4wLjU3My4xMgIABgA1MTcwLjADAAAABAAAAA==&quot;,&quot;fsize&quot;:&quot;1369128&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">amcore-ens.rest.gti.trellix.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Tue, 23 May 2023 09:39:35 GMT</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">AMCore REST Client</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-901" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;ci&quot;:{&quot;affid&quot;:&quot;0&quot;,&quot;cid&quot;:&quot;41DFFE45647D42B59F4E92FFF9218374&quot;,&quot;cliid&quot;:&quot;41163428e298488ea694ec116a37323c&quot;,&quot;epoid&quot;:&quot;D28DA7732563420DA1D07CE2CA694607&quot;,&quot;pev&quot;:1,&quot;prn&quot;:&quot;AMCore-ENS&quot;,&quot;pv&quot;:&quot;10.7.0&quot;,&quot;rid&quot;:-7750727718529393732,&quot;sdkv&quot;:&quot;1.0&quot;},&quot;q&quot;:[{&quot;md5&quot;:&quot;d089261dbf472f5cd0ef008993586ce7&quot;,&quot;op&quot;:&quot;file&quot;,&quot;qmd&quot;:{&quot;amc_addinfo&quot;:&quot;BAAAAAAAAAAyMi43LjAuNTczLjEy&quot;,&quot;7&quot;:&quot;yi8AAAAAAAABCAQBAA0AMjIuNy4wLjU3My4xMgIABgA1MTcwLjADAAAABAAAAA==&quot;,&quot;fsize&quot;:&quot;1369128&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">amcore-ens.rest.gti.trellix.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Tue, 23 May 2023 09:39:35 GMT</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">AMCore REST Client</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-899" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834778182</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-904" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="usersInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">usersInfo</stringProp>
                  <stringProp name="Argument.value">[{&quot;userId&quot;:&quot;8:orgid:b87ad58f-42d4-4217-acdd-eb23d9947ee4&quot;,&quot;displayName&quot;:&quot;Ajay Chowdary KORIPALLI&quot;},{&quot;userId&quot;:&quot;8:orgid:0c0ed9de-1bef-40f2-9cd6-13681a08d894&quot;,&quot;displayName&quot;:&quot;Akhil BALLA&quot;},{&quot;userId&quot;:&quot;8:orgid:3e5d664b-91f5-4a01-b71c-baf71495898a&quot;,&quot;displayName&quot;:&quot;Aravind Kumar Reddy DANDU&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">HR64x64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="voidCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">voidCache</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img.teams.skype.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/beta/users/mergedProfilePicturev2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-902" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:3087376,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;4SYNFVpCx0epfcQjkvn9vA.2.1.1.1906578427.1.26.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;c4016e22-37ce-48cc-9597-1cbcc6c76f42\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834784550</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-908" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;Organization&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/organization/manager?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;userPrincipalName=shivaprasads.in%40mouritech.com&amp;teamsMri=8%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;smtp=shivaprasads.in%40mouritech.com&amp;personaType=User&amp;aadObjectId=d7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;displayName=Shiva%20Prasad%20Rao%20SHAPELLI&amp;RootCorrelationId=ca1499db-0dfb-458c-9a4b-0fe0bb22137d&amp;CorrelationId=ca1499db-0dfb-458c-9a4b-0fe0bb22137d&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-906" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;OofMessage&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/oofstatus?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;userPrincipalName=shivaprasads.in%40mouritech.com&amp;teamsMri=8%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;smtp=shivaprasads.in%40mouritech.com&amp;personaType=User&amp;aadObjectId=d7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;displayName=Shiva%20Prasad%20Rao%20SHAPELLI&amp;RootCorrelationId=31e0ca98-915b-4909-8445-45349dcb2dd5&amp;CorrelationId=31e0ca98-915b-4909-8445-45349dcb2dd5&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-905" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;Schedule&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/schedule?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;userPrincipalName=shivaprasads.in%40mouritech.com&amp;teamsMri=8%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;smtp=shivaprasads.in%40mouritech.com&amp;personaType=User&amp;aadObjectId=d7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;displayName=Shiva%20Prasad%20Rao%20SHAPELLI&amp;RootCorrelationId=e979ffde-c095-4d34-9b2f-db37157988c1&amp;CorrelationId=e979ffde-c095-4d34-9b2f-db37157988c1&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-907" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;PeopleHighlightsGet&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/peopleInsights/peoplecard?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;userPrincipalName=shivaprasads.in%40mouritech.com&amp;teamsMri=8%3Aorgid%3Ad7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;smtp=shivaprasads.in%40mouritech.com&amp;personaType=User&amp;aadObjectId=d7558e5f-433a-482b-b6ee-c9c8b608e4cf&amp;displayName=Shiva%20Prasad%20Rao%20SHAPELLI&amp;viewerLocale=en-us&amp;RootCorrelationId=66b8bb89-14a3-4145-8a6e-e06e37cbdb99&amp;CorrelationId=66b8bb89-14a3-4145-8a6e-e06e37cbdb99&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-893" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834760</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-910" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;request protocol=&quot;3.0&quot; updater=&quot;Omaha&quot; updaterversion=&quot;1.3.36.242&quot; shell_version=&quot;1.3.36.151&quot; ismachine=&quot;1&quot; sessionid=&quot;{0EC8F60C-7201-495D-90CD-0B9756CE2DB7}&quot; userid=&quot;{968439B1-F1BB-4B1D-AD6C-5F3F9D66BD60}&quot; installsource=&quot;otherinstallcmd&quot; requestid=&quot;{6B143042-9387-4AFC-A0DF-749378A54CA4}&quot; dedup=&quot;cr&quot; domainjoined=&quot;1&quot;&gt;&lt;hw physmemory=&quot;16&quot; sse=&quot;1&quot; sse2=&quot;1&quot; sse3=&quot;1&quot; ssse3=&quot;1&quot; sse41=&quot;1&quot; sse42=&quot;1&quot; avx=&quot;1&quot;/&gt;&lt;os platform=&quot;win&quot; version=&quot;10.0.22621.1105&quot; sp=&quot;&quot; arch=&quot;x64&quot;/&gt;&lt;app appid=&quot;{8A69D345-D564-463C-AFF1-A69D9E530F96}&quot; version=&quot;&quot; nextversion=&quot;113.0.5672.127&quot; lang=&quot;&quot; brand=&quot;GTPM&quot; client=&quot;&quot; installage=&quot;260&quot; installdate=&quot;5719&quot; cohort=&quot;1:gu/i19:&quot; cohortname=&quot;Stable Installs &amp;amp; Version Pins&quot;&gt;&lt;event eventtype=&quot;9&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;0&quot;/&gt;&lt;event eventtype=&quot;5&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;0&quot;/&gt;&lt;event eventtype=&quot;1&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;0&quot;/&gt;&lt;event eventtype=&quot;6&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;0&quot;/&gt;&lt;event eventtype=&quot;2&quot; eventresult=&quot;1&quot; errorcode=&quot;0&quot; extracode1=&quot;196608&quot; update_check_time_ms=&quot;760&quot; total=&quot;94715944&quot; install_time_ms=&quot;21007&quot;/&gt;&lt;/app&gt;&lt;/request&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Goog-Update-Updater" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Updater</stringProp>
                  <stringProp name="Header.value">Omaha-1.3.36.242</stringProp>
                </elementProp>
                <elementProp name="X-Last-HR" elementType="Header">
                  <stringProp name="Header.name">X-Last-HR</stringProp>
                  <stringProp name="Header.value">0x0</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Attempts" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Attempts</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-Retry-Count" elementType="Header">
                  <stringProp name="Header.name">X-Retry-Count</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Interactivity" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Interactivity</stringProp>
                  <stringProp name="Header.value">bg</stringProp>
                </elementProp>
                <elementProp name="X-Last-HTTP-Status-Code" elementType="Header">
                  <stringProp name="Header.name">X-Last-HTTP-Status-Code</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Google Update/1.3.36.242;winhttp</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-903" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834784550</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-911" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:3114003,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;frNwZ0juz0aX31vuF11big.1.1.1.1907325731.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;639c617b-84f9-49fc-aa7e-459d3141dee9\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31000}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834803029</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-912" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834803030</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-909" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834801</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-913" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:139035912,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;WjHtUyzbnkSIpNR6wJov/w.1.1.1.1907398432.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;caa5c783-ed5d-49c4-980b-3143a83387d2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834804814</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-915" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:109541019,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6e467eb8-b4aa-40b9-8c35-75b8dd32ef48&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;52f0b39e-2e6d-4536-ab06-24e9a9dfb523\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:109541019,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;6e467eb8-b4aa-40b9-8c35-75b8dd32ef48&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;52f0b39e-2e6d-4536-ab06-24e9a9dfb523\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834805</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-914" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834804815</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-877" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834715635</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.305c8bae9fb04b45</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-305c8bae9fb04b45-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-917" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:58824666,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;R30oB8mVHUap4UAks2yYtQ.1.1.1.1907428387.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;aa98acf8-ab1d-457b-9538-fd14fbba4e4a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31007}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834806390</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-918" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834806392</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-921" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834810144</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-920" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:115713071,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;cUj1ZLKbekafSFZXhVP3zA.1.1.1.1907559561.1.27.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;b183068d-7df9-476c-bf70-706a750cec85\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834810143</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-923" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:72280005,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;GQhvsjyLAkmi8C5WIUKYPw.1.1.1.1907567253.1.26.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;c6a9d2c8-41d2-465c-996a-e4e01ddbd6aa\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22T1K8aytopWm3YkOKrpNgaQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_51&amp;connected=true&amp;t=1684834811183</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-916" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834805</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-924" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:240489893,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;f4a47f1b-4ec8-4823-9ec2-30cdba4a7a51\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31028}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:240489893,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;f4a47f1b-4ec8-4823-9ec2-30cdba4a7a51\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31028}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834813</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-925" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834813</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-927" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:109552228,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;c754e16d-a1a3-405c-8ddb-6d0cb82b52f5&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6e467eb8-b4aa-40b9-8c35-75b8dd32ef48&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1ef82f23-0258-4c41-9e5d-fc6304979ce3\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:109552228,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;c754e16d-a1a3-405c-8ddb-6d0cb82b52f5&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;6e467eb8-b4aa-40b9-8c35-75b8dd32ef48&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;1ef82f23-0258-4c41-9e5d-fc6304979ce3\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31013}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834818</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-928" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:38:35.636Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.305c8bae9fb04b45.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834715635&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.594&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834715635&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-929" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�W[o�:&#x12;�+��Zl��=�&#x1;N�m��sb&apos;=��E@�#��,iE)���}���8&#x17;��&#xd;��7��p���b&#x5;ޮ�RF^/Zym����ڀ1�*�&#x1d;��n&#x1;��&apos;4$ܟ�t�Owi4NY�&#xf;\q&#xb;&#xd;.&#x8;�&#x14;��&#x11;&lt;�K�&#x1b;��&#x12;��&#x14;�4��P0&#x15;�LA&#x16;�&#x1c;�(µp�z�?&lt;�n�_/�}��o3��8�e&#x6;���&#x6;A�&#xc;u%���OX�ҘƱ�s�&#x13;u�Ā9TH&#x4;��&#xc;�����$W�&#x13;_Ȅd�Jr&#x16;1&#x8;�Ĳu�n��+*)&#xd;
{B(���R� �&#x4;U��.�ЂX��J˦2Uގe�B����s&quot;��&#x2;d�8c&#xd;�e&#x7f;�t�Ɖ=�l&#x0;�s0&#x8;�?���擪4P�	rQ&#x18;�}+c�&#x1d;&#x1c;�]�&#xd;
em�˨UM�m��=@+����gbU�#0J&#x11;�&#x3;Y�}D���p�w�+h�&#x12;�����X&#x15;��rK�]�3\d��s��&#x0;G&#x8;*-&#x16;�jY5�&#x6;�&#xf;&#x20f4;L&#x18;�?�Viٙ�7&#xe;b�&#x6;z�T54�&#x6;3��&#x5;֮wV�v�&#x14;e	�o��{S$6Z�ن��&#x16;�&#x1c;ȳ&#x7;���8�&#xd;
k��&#x19;�g��&#x15;��K&apos;&#x1a;���Ym&#x7;�n4�TM&#x3;�hQ�&gt;lR&#x11;�Q�&#x12;�DL��OH��&gt;aL�QH!JD�lg&#x2;���&#x16;e�ؒ\$*́�Q�I&#x10;�&#x11;&#x11;T&#x0;�r&#x4;�L扰�&gt;(U]�&apos;&#xc;��FYFr��?a,s&quot;b&#x1e;Ɛ�Y�b�9�E�j��\,~q�=c�}d���(&#xd;
]..7��&#x19;&lt;f���1cV�[��9f�i��&#x1f;�&#x16;?�&lt;���s^aDEI��&lt;	&#x19;O���h��O\i&#x1d;&lt;8p�V�Bd&#x5; 	)f`��&quot;&#x5;Fڡ·+O��&#x6;&quot;���Kp�lٵ&#x18;��s.��a�&#x17;��L�G&#x19;����i]�Tm%��&#x4;K�X��B!&#x17;�M�&#x12;gP*h�ܟvm���&#x2;��&#x1f;ؘ��Z����dHI�&#xf;^�,�څ\@��&gt;� �	&#x16;���9�	&#x4;�8͔��K�&#x1b;&#xc;���R;W��&#xb;+��&#xc;&#x1;�?	��?L���&#x7;�t�ۯ��2�l*&#x1d;�r�������Zqp_&#x1f;*k�3r@&#x18;M���d�;�&#xc;@J}�	K��$���O&#x18;�&#x7; `��&#x15;��ݧ�Y��&#x4;�O����&#x6;��1�$$k�h�ĉ��2)�&#xd;��:(07mU#��&#x7f;�|�hL)�&amp;s�a�����&#x1e;�y��&#xc;s9����0gL�&#xf;����ȥn�Nt�U�&gt;&#xd;
l9�&#x1e;zێ�&#x3;0}�&#x0;����9,z&#xd;ϧ�&#x11;?G&#xf;��&#x2;JhDa&#xd;ާ���Y~�������y&#x14;������K:UG&#x7f;|�����N��&#x16;����&#x1f;�]y��W�_��9��óHF��&#x4;�3��)��2�2�ˈ� ��Ut����\�����7�I���B|&#x8;�t�nh4�������F&#x8;D��&#x8;&#xd;�~��V&#x0;��#�~&#x8;�x�G�wG_�&apos;�;�B���&#xb;ț��hn;�3&#xf;�&amp;˦Z�&#x7;F9�-Ĩ&#x18;c�&#x1e;�[凾7�f&quot;&#x17;�&#x1e;D����&#x12;֎q&#x7;�X&#x1e;S&#x1e;g)c�&#xc;@b�&#x2;x��$�a�bN�(��&#x7;�1��&#x0;&#x7;&#x3;�ʄ�,&#x10;&#x10;q�:&#x1c;�R��&#x17;%v�&#x1b;P6y]G9&#x11;e�&#xb;&#x17; ��&#x1e;&#x1f;�N/�&#x1b;*���d{*�1�|&#x7f;��&#x13;j���̎.l��O?]L�����`6;���&#x1f;;�&#x11;�&#x1;(�&#x9c;�&#x18;�&#x11;�%���f��x�&#x13;�1Z�;/�@�,&#xc;&#x2;	��A�E�G&quot;JA��&#x4;~n��juX&#x1e;��e��&#xf;���m:@��픃�V��W}&#x4;��&#x10;�ˊ�G#�0&#x6;&#x8;e&#x1b;���R*�N&#x17;��\�؜3�Q���8��\�s�J�_��3[�Bꇾ&#x1f;�y�%���D*p2S�D��&amp;l�*(��&#x12;[J��&#x12;�&lt;�J�2z��mn�&#x558;�����&#xd;pn�r&#x3;cc��{��@sPڶ�rmx�S���	���k��Ћek��gZblaw�&#x1f;������y�m�+s��B�&#x2;1b�� ��+pQT�(��&#xb;9�#�k��V�lC�!�|&#x1;8�/��&#x1a;X腦&#x16;�n��pgU-�&#xd;
c�	��U@�&#x4;p�y&#xd;����g��&lt;���z���7�[N�^i&#xc;�E�Y�����=&#x1;�ѶV&lt;����Z�ٹ&#x16;��&#xb;&#xc;�;�@�6.L6k&#x16;��Fػ&#x10;&#x6;f�V��&#x16;�!�f�ui�q��E�ƙ&quot;����g&#x11;��.)I�,�Y d�BqX��f�_���U{���&#x1b;u�&#x11;�떇�Xwo�O%�zRwotKL�f�n�[��	���su۪&#x15;8����V&amp;&#x16;�&#x1;&#xf;)K�ĕ��&#xd;kI�����!�ɣGVX�&#xb;��-&#x14;��ߏpV�w��#�u&#x6;�&#x11;z1��]�~&#x1f;����Gd[mU��&#x7;&#x1a;�DpI�b݉����D�,I�D�&#x10;A&quot;�4�[��qz&#xe;Pi�&#x5;$9&#xd;�0�nѦ�5���g�n&amp;����TM6V��ĺ$�&#xe;�w�V�&#x2;�&#x13;����&gt;�&gt;7ە�qS���u�&#xc;[wmBg�w�z&#x7f;&#x5;�.�֠�&#x0;Z�G&#x17;U �^W�ͫ��&#xf;6Z�&#xd;Mg_Z��~$:�����-K}��v�&#x18;u&#x3;9��@�&#x16;䜹&#x1e;@�o�[&#x0;�}��k�X�&#x1b;�&#x12;��uO���Dmf��j{h�EW��y(�Sk&#x3;��&quot;&gt;&#xd;(6�صQ�Mk�0�&#xd;˾�k&#x1c;�u�A]�iO�Y-?&#xd;�m&apos;S�A��C�\4UW&#xf;]���f�&#x4;�����{�waΪ�&#x6;5����h&#xf;�S1x����?˨&#x1f;��&#x11;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="upload-time" elementType="Header">
                  <stringProp name="Header.name">upload-time</stringProp>
                  <stringProp name="Header.value">1684834835569</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="apikey" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">53fdaa090eb946b5a1d6cbdeb4f2ef66-bcbf6380-2590-41cc-ae60-9e467cd51835-7413</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="client-version" elementType="Header">
                  <stringProp name="Header.name">client-version</stringProp>
                  <stringProp name="Header.value">1DS-Web-JS-3.2.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="time-delta-to-apply-millis" elementType="Header">
                  <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                  <stringProp name="Header.value">-1332</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-json-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache, no-store</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-931" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="displayname" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">displayname</stringProp>
                  <stringProp name="Argument.value">Solomon KUMBALA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">HR96x96</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/mt/apac/beta/users/8:orgid:28c7f243-8dbd-47dd-9705-cf941da636f0/profilepicturev2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/multi-window/?agent=electron&amp;version=23040202705</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-934" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;Organization&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/organization/manager?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;teamsMri=8%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0&amp;smtp=solomonk.in%40mouritech.com&amp;personaType=NotResolved&amp;RootCorrelationId=52d3066c-25ff-4f26-ac87-23c951c30728&amp;CorrelationId=52d3066c-25ff-4f26-ac87-23c951c30728&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-930" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;OofMessage&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/oofstatus?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;teamsMri=8%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0&amp;smtp=solomonk.in%40mouritech.com&amp;personaType=NotResolved&amp;RootCorrelationId=b1175f88-f94f-4d69-a480-5c67eccb217c&amp;CorrelationId=b1175f88-f94f-4d69-a480-5c67eccb217c&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-932" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;PeopleHighlightsGet&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/peopleInsights/peoplecard?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;teamsMri=8%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0&amp;smtp=solomonk.in%40mouritech.com&amp;personaType=NotResolved&amp;viewerLocale=en-us&amp;RootCorrelationId=8b52cfc4-3c8a-44e9-9c7f-4291829c20f9&amp;CorrelationId=8b52cfc4-3c8a-44e9-9c7f-4291829c20f9&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-933" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;Accept&quot;:&quot;application/json&quot;,&quot;Content-Type&quot;:&quot;application/json&quot;,&quot;X-ClientType&quot;:&quot;MicrosoftTeams&quot;,&quot;X-ClientFeature&quot;:&quot;LivePersonaCard&quot;,&quot;X-ClientArchitectureVersion&quot;:&quot;v2&quot;,&quot;X-ClientScenario&quot;:&quot;Schedule&quot;,&quot;X-HostAppApp&quot;:&quot;&quot;,&quot;X-HostAppPlatform&quot;:&quot;Desktop&quot;,&quot;X-LPCVersion&quot;:&quot;1.20230502.3.2&quot;,&quot;authorization&quot;:&quot;Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJzRl9qb2Y2TjRoS2ZIMGV6MVBhOHcxb2JucEkiLCJ6aXAiOiJERUYifQ.X41RAEtmp8VnMDRrDPAyz2NLilTbZBOcjnhUNli3u8guv2EfZ-tYP4VntCoFTIVzaoketzgX1cHg_yrvM2yLEydU7GKNC94D_QMP4nC3wQdlsZIceZg7dDHojQHAQ2owyZZakQFndsxcOi_UjKjLt0tgwBzJ3aW5Y5rgctjRv_0_j6aFBveYAcIh06uduK9vZoPgfS3O6Prhd0ui7JYunrSlhV9pcZS35uJsl_LwCXsSczddNrD87Rv-P6C8T9sLthUFum3makilH10eXzNS85JGaSrMZipsaXoeRMZdnmII6j6OKyNs9q_dwAhzv7qHUc9udZdmGAdIznxfBd34VQ.L-eDdQn54U_BHVhZcEXu8A.t_kCCA3QUnyW_jqSlK3-m5T18Oe5sZbHgwhYZOFzVi_mbie4PLh8IwBvGrGBpwHMnpkRqdf8VfVZbw80Z5Dc12rHcf80Uecr_yw0vIjB4jQYvfaJFc0LfOYKg91XzWKJcPd30fWfLT21fdgX7Xf0sVKBldTHsrI2X0rbWwb5-BRt343R3fGBQl1h3wek8rJi6hQxQ0GpfKYgt9SI_6YibSnUwjMZfgcMqDFnLO5kqzqyzaT_Xg2r3XR4w0e23veLbRI8LENbDjgZWDbFbfSXOFoDzHaujeCngfymhrNAgnDO9N6-B5HuPtG94Mny5Q2KXjg5RUWTb3BC4l8OAkXb_1ojOSbtkLXIGx7FC4tNkRFAzelpIHrJxzsoUOTBkC30HOwC38qboULSuPmmXn9sPSfqyaCIBJ3qIRLBrQWfWD8ZcEFv2yvZ6b41_t_2rmc3-bXv-zPVMwy7opk3EtakHYEwepXCQnsikKjTGwFKPTda_mUAG6He7QHbZmgG8MXyJJue9dTVuDEg3L_ldJLfTn32URrMdum9dr0TYVmPAnOBqcnLQQ1usATKaSDxFA7wCIGk-ruxFEUirsUikCgiUz2zbaggSbGck05toQ0Aut3bfa5WUjmTZ4sQDCtwJ3qVuTAt1stkcNM2hhCh4SLUXLN1WAhAVCiw-bzZKU4oxEftPcnojeKuPpJ0g_gbsqU8W8MkYi8w-L0LMfgXhF3Vjmv5Y1zpe9K4ibRIITxno8GX6x4mJGJOt5Cm3wzZrRsCW47NR8jj1isK9Mn_ONDpIxb9ZlWf2ktu-Ptln049ibIKC8a_xqDLfRuwCMaoyM1eSxboEYm0E8fIm_KPjBmlve8wy8Xfu5dsSsDv4kvRb8aqEvI6YGV6n7iNpzNzDdfAT13D7wjNjlfuAMPBvAhYvx7ZfPqSWB51i7FtWIwwBZowe49Y6YX0m0b0BA-ryk9BfSIalJAojROkSdeNDueikSk1r2KU3WLWRs1pOgcETnczeZU3yGPKtNOUynyi8KK1gjxh0V1Gwh8gh-03vhvGoRRFgcAQy5aQQVMBg9XFvIJQvt7SA2xNCJtzp3rq1WCRkngXUhq7tdNEwMy8rfxSvlvsZfERN_cuAMLxMOngq0nlqaAMQUWUnSXpYrLy8J0IQmaSpgZUfavR3wi_6ff4MRJ5znLgrykIXZ5ZRhgg8pFAtYGLIdbQInK3-KzmkfBJKtNOAEjj56LyC77G187_ydPRYLg8HmVNoHs8pwg4TpnTROSp8nfXBqUihM-h5IpKM_5imHXey4ebYB5vIJnIBUNxamNtQu8QNCtRJifxKln8Ob9kqsv6C4jr9xImAAfQkG1PttKseJ85NuRun6CD1wvizkVvTM_DS-04liiRF9aL10slxN29q4cJPG4WN5ef9f-sInKd48JAmB988zef1zWj-U54FjlTTypUF-Aq-tPwEt8hslhUP7yHaynmfis4U9Ovttj2vPy5drpm4IFDQ-s8wbuOe28PKa5SG51DVm6Z8_S2dOuf7PLKlxupDQamWE9MjoQV87XrXe9qssYQLoaTZXMLvlRn_bRu7IqUS7hpezZgVM_gRRJ-ajV8GRep4EpaLmZrZMstGP_DyTulZXQP3pFlSkxVmcyM9E-tTgmOxOjo3Uojw2g1ZKY5z482T6lrkNNtLvQb7Y5r33DFk57EsEMBZvFYxXFFG_NdoVc1p-wInDUqTIWrpitIv1HhFHyPUDxO_vhAEzWW_NrT2lg3aIJNzEANf1UZJaxF-s__u0lFLU7oZdbEN5sz0c64Wx-95-bC_zaN4nmr7LgYqkF5sm_k1IB_p45OHO2k2pOMz9nkjgZSOE4W6_R3FkFPwJ4NqzFbLn206_Z2SWMHq67GQv3Xw5H01oBTJxe7u8mCv9LMglUeWw7y2ADtJ0vF2wFUNfv4SFve7R7wAk6kC0dOrp0O7Oev53-ppubVYtHDLKS9glOcItO8hsIiPWPykBSc7vvgCzlh5tMy1UCxHQ.UnNdZug4FNAshadxgZbZ2Q&quot;,&quot;X-HostAppRing&quot;:&quot;general&quot;,&quot;X-HostAppVersion&quot;:&quot;27/23040202705&quot;,&quot;X-HostAppCapabilities&quot;:&quot;{\&quot;isLinkedInEnabledInHostApp\&quot;:true}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apc-alt.loki.delve.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/schedule?hostAppPersonaId=%7B%22userId%22%3A%228%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0%22%2C%22isSharedChannel%22%3Afalse%2C%22hostTenantId%22%3A%22%22%2C%22hostConversationId%22%3A%2219%3A8c1faa2a0ce64a5aa846186be1502c45%40thread.v2%22%7D&amp;userPrincipalName=solomonk.in%40mouritech.com&amp;teamsMri=8%3Aorgid%3A28c7f243-8dbd-47dd-9705-cf941da636f0&amp;smtp=solomonk.in%40mouritech.com&amp;personaType=User&amp;aadObjectId=28c7f243-8dbd-47dd-9705-cf941da636f0&amp;displayName=Solomon%20KUMBALA&amp;RootCorrelationId=13ce52ea-7585-4124-b2fb-7549ce1d5617&amp;CorrelationId=13ce52ea-7585-4124-b2fb-7549ce1d5617&amp;ClientCorrelationId=0e945779-da8a-43d9-b6d8-2402696e924f&amp;ConvertGetPost=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-926" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834818</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-936" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:73862628,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;5d60a57b-1080-4ac5-a2bd-311ed743f1dd&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;bf965ec3-9ae9-4dd4-bfcf-721276528fd5\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:73862628,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;5d60a57b-1080-4ac5-a2bd-311ed743f1dd&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;bf965ec3-9ae9-4dd4-bfcf-721276528fd5\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834843</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-922" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;T1K8aytopWm3YkOKrpNgaQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_51</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834811056</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/72f17fa9672df744-4cc1dadad0bf739f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-935" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834843</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-938" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:16939351,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;59400994-adc7-4a2d-b049-c6fd86736a0e\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:16939351,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;59400994-adc7-4a2d-b049-c6fd86736a0e\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834851</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-937" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834851</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-939" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_52&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-941" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:73873277,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dc18656a-a73c-4341-8ee1-ab5aa03fc04f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;5d60a57b-1080-4ac5-a2bd-311ed743f1dd&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;bb7e2055-d69c-4402-aead-b44ee544c3d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:73873277,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;dc18656a-a73c-4341-8ee1-ab5aa03fc04f&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;5d60a57b-1080-4ac5-a2bd-311ed743f1dd&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;bb7e2055-d69c-4402-aead-b44ee544c3d6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834856</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-942" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834856533</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-943" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">qiSGMUi2Qpx4Z4vGWiP9mg==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-944" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834858567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-945" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834859601</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-946" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:67007964,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;BUvAwOU6V06GyesDG1WjjA.1.1.1.1901589598.2.1.1.1901554759.1.3.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;fe81d0ae-ff2b-4bd2-9002-b4064857d3e6\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31007,\&quot;mstore\&quot;:true,\&quot;flow\&quot;:\&quot;messaging\&quot;,\&quot;seq\&quot;:13329250502586}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22Yr+ceg8qeV06U+qGJcCivw.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_52&amp;connected=true&amp;t=1684834860458</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-947" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834860460</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-948" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:103616131,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;ZvzQhY5dBEyiZXLfNtuLXg.1.1.1.1909578131.1.26.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;f6c008ba-4a14-4b55-b309-a0d4d6ed6116\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31012,\&quot;mstore\&quot;:true,\&quot;flow\&quot;:\&quot;messaging\&quot;,\&quot;seq\&quot;:13329250502587}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22Yr+ceg8qeV06U+qGJcCivw.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_52&amp;connected=true&amp;t=1684834861366</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-949" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834861369</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-951" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834863854</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-950" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:9980185,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;S9vfIoWF2kucocFAxLt09Q.1.1.1.1909376034.1.13.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;9b40c6e6-8c80-48d0-af2d-81eb4a07550f\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31001}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22Yr+ceg8qeV06U+qGJcCivw.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_52&amp;connected=true&amp;t=1684834863853</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-953" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�267�3:::{&quot;id&quot;:40625921,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;1D/QHjOT6UOS8Gr2FxZtHA.1.1.1.1909687246.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;91d01650-bb08-4d77-b748-742629555253\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31004}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:3}&quot;},&quot;body&quot;:&quot;&quot;}�267�3:::{&quot;id&quot;:90106982,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;/urLxgcUiEm0DwacNFKHpg.1.1.1.1909177616.1.27.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;f5ba6efa-abcd-476c-85fb-7569bf7239f1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22Yr+ceg8qeV06U+qGJcCivw.0.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_52&amp;connected=true&amp;t=1684834864842</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-940" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834856</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-955" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:33357729,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;a1c6bc06-be84-4ea8-9879-c3d433989a68\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31003}&quot;,&quot;Trouter-CD&quot;: &quot;9&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:33357729,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;a1c6bc06-be84-4ea8-9879-c3d433989a68\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31003}&quot;,&quot;Trouter-CD&quot;: &quot;9&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834882</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-952" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Yr ceg8qeV06U qGJcCivw.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834864809</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/2d9f574589d348fe-4f9bfa10cd196e53</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-956" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">windows.msn.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/staticsb/statics/latest/fixed/CloudConfigs/WindowsDashboard/ClientApp/wdgts_conf.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-954" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834882</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-958" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:221167382,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6d84135b-6efd-43e7-b986-e1142b3a25f1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;4&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:221167382,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;6d84135b-6efd-43e7-b986-e1142b3a25f1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31026}&quot;,&quot;Trouter-CD&quot;: &quot;4&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834893</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-919" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834807235</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.cad5d65b93274edb</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-cad5d65b93274edb-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-957" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834893</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-962" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:207728796,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;64073710-8d52-4ded-925c-12959d8cc123\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:207728796,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;64073710-8d52-4ded-925c-12959d8cc123\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31024}&quot;,&quot;Trouter-CD&quot;: &quot;3&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834900</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-960" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_53&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-963" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834900980</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-964" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">aGGRycau8iLdJT53YCg9Lw==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-965" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834902864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-966" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834903718</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-967" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:139187901,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;lp7AqGDo7Emn27qas1oOsA.1.1.1.1911287121.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;b602b3e8-a4b3-4679-9bf1-c5b21b8d4626\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22ZdekpJmrsW1O08gzTmqGLg.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_53&amp;connected=true&amp;t=1684834904601</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-968" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834904601</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-970" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834905474</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-969" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:23260757,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;yG+QFaBcOEuMdDyuGfwluA.1.1.1.1910615580.1.26.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;216c8c5b-08c2-4c29-a706-a06a6a49935c\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31002}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22ZdekpJmrsW1O08gzTmqGLg.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_53&amp;connected=true&amp;t=1684834905473</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-973" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:40:07.236Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.cad5d65b93274edb.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834807235&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.673&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834807235&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-971" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;ZdekpJmrsW1O08gzTmqGLg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_53</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834906429</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-972" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:53665274,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;5y9wxvEIDkCrhQPRQ7UdFQ.1.1.1.1911195035.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;cebc3466-6b54-4e9e-9373-7709e7e57596\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31006}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/661ddefa46971e12-4783a0b852f5d569?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22ZdekpJmrsW1O08gzTmqGLg.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_53&amp;connected=true&amp;t=1684834906457</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-961" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834900</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-974" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:290786002,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;b202c21f-cd52-4d54-953e-d87aa3758b9e\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31034}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:290786002,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;b202c21f-cd52-4d54-953e-d87aa3758b9e\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31034}&quot;,&quot;Trouter-CD&quot;: &quot;5&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834933</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-976" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�}ks�Ȓ���&#x15;D&#x7f;ڍ�&lt;��n�؈�1�&#xc;g0x00�g ��T�uܖz$��3�&#x7f;&#x7f;3K��Rw&#x3;vc�&lt;Cإ̺g&gt;�Y*e�=�ĥ�ݟ-KY�iV�&#xe;fU��P�2�v,�^��}&#x6;��Cν&#x7f;&#x1;Ǖ,��&#x1f;��w����D~?�X`��&apos;�&amp;�I&amp;��¶��&#xb;&#x12;���+�W��&#x7f;���&#x2;&#x7f;ե�����2��yj�Cz�&#x2;[)���&apos;�� �&quot;�&#x381;���:�?�p0&#x13;��*E��c I&#x19;&#x5;&#x11;&#xf;�&#x15;�ĳ�8�&#x16;&#x13;�o�a�&apos;�%�3�&#xd;{���y$��A�Y/O��N�H��K�f@���,&#xf;/Ө��&lt;�&#xe;��&#x12;Z&#x15;&#x16;�;U���\FU�g��WuW�Cr��,�B��,���8JX�Q��2�&#x11;Hļ�Po^b��&#x4;��f1�Ս��&#x17;��&#xd;#&#xc;|iV�M�^T&#x11;fZ�Sq��~&#x10;ۆ��+|^�&#x5;Y��v�3��RV&quot;&#x16;�@R�&#x6;Mez.*��g��&#xf;�s0k�BQ�&#x17;�&#xb;l�Bdr~��w�Mx��aY&#x14;�B&#x16;U*�f&#x12;�4�Q;����\d��&#x7f;�L��&#x19;&#x10;�4�&apos;]����,�&#x1a;��uY�˞x��q`󢡟&#x14;镈�&#x7f;^�&quot;�2�C:�&#x6;?���|�%96�G}�&#x1f;���&amp;�&#x1a;�s)bY����EZ�叢&#x0;���(�\T�	%N6�����&#x15;�	�8�%(�!�Y&#x1c;��tb�b_&gt;=EQ)�R&#xd;4H�#���~&#x10;U�x4��)M&#xb;A���e���ӆ~:ϫ&#x7;(ճ#$��&#x13;�&#x6;v�&lt;����&#xf;������&#xf;&#x1e;?&#x4;�&#x8;bϱY`&#x11;�&#x6;&#x16;w@�&#x5;q&quot;�؂IO�&#x1e;�Du=��JΎ&#x7f;�N���ZuM��V�&#xc;?��&#x12;�;&#x14;��Y�/�&#x18;�;�D��^�Yz��%��/2=;�:�CT+�&#xd;
&#x15;��&#x1c;R�`�&#x16;yQ�-)e�g�(���֍{	&#x1a;��w����a&#x98;&#x15;ʀY��&#x15;$�Y�Kxn�qD=,Df&#x2;$&#x5;s�Ѝ\�N,�&#x1d;B&#xe;&#x1a;X&quot;a�EBF#�F��	�x�fg�}&amp;3Y�9&lt;x�B���3�&#x7;&#x17;&#x7f;�g��_ċ�{�������ߪ��������?�bV���^��(���3�&lt;�D���N��g��&#x7;�/���/����I:�9x&#x16;���/���&#x7f;&#x1e;�������?&#x7f;�s?&#x11;��R��X&#x5;�&#x1;l�W��^��y2&#x0;�e��=����u&apos;@ϟ�ޏ�&#x3;�s�&lt;Wy��eX��&#x1a;��)C&#xd;*A	/q6&#x1a;Q�G��_�ɮx�&#x10;&#x11;�&#x13;�q;M��/&#x1e;�(&#xf;&apos;�#���qP�#b��A�ˋE�&amp;�&#x7;&#xe; 8��6�1�&#xf;3pB(�&#x1c;v���P$�H����:���&#x1e;8&#xe;����5&#xf;l��^_(�&#x19;��H&#x7;�9�J&#x1;�/&#x15;H#��&#x18;&#x1d;�SH7�&#x16;���&#x17;��BW_u�G&#xe;�C�&gt;$����&#x1;�E�,&#x1f;&#x14;�yZ&#x1;�-&#xb;���E����G�&#x1f;�!&#x0;�!���8B���&#x11;��m,!j��$�&#x4;�-ɋ�Z&#x5;P%F�Ci&#x1c;&#x6;�z�ӓ�&#x2;t�R&#xf;4-���:�\�h&lt;2k��\�&#x2;F5�O��r9�R�]�.&#x7;�&#x1f;�&#x1d;��E��Õ�a=�+&#x3;7�&#x1a;&#x7;������!0ai@T�|���TV��⢥=��i&amp;UE�H�2��A&#x87;k(�&#x13;�&#x1e;L����^�~�����&amp;N#��բ���2P�&#x1e;&#x1f;�&#x10;����J#�*ڳ��&#x11;��G�5%��O�2�_�X&#x7f;�m��&#x8;�&#x1b;7?v�M+����:&#x11;�ă)&#xd;&#x3;B��K0��HH�&#x11;�w�&#x13;&#x10;�ڎ�E&#x11;�&#x11;&#x1;������ �m&#x1a;r!]�Ʋ&#x12;E&#x5;&quot;S��&#xd;
��*m�&#xd;
�&#xf;�ju&lt;��J�s�sh��Ϧ������&#x1e;&lt;p�?�~��=&#x10;��&#x4;��5�~p�w��{���//��&#x1c;ܛ�&#x17;���2�����&#xb;��F&quot;t���/�&#xf;Ħ �&#xe;@�!	�{���C��{�&quot;&#x11;E�&#x14;ݡfm�Uc��IV��Q��HY~���&#x19;,�h&#x12;.U�pe\f�KyTHe��yK�y��.Ń(�&apos;�b���?��X��ߣ��&#x1b;�ݘ��t7��1ݍ�nLwc�&#x1b;�ݘ��t�4��&#xd;�&#x1e;M�����t�)��2���-��O��|Y}EF�j���&#x1a;t����\7�1&#x5cd;�n�uc�&#x1b;s}�\���?s=���n��&#x1b;3�anߢ-&#xd;
�٩����bG�&lt;&#x18;Z��^&#x18;��&#x18;��h7F�1ڍ�n�vc��&#x1a;��&#x1e;��&#x3;b�vc�ߔ�&#xe;#�C{�F��q&#x19;�s�&#x15;&#x19;�M�&#x7;v��&#x17;�o��8/$&#x18;s�UL��~D&#x12;!��#�r�&#x8;�s��n(�c�����Je9�R&#x8;�B&#x14;g���R��`\&#x7;�:&#x18;���&#xe;�u0��W�:�&#x11;4���6:&#xf;Ρ�ϳ�&#x1;5��&#x17;t&#x1e;.s���-�י|&#xb;&#xb;&#x0;���W�GLt�f&#x1c;��Fc���h-�&#x11;���}&#xc;u7&#x6;P�@�[sZI�&#x1b;��$�&#x14;&#x16;��߯�&#x1a;&#xe;��_��n+x=;&#x18;��BQGU�����y�)�X�+&#x1;l6�&#xd;�_�2�T@\H��-q-�&#x7;&#x4;�P�Ö�����&#x5;}��&#xb;@�4J�ɫJ �&#xb;ԊQ&#xb;9c�6&#x12;ƃq#�J#!�&apos;6&#x13;����;9Ŧ�&#x1a;�R2n&#x8;���!l�!��?�!(&#x0;�ʉ��Q�&#x1e;����j�&#xd;^&#x14;����rC&apos;?�i����F�j�9\q�궵&#xe;�jફ�X�Y^��&#x16;*��&#x5;T&lt;&#x11;�&#xd;&amp;U�5wM��Fy·�?���x�*o�&#x4;�#%W���M�./E&#x16;���&quot;���&#x7;Cw`&#x6;k��:�;Ԕ*&#x3;��x`EDx�4�[~�0���q&#x1d;[���M��&#xd;�=�x&quot;t-&#x1e;&#x4;��=&#x1b;&lt;�(����$&#xc;�8v�Pe&#x1d;�K�&#x15;���I�&#x15;�FY�{�%l!�0�&#x7;~&#x18;%��&#x1b;�&#xb;�:��	x&#x16;��w�F�L�ڠ�+�y��&#xc;��&#x12;&#x0;�*ҳ3�`&#xb;&#x0;�-&#x13;]*�YƯ�t&#x0;�ϰ`vC�&#xb;&#xd;
6Ɉ�&#x11;�/(~�&#x1e;�Ԕc&#x1;iG�@P�&#x13;�G�q��C�&#x7bc;1bk������5&#x14;��&#x2;/%W&#x5;���&#xd;��C&#x3;���&#x1f;�[[m�)&#xc;&#xc;ȉġ@&#x7;�v&#x1c;ף$&#x0;&#x16;e��3&#x18;�&gt;���&#xe;��	Vv&#x1e;:ژl�&lt;U�Kfí��&#x3;��&#x17;&#x1d;c�ҽ����&#x18;#�&#x18;&#xf;-�@)&#x5;z�;��j����E&#x1d; �H&#x19;0�&#xe;��&amp;t�&#x8;j�l�A�Q�~�Q�U&#x7;q�&#x6;(&#x1c;&#x1b;�e�&#x0;@E�o���A���&#xd;
?�&#x1d;%M�������]&#x6;9��j\\N}&#x19;�Ċ=���:�&#xd;
]߶&#x1c;N&#x13;Ϗ\;V/h����j�uu&#x17;v?&#x7;�&#x18;����؞�&amp;��ܝw&#xc;������e�ڋ��~�������&#xb;�[&#x7f;�k����&#x1e;f�#\Ρ&#x17;�=��a�-̗&gt;�%jS�kz�2n��&#x18;Wԛ���)�&#x1f;�U�go��W{�gl��̓^m)�&#x82;P䵱�m&#x7f;��h&#xb;à���8[,+p&#x0;&#x5;�9��4�&#x7f;&lt;&#x1b;p��H���s%Q�:=9�=��#����hN`�J�q1�^s\��3s\�&#x1c;&#x17;��\&#x8;��&#xd;&#x7f;��rwa���p&apos;��rSnJp��}�)�qS�����}i�&#x4;��&#x4;&#x1a;�g�&#x8;&#xd;
�x!;�S�L/d����;��&gt;&#xc;�v�C;&#x1;(&#x5;&#x1b;6��&#xf;&quot;�B�&#x7;�&#xc;Ы&#x2;ء`c���e��&#x1e;&#x1d;���VIc�&#x1b;�����.7v��ˍ]~{v9&apos;������&#x1c;��m����o���|&#x11;&#x1d;��R��̗x�E\ɷ&#x11;&gt;�m�;g��o&#x8;~�e���MG(�^&#x1c;��1x_�}ގ��Q�t���H����`&#x1c;&#x5;�(&#x18;G�8&#xd;
�Q0��q&#x14;��&#x2;��CO8	��(P&#x13;��8&#xd;
7�(\.+�`&#x19;�ys�&#x8;�͟�&lt;�.���/����&#xe;��W2+�0�7�dP����3��Q&#x4;�&#x1d;��G�&#x19;k�c)+�H&#x1b;�lQH�De�}�&#xd;��&#xd;��`C�ҫ�6�c�&#x6;v����&apos;�j;�\��i���M��D�3չ%�S�^&gt;�1ZU}ҩ������Q&#x6;&#x19;&#x14;�&#xc;&#x7;\��&#x18;&#xd;
��&#x1e;�&#x2;!��&#x1f;?�&#x1b;xZgjE�z��&#x17;�Y��&#x7f;�î2d�&#x1f;&#xd;8k�wX|�z$���.�.��h��q����:�US���&#xc;�����&gt;�X���[�3�Ρ?&#x14;f�I�M&#x1a;o�x�ƛ4ޤ�&amp;�7�=zX�O��;&#x10;�P&#x13;z�K��U~v6����*����&#x7f;3��G�&#xe;�7�FC���[�&#x10;�����x&#x14;���c�1�&#x3;7i%&#x12;�j�0�����&#x2;a1��}%&#x12;�j@0m&#x18;��&gt;�?&#xc;�&apos;&#x5;&apos;��&#xb;�&#x1a;�d�X ��Ip&#x1b;��pAP&#x14;&#xb;&#x16;&#x2;����*&#x3;Ꝫ	�UeP �v�|�O&#xe;g&#x2;@&#xd;�S�&#x18;w.p��&#xd;
&#x6;󉼒sUL�=����ef�VfN&#x17;PeUQg&#x1b;&#x3;�&#x4;&#x1e;��l�&#x1;U&#x18;�&#xd;é4x1&#x1b;ETA�|&#x14;Qe��p*�����&#x1b;0�qT��&#x0;2��&#x0;��20���+��&#xf;E&#xc;�~�&#x12;M�@	�M�%]�X\:�&#x15;R�@�&lt;�}I�`tf��&#x18;w}Gw�����;{&#xe;߇�o���h&quot;�ξ�&#xe;o�9 4��[~nve��[~��Lϼ/5�K��R�ݢ&#x3;vw|���C�}�O�.�)��&#x1e;&#x6;���Zr�����������9{{w��&#x1e;����K&#x379;[~�5�ni&#x0;K&#xc;�7r���&#x1c;�5�n�&#x13;i�H�D&#x1a;&apos;�8�Ɖ�ΝH&#x7f;�Gn�y�c�H&#x13;���z1��q&#x14;��`&#x1c;&#x5;�(&#x18;G�8&#xd;
_��y�&#x1d;�����&#x3;�*�����y7�u&#x1e;&#x1d;&#x7f;&#x1f;�&#x2;VQ���&lt;zc_��P���y��:�K~�e��33v[_㹌���w_�/7o�a��k&lt;{f������Wx&#xe;����)&amp;�&#x3;і�����,[:�P?�&gt;&#x17;3�&#x15;�q�wt˿�=�����}���+&lt;�&#x15;&#x7b7;���8��ZE��O���W�9�M��&#x1d;�&#xc;,�v�Oh&#x16;� &#x7;a9P�&#x1a;[�&#x10;�`���=�l�|֦��f���k9����w�&#x5;�&lt;�I������Ɣ;EО)ƟR9��p&#x11;&#x17;��b^&#x13;&#x10;s&#x1e;�/j�&#xc;�~�&amp;��{�5�7��=j�Z0��&#x2;���]&#x15;pl&#x13;�ݨ�w�&#x2;Ԩ�Q��T&#x1;&#xe;&#x3;l��m}��&#x2;�ȧQ��V&#x1;&#x1a;�a_�����F&#x5;nW&#x5;��֛8�sk*`N�|�*�l&#xc;=R���&#x7;�}������ߥ&#x1e;&lt;W�&#xb;��&#x3;&#xe;=t�]�&#x8;��$�]����!P&#x1;����&#x2;�=�Q�[W&#x1;�N[B�Q&#x1;�&#x2;��&#x2;��fw�)&amp;�)6*p{*�&#x4;��&#xe;�&#x0;5��w�&#x2;�=0�hBp�]&#x2;j^&#x12;|����ŀ�i{��3sF&#x5;n[&#x5;8��^13g�&#xd;
ܺ&#xd;
��W�̜�3*p�*@&#xf;m~�&#xf;&#xc;1sfΨ����&#x7f;�_&#x12;3�&#xe;&#x1b;&#x15;�m&#x15;`wzG�&#x19;wب�m����;̍;lT��U�.&#x7f;Bƍ;lT�U ��&#xd;
&#x18;_�T�}~&lt;���]�&#x16;��!�.���?&#x1e;�&gt;y񉡆&#x2;⸒&#x10;�� &#x0;ep0��d ].�&#x13;&apos;��2�&#x1a;/�ly~ò]��&#x1d;6�U�&#x1a;�&gt;��&#xe;��&#x10;�&#x1;j4&#xc;�x�Ί&#xd;
�5Sq2&#x17;�&#x14;cQ����a���芺�&#xd;i&#x10;xs���&#x18;C&#x15;��F*l��&#x10;�����&#x10;���b�5�&#x1b;�Z�4mˀ;�&#x17;X����Y&#x1c;X�&#x1b;�&#x16;�6u&#x3;W&#x6;�&apos;�B��T9�&#xb;�ŉ&#x15;�BZ&lt;�1��&#x8;-&#x2;�)�NB&lt;֗�j:Xc&#xb;&#x1e;�g�U�(����XD��W�H9���J&#x1e;�I�F&#x12;u�&#x7;���&amp;E�+}+!2��cG�&#x1f;Sn��O};$�롞T&#x1f;&#x1d;�NE���&#x0;x2&#x2;�̒��&#xe;(���ى�\��&#xc;8�\&#x15;�Q�}�9��m�%�&#x19;�m&#x1f;���^����&#x18;�,�M3G��5i�ON&#x6;t@3�&#xd;�.&#xd;lH�m&#x1a;��&#xc;�w��&#x7;�4s�`��&#x12;�&#x1e;���Ym&#x3;\�&#x3;�&#x7;&#x4;&#x1d;4���#&#x3;i&#x1f;x&#x0;��@h��qm�&#xd;
,��&#x1;�Ρ���&#xe;w\2��a&#x1;u&#x7;mt��@�]�&#x7;0�@&#xf;ڴO&lt;g�&#x7;�&#x1e;�&amp;��&#x1;%#&#x6;�x�A�Y�A�,���s&#x1f;&#x18;&#x0;��&#x12;8�&#xe;�&#x8;��&#x1b;�a��A�, 0&#xd;�E�abP &#x1b;d`�&#x4;&#x1c;�n&#x1c;A�&#x1c;�T7��&amp;&#x1;�F�6&#xb;�mg8���t8�Dłv���&#x1;̶=&#x18;G;��a&#x1; �&lt;�&#x1a;x�f �~_�&#xd;��PX�[�p&#x1c;mƸ&#x1a;螁)�n��&amp;�P�&#x1d;��&#x3;	,�&#x1f;�&#x1b;�\�&#xc;�d8j&#x4;�y ���l&#x13;&#x6;����#�y0��ɴ�S�y&#x3;v2,&#xc;D&#xd;
�&#x14;�;�	�����}(��&#x1d;&#x1;��Q���̃�}��u�&#x1;X�XX-����&#x3;˯��g&#x1e;�Ao�&#x2;�fy��$mFQ9�z=�&#x1a;h�f&#x17;��&#x7;&#x7;�q% �k��&#xe;��&#x7;=vܾ��&#xd;K&#x4;�٤&#x1c;��M&#xb;&#x1c;���4�s©��^&#x12;A�݁`�n�*��6Q�;8N����Q&#xd;�u���$�&#x5;M&#x12;4�&#x1b;T�s��K��&#xf;�&#x4;M&#xe;�$S=�;D]&#xf;D�֗�&#x16;觏��.E�&#x14;&#x5;�&#x11;�v�t1J5��&#x14;�&gt;&#x2;$$9�#�7���t9��C媡�*�6�7&#x16;�X��&#xe;�o���&#x3;�&#x1d;n;&#x1e;@�3H�@A��&#x3;�3&#x6;�}~�&#x18;H��kS%&#x6;-�&#xd;&#x18;�&gt;�A��&#x19;�&#x3;4�i��z�I��E����&#xd;
�&#x1e;o�D&#x0;]�v֧a&amp;��&#x1;�&#x3;p&#x7;(&#x17;m�&#x0;Ġ��&#xe;��n&#x15;�&#x10;&#x0;�^&amp;&#x11;����2�&#x7;&#x1e;&#x0;�0&#xb;&#x7;��C&#x10;�0�&#x1e;&#xe;U�p&#x4;_6h8���C��6&#xd;
�Ӄk@&#x19;��J�&#x1b;`Xg�k[&quot;&#x3;-���&#x1a;��S}o&#x1b;�&#x0;�i�&#x13;(&#x11;&#xc;�d�`P5�&#x380;��K1ik��98!&#x1d;&#x1a;�&#x14;;8�v;&#x18;�Ðb��X&#x10;&#x16;���.��4&#x10;;�TH5E���(4&#xd;�&#x0;&gt;&#x2;�&#x17;&quot;&#x0;D�g�k2a(�݄&#x13;&#x14;rH�&#xd;�ف݆�&#x6;&#x18;r&#x3;J�5&#x1a;tF�F&#xf;Y��MA�&#xd;
��S&#x17;�y0?V�}�&#xb;&#x8;o�&#x16;�`�%]&#x3;���AF\$;&quot;�/4�ï&#x0;&#x14;&#x6;�.h�8&#x19;P*o��u�&#x5;�&#x5;e��m�R�&#x1d;�]h]�\&#x1f;�]�@�&#x13;���&#xd;&#x14;���]s1�&#xd;S&#x1;��&#x0;I&#x18;&#x4;Pb�n���J�&#x15;&#x4;�&#x3;&#x16;�)�u&#x16;���8�&#x11;r��d�kR,�%��&#x4;1t�2��&amp;j3&apos;�R�ئ8,��a�K����&#x4;���&#x5;�����)����qP*qVZ*&#x8;]7�`b�`�bj��Z&lt;�&#x17;`t�&#x16;�������=�{��B&#xd;
�n�i&lt;��aB�T?�&#x1c;&#x1c;�`�B&#x19;iS��lO�%y7�R���h�)k�I{j6i�rQU�d?{�v؈&#x15;�`�|C&#x1a;��I����%A��&#x19;&#xe;��K&#x17;��(����&#x1a;�a���o�G�&#xe;��&#x1a;�!��f&#x7f;�lu�&lt;&#x4;M��p�fM�4偫��u��ZBT&#xd;
Č�����ﻔ�&lt;&#x4;~���3�&#x7;&apos;��E��㓖���W�I��ys!PZ.�gΗ�51|��K,�D:&#x17;a:O��&lt;�N�s(��aL��م�Ӭy�f�z�Ţ!�,Ϯ�St�V��_�E&#x1a;�&#x16;&#xd;��c&#x1a;F�&#x7;&#xf;�&lt;_v���6�&quot;�·-V7ĮvU�x&#x17;A��&#xd;&#x1e;&quot;��dʱl��E��&#x11;�\qZ�E$`���y^��eF�&#x13;�,��&#xd;
t��$�$��&#x6;&#x1a;�C��d1dDr}a�&lt;?;&#x3;������vȐ	Z&#x19;�_�&#xc;�+&#x14;�&amp;i= o�PO=��(��m	-���hJW�hy.a����&#x12;w&#x3;��{bjz$�&#xf;&#x19;��0�����tj�l�!�ɉ�.2z	�&#x1f;0a�a�&#x1e;���~�&#x3;&#xd;
&#xe;&#xd;
�&#x8;¡/_�Z�.��Q�$�l{�&#x8;Hi�^$%�Ҭ\�&lt;��Hb��&#x18;ʭ��&#x2;/�R��&#x18;&#x6;�=^&#x8;�&#x3;&#x1c;.�j,\x��&#x2;G��+-2Q�c�&#x8;�*�})E&#x11;��=�&#x14;�8���T���&quot;�k	��Z��D&#x16;0��@���!�\�&#x18;Ƅ�E1j�Җ�&lt;ov��&#x1c;����&#x7;U�Bf ;gu�V��*&#x3;��qC2^�8��V�`�Q�č�&#x7;E������v���[&#xb;&#x1;�������dX�х��|���U	�&gt;&#x12;L&#x1f;6n&#x5;&#x1c;Գ�&#x10;��&#x1a;R����+&#x1a;�ҽ�:�4�V��&#xd;
��&#x13;)�PD&#x17;Q�M����&#xb;������&#x1e;E�w&#x1e;Vi5��~&#x1;l���&#x18;(J=�0��E&#xb;%C2 &#x1d;�Ot&#xe;Z7��&quot;&#xd;
B��p��R@S2q��	�4-�9�L&quot;�&quot;&#x5;��*F&lt;��i&#xe;�&#xe;&#xe;1&#xd;(5�(R�BP:�RxV�4#���M+N=&#x4;�R]�&#x1e;��&#xd;J�&#x12;d,U&#x12;;&#x1a;U +,n�q4pPN�&#x2;� ��&#x0;^�%�U�k�P�O��[&#x1;&#x1;�F�S�V&apos;u&#xb;����ð!0��D&#xc;+&#x8;��&#x11;�&#x6;�k�&#x5;L&#x1f;�V�&#x4;(n�E�d�1���p�Q&#xf;`Ŕ�B(&#x6;�:S|0�q~Y�&#x2;&#x14;�ly� �&#x0;�����T9HvK̋3h&#x7f;Q]QD�zr[�&#x15;k�K�.��i֯�@�&#x11;��&quot;�2+�o&#xd;
�_�:��U&#x1e;�`�&#xd;
��2�&amp;�Yw&#x5;�ys�x�.y���&#x7f;�S�x&#x3;���&#xd;
&gt;Y��&#x19;�;X&#x14;&#xd;�G&#xe;!&#xf;��&#x1d;RZ�&#xc;��Ha&gt;�1��&#x17;�&#x1c;���~Z��ռ7{&#x6;&#x10;*�Z0���&#x13;���3&#x18;&#x1b;o!�&gt;9q�/�L̔&#x1b;�&#x13;5^�:�x�7��Wi�U���*��&#xd;
��mG&#x7f;.&#x1;�W[&#x1b;��&#x17;G&#x1e;�&#x12;�&gt;n`&#xb;+�&#x12;۲��	��&#x15;8��0�D̆W��&#xd;�����4V&quot;R�+&#x10;���&gt;&#x3;�7]&#xd;p��lb�&#x18;h6�l�y��L�46&apos;n��$�-.&#x3;��&#x1e;&#x13;V��k��u`l�w��Vl&gt;�=&#x1;u��W&#xb;͎mb.&#x1b;h6�l�y���&apos;��p�&#xb;ẖ-`ܸt&#x1c;���/?�b�0G2ɷB3n[�hv�o&#x10;��uB�g�o&#x1e;�M�?��&#x6;�&#xd;6�&#x15;��Il��&#x1f;&#x13;�8ˎ#����|[�V&#x10;���&amp;�����l�w�O����b�{�n&#x1e;�M�z��&#x6;�&#xd;6�s�ٷ&apos;��M�(�~b9`#��̩�s���F�;/���}��&#x17;u&#x2;�~&#x1d;X���4��&#x8;�&#x1e;}������&lt;N��B��O�A`�����I�u�.�e�.Q���&#x19;I&#x1e;-�&apos;R\�^�G��8���N�-�Ϝ?�v�&#x1b;&#x7;Vb�&#xf;ݾ&#x1;&#xc;C�\�&#x7;�E!kIx&quot;@�ay�I���WaB&#x1b;&#x0;7&#x0;~�&#x0;^&#x1f;��Շ�PZ�et��&#x0;#&#x6;��&#x1a;à\��Z	AV=&#x7;3��5���R�#��&#x7;�gU^���!e&#x1f;�����&#xd;
����@�&#x17;&amp;h=/��&#xf;&#x1f;&#x1a;&#xd;���m���#�&apos;��L,N�*v]�QSz}���&lt;&#x7f;w�&#x17;�q��=�Y�X�&#xc;����]ϑ�y���1è&#x8;&#x5;��HiU\k����&#x1c;iy,GIXW�UI���&#x3;�&#x0;L(5�����&#x1;�R&#x4;C�mԀ��&#x1d;�Eu&#x1e;&#xb;]֖�͇�&apos;2]����&#x15;�9�&#xd;
�N��&apos;j�&#x7;�59[�6&#x1f;�M~08�ɿʢ-�9��&#xb;�}Ք1$k��j�=�Y|��i]�i�Ű�&#x1d;�&apos;�o��W���&#xf;�\V�:�=U�&#x14;�N&#x15;�b�&gt;�9�O&#x4;��.u�d�V�8&#x7;Lx�į!4�&lt;���&#x1b;?�&#x19;V�k�*��&#x15;����A�_&#xc;�f{Dח�����0&#x1c;&#xb;�v�	&#x8;��&quot;���u�i&lt;&#x1b;r�\�p}�ZVm�ez��&#xf;���Yu���U&#x16;m9�&gt;�&#xb;f]��%i�)&#x13;�\萦%M�{�_AMdT4��!�I�&#x5;�Dޖ&lt;�&#x1d;&#x1c;�2�t]&#x1d;P&apos;�X�$G�ʞ�&#x5;&#x18;���[c�TԱ,����&#xc;�F�]�P�*�z�h,&#xc;l�z=ך&#x1f;���[�G%�AI�f�ݲ���-e}a��R�͆���k�ǖ�[&#x5;[��Bג��YKܸT�L�kQ˰3�Oe؄�m�)��蛀�c�&#x4;ڎc7�lٷ�b϶&#x1d;�Zލ0�2i��%j&#x1;iH\&#x7;�!U&#xb;+C&#x6;&#x1d;r���	&#x14;V�6j���p�q&#x3;���&apos;}�U��Iȷ���&#xc;�T&apos;��BT�|={�|&#xf;�������\�&#x1e;��u���Kz�����uo��)&#x16;ց�(��&#xf;��&apos;mA����+XC�U�l&#xd;TW&#xd;
�&#x3;&#x1c;5}�={�Q��Bw&#x1e;�&#x13;����C��Y�&lt;��ߖit�\.���&#x16;Ӵ���1&#x0;�8ӭ�=Q�&#x1e;��բ��&#x13;��t���&#x3;&#x13;&#x5;�u&#x0;.�v`��γ5��vY���G��~��&lt;&#x16;g&quot;K�Rj��|��&#x7f;��y�x���&#x3;&#x13;�&#x1b;�:�Bϸ7K�#[-��EgIՔ&#x1d;z&#x0;�t&#x2;&#x12;��0&#x14;�Z������i!J�&#x15;,p�l�YgЮ�LLiq���7��Υ��$n=7����&#x11;��&#x8;��&apos;���Ǚ��&#x1;}�&#x0;&#x18;�#��X�&#xd;�:�*1��e��h&#xd;�&#xd;
&#x18;1L&#x16;1�u�Ɍk�Zױ�����&#x1d;$b�i��ݤBǧ/PE�Pgδ��dm�$Ǹ&#xd;/˱۽N�&#x1a;��هt�@ḟ�}�*&#x11;-&#x7;�e� �&#x3;����ݤ.wOݡu�,���$�&#x1d;�N2�y&#x1e;]l��!}b&#x16;�&#x15;1昀&#x17;0�c08�w��2[�z�εuOK��U&#x7f;���0kH�]��e&#x1a;��im�!�.E��E$��8�g:U��Ԃ�&#x1c;&#x13;j�&quot;&#x14;��L�� ij�����tG���pӶ��aG�`g3sJ���s�lZ&lt;�&#xc;��&#x1;&#x19;&#xe;�&#x1b;����R���&#x11;��I&#x1e;Pu�ހ��זe��&#x1;�&#x7f;�&#x1d;�fJ&#x8;����R�Ф0L�JP��&amp;���ܴ��&lt;[���O,6��=&#x5ce;&#x3;ww�l��V�����pof�ϦbRm�&#x11;&#x1f;3�����}�����&#x1e;&#x6;�&#x2;7�&amp;�xG�y@��G��o�P��6LGˢo}K���&#x4;���#����Uv�#�BN+Q-˧��+��w���Uv�z˴!NX&#x1b;e_�+2�&amp;�$�z�.�N��of;�&#x13;�&#x11;�&#x13;&amp;q&#x1a;�F&#x5;�*m/&#x7;��&#x0;K����G�:&#x15;�Uƫ�&amp;��Yk�R&lt;��X�1aq��V�JiEA䇮�K&#x1e;%}��&#x14;&#x18;zL3ݙ8o�4&#x1c;&#x1e;���+mQA���iw&#x16;��&#x1e;�&#xd;
������&#x7f;�&apos;I&#xe;=t��5�7&#x7f;&quot;�\�g&gt;I2�$��{�\��&#xb;&#x8;&apos;&gt;J�&#x4;�~�Cˎ&#x13;���#+&#x10;&#x1c;���ÐR¼x�GI�����HO`�&gt;&#x3;�=6}���C����@��f&#x3;�{��L�YaDڑ&#x8;|&#xb;�.�����s�a�a0�QH���&#xe;��[�&#x4;fg���&#x12;s{�&#x1;f&#x3;�&#x6;��&#xb;�|�C~�7&amp;&apos;0r���	cƭ �	 &#xf;��&#x5;�&#x1f;���|&#x1a;�K�ʹ1X&#x6;�`��e�վ�e&#x3;�&#x6;��	ˌ��t|&#x15;7��&#x10;/��&#x2;��&#x1b;�|�JKB/�&#x17;�q&#x18;&#x4;[ay���ϲ�&#x15;�w����&#x18;&#x5;��d&#x7f;@M͞�7&#x1f;^�@��Cp&#x14;y!���s������&#x15;�&#x1c;�čݐ&#x7;��8��`��&#xe;�&lt;�&#x1c;�&amp;&#x16;&#xf;�g�8q��Q?paQ�#�&#x17;&#x8;67��wϚ�����]��L^&apos;����frs3�����Lnn&amp;�S�frs3�����Lnn&amp;77�&#x1f;�������frs3�����L��i��%Y��ӿ��&#x15;cN3�Wi�U�&#x1e;O3��&#x13;f�&#x1b;�&quot;�#˷c&#x18;@&#x1e;&apos;�&#x8;&quot;&#xd;
�*n�ض-&#x13;&#x7f;�Q�۸b��f�σf�3�l��@���=&#x1e;4��$6��&#x15;&#x1;��&#xd;
&#x18;����X�&apos;m+�	&#xc;N&#x18;$a�En&amp;����=^0C&#x3;&#x3;�&#x6;�&#xd;4&#x1b;hޣ��8�&apos;�� � �%�ȵ�&#x4;�Y��g&#x5;Nh���d��Vh�x?&apos;���&#xd;c�&gt;oUd�`��f��&#x6;����1&#x1d;hBJ/&#x12;I�-�&amp;�ũ�,u����&#x1;�YPƷ�L�y��n�hzhsg�&#x10;�&#xc;D&#x1b;�6&#x10;m z&#x7f;&#x10;���&#x1;&apos;&#x1c;&#x1a;&#x3;���E�&#x4;��P�&#x2;��&#x0; ��!&#x11;�=�}���c&#x1;5���1L&#x1b;3o&#x3;&#xd;0&#x1b;`6��G`�Ӧsh&#x13;/�h+���8�&#x1c;&#x6;��-&#x7;�5�\���ok4�2�&#xd;
7k3�}&#x1e;�`�m��f&#x3;�&#x6;��&#x1a;&#xd;�L�9��xN��V&#x12;pho�B�ܷ-&apos;r=&#x19;E!%^��h��(m5.{�&lt;��̫@��&#x6;�&#xd;.�&#x13;�a$��Ѕ&#xe;�p��E8&#x15;\&#x6;V&#x10;y	~wF|&#x1a;D�Nn5&#x1a;�.&#x0;���fn�&#x7;&#x1a;�6&#x0;m&#x0;z�&#x0;�O�6&#x13;&#x16;I�Jay�&#x1d;���&#x8;i&#x12;B�&#x7;�$��&#x12;o+@&#x7f;l&#x14;�f:&#x1f;e�fh&#xe;�}B��n��#�Q&#x3;�&#x6;to&#x11;t�4�&gt;��nO�&#x2;L�hY&gt;��&#xd;
��#?�;���N&#x1f;��W&lt;m&#x3;Vw��j6�o��m�&#x14;��}u�B�����&#xd;�&#x1b;&#x0;�M&#x0;�cs��o�QZ�+&#x8;�ᦋ1W/&#xe;��Hx&#x7f;c^���)�&apos;����&quot;��&#x10;}nJ��̔��B�&#x2;&#xc;��v��;ví�����y��8�^�=f�]&#x2;��y���1��F�&#x2;cuh����&#x1c;iy,GIX[�i�VM�&#x7;4&#x1;���&lt;U=�&#x16;&#xe;��&quot; &#xd;
m�&#x6;Tm�0-��X貶$m&gt;�&lt;��5&#x14;m�x�m�񆛾������lI�|7u�n&#x13;fa��-Y�&#x1f;V��&#x1;�⫴L�zN�x&gt;�&#xb;�7�O&#x16;&#x7f;2�T����J&gt;T�B�ʟ�ߩ&#x2;XpTd&amp;�&gt;:_V�Ա�E&#x7f;_�9`��%&#x6;��]Y�Suꍑ��&#x15;�&#x1a;�ʣo&#x5;&#x6;ؚ?�18�n�G�{�����2&#xc;�&#x2;��{&#x2;������t�k&#x1a;φ\/&#x17;&#x18;&#x7f;D_��U[l��e*fVV=�ε��ʢ-�co�&#x1e;\�[���|-i2��6}&quot;����&#x3;�+����༔��n�&#x1;u&#x2;��Jr&#x4;��Y^�a���5�ME&#x1d;��L�.��u�C�&#x1b;&#xd;
\e��Rް��&#x1;^��kv˲�6����&#x15;(ޛ&#xd;KgK&#x5ee;�-Q�&#xd;
�����%kW������ir-j&#x19;v&#x6;��&#xc;����3��H?��&#x7f;�&#xd;���&amp;����&#xd;&gt;[�-�سmG��w#��L���&#x1b;�&#x16;���u�&#x19;��$��2�P���M&#x0;�µQ�&#x15;��2s���I&#x1f;fU�w&#x12;�]D�&amp;�p�C������&#xf;�ni�&#xc;����d&#x11;)�]����S,�&#x3;�sQ&gt;W���&apos;mA����&#x10;�E�U&#x7f;m&#xd;lW&#xd;
�x%��&#xb;�Y��&lt;��/��&#x1e;?˓&#x7;Y��2�.������~�v)�f���u�Ϯ&#x16;Mޞ���kgfg}�(&#x18;D�9�^���γ5�i,��t��V?�W�|�s��q���&#x13;rg�&#x4;���G�&#x8;�AN�g��&#x14;&#x16;#�&#xf;�k�9&#x1a;z��d��+T�-�&#x15;��`&#x1c;�	#�)a�^�%�D&#x8;	�c�Pzjy����&#x1f;�NKS&quot;�`իd��:�w�ebr�&#xb;�����u.�&#x1b;%q&#x7f;��Bt�&#x18;�E��=Qq2&#x1f;g�&#x12;&#x6;��&#x2;`L�0ʥ&#x38d;&#x1b;�u�Q�=h&#xf;�q����+`�0YĄ7��&amp;3��s]�:��&#x15;�v��5���v�&#xd;
&#x1d;��@&#x15;&#x11;Y}ġ-�&apos;k�&apos;9�&#x10;~Y���u�Ըl�&gt;��&#x5;&#xd;
��&#x4;��U�h90D�&#x6;�&#x1f;��&#x15;�/0u�{�&#xe;��fQ&gt;�&amp;��&#x18;t�&#x19;���b�$&#xc;�&#x13;����1�&#x4;��5&#x1f;��Q��=��Rכu���^�m�:��nG�!i���/��&#x8;_bk3&#xf;&#x19;65�+�d.&quot;y��U��	�Su�H-)/��,&#x7f;���-p��ئA��&#x6;ϋ�&#x1d;�6��ᦝ�1Î�/;[�S��&#x7;�jٟ\&gt;�&#xc;��&#x1;&#x19;&#xe;(Ys���L/&#x12;#&#x16;�&#xf;=��&lt;�&#x1;Y��-�&#x6;1&#x3;&#x3;���&#x12;�!qb����|�uAPT����l�o��M�X˳eq��Db���s�8pwS¶:o����[5&#x1b;�6u3&#x86;��1�&#xe;&#x14;?���ʲ�+�Ǿ�&#x18;�$��&#x2;q}���7&#xc;�����&#x1d;����&#x0;&#xf;&#x0;��&lt;#ma�&#x1e;�J��b~��&#x7;�v�����&#x1f;�CrZ�jY&gt;&#x5;�\�Y�ѥU����۩&#xd;q��(��^��m9&amp;�M������&#x2;�D;&#x15;Y;�&#xe;��&#x11;�&#x3;)q&#x1a;�F&#x5;x.m/�&#x7;�&#x3;������:I�uƫG-��&#x1d;V�&#x17;Q?�&#x12;ʙ��alq/����&#x1d;+J&#x2;Nb�27�����1t�f�st��	:uPgV�4F]x���#���&#x16;���x¨&#x19;&#x0;���&#x7;H�Zh5&#x12;&#x2;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="upload-time" elementType="Header">
                  <stringProp name="Header.name">upload-time</stringProp>
                  <stringProp name="Header.value">1684834940206</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="apikey" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193,bc3902d8132f43e3ae086a009979fa88-e146a898-5750-49fa-9fe6-e4b86d396d3b-7150,9156e11e549943e5970de3f1661df5b2-1c673737-125c-416c-9121-b8a0db2ec86a-6465</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="client-version" elementType="Header">
                  <stringProp name="Header.name">client-version</stringProp>
                  <stringProp name="Header.value">1DS-Web-JS-3.2.6</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="time-delta-to-apply-millis" elementType="Header">
                  <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                  <stringProp name="Header.value">-1326</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-json-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache, no-store</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-977" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">m��n�@&#x10;�m&#x8;ic&#x4;&#x8;�O	��&#xd;
R&#x15;v�_^�F\�8�&quot;�&#x16;��&#x1c;#��&#x15;�4vb/T&lt;B&#x1e;�&#x1b;�&#x1c;x�^#?&#x2;&lt;&#x0;��V*�@5���f4����M&#xd;
Ѱ���qe&#x13;[-~&#x7f;��v�������E�M&amp;,�:J&#x13;�2%�$ZF$K&#x13;��b�~&#x18;���?88&lt;=\&#x6;&#x4;&#x1d;uG�H �Տ&#x2;߫&#x1f;&#x7;��u��B�&amp;&lt;#�r�&#x1;K�&#x6;	M1@&#x13;�T&#x14;M��ru�ɳ⼂�����{���_��n]UWo0�&#x8;&#x12;�	�&#x18;&amp;��3]*��q��TR)�P�8�$t2�&#x6;���;��EUh&#xb;G��R�/Ln��ۄB�!�&#x8;���M^��]�:�gʪRef�$���y��[���lpz&#xc;�&#x4;�~�&#xd;&#xe;&#xd;
@!�$�0&#x1a;n�8D�/$�u�&#x0;,&#xe;&#x5;&#x10;�^&#xf;�&#x5;�8C=&#x12;3���ܖq?&#xc;e���9&#x3;��&#x18;��r&#x10;&#xe;0�s!��z��K��(�Pw�+�����{�&#xf;ZA��X�&#x6;�|Acꔙ[����,�&#x1e;ۯse�&gt;�&#x1b;�vc���g�kU����̔���`�2�p$�#y2��&#x8;*&#x1d;qK���?</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mobile.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1684834942077</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-978" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_54&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-979" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;gJQ5jmIVyarbhNOogCDZEg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834945004</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-980" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;gJQ5jmIVyarbhNOogCDZEg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/cdb1e330c3fb0f99-457f1f415c56d26f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">5+C3c6VBaZ3oq2fJEzIhHw==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-981" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;gJQ5jmIVyarbhNOogCDZEg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834946885</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/cdb1e330c3fb0f99-457f1f415c56d26f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-982" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;gJQ5jmIVyarbhNOogCDZEg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834947767</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/cdb1e330c3fb0f99-457f1f415c56d26f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-983" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:151923104,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;Qerq4wAFK0mrwOS5sL0vWg.1.1.1.1912191395.1.30.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;012a4d34-2763-498a-8825-8cd7c2b2cd38\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31018}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:2}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/cdb1e330c3fb0f99-457f1f415c56d26f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22gJQ5jmIVyarbhNOogCDZEg.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_54&amp;connected=true&amp;t=1684834948794</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-985" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:53726809,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;5y9wxvEIDkCrhQPRQ7UdFQ.1.1.1.1911195035.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;cebc3466-6b54-4e9e-9373-7709e7e57596\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31006}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/cdb1e330c3fb0f99-457f1f415c56d26f?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22gJQ5jmIVyarbhNOogCDZEg.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_54&amp;connected=true&amp;t=1684834949789</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-975" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834933</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-986" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:311756414,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;560bd4d9-c4ea-4571-a099-c00d41c8a0d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31037}&quot;,&quot;Trouter-CD&quot;: &quot;10&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:311756414,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;560bd4d9-c4ea-4571-a099-c00d41c8a0d1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31037}&quot;,&quot;Trouter-CD&quot;: &quot;10&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684834963</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-988" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-992" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834988921</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-984" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;gJQ5jmIVyarbhNOogCDZEg.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834948797</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/cdb1e330c3fb0f99-457f1f415c56d26f</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-959" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834898911</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.96d43edfab0c4c8a</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-96d43edfab0c4c8a-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-993" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">zIF8mXUjzeV5PJFQ1T1vLg==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-994" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834990558</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-997" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="usersInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">usersInfo</stringProp>
                  <stringProp name="Argument.value">[{&quot;userId&quot;:&quot;8:orgid:fe11354e-7d6a-4b40-a838-24ab9ec60651&quot;,&quot;displayName&quot;:&quot;Dilip Kumar MARIPI&quot;},{&quot;userId&quot;:&quot;8:orgid:6e0ff76c-a303-4fac-828d-5147cb9ebd5a&quot;,&quot;displayName&quot;:&quot;Sarath GIDUTURI&quot;},{&quot;userId&quot;:&quot;8:orgid:d7558e5f-433a-482b-b6ee-c9c8b608e4cf&quot;,&quot;displayName&quot;:&quot;Shiva Prasad Rao SHAPELLI&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">HR64x64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="voidCache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">voidCache</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img.teams.skype.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/beta/users/mergedProfilePicturev2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-999" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">as-prod.asyncgw.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/objects/0-sa-d3-a1f0797009822915593fc7cc7df89c2a/views/imgo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-version" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-version</stringProp>
                  <stringProp name="Header.value">1415/1.0.0.2018090100</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="ms-cv" elementType="Header">
                  <stringProp name="Header.name">ms-cv</stringProp>
                  <stringProp name="Header.value">ZpslHQbzsKnwKX5/0zambg.0</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">skype_token eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-987" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684834963</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,000" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,003" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:255383195,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;3b75aa13-2ff7-43da-ba5b-2e1c10a076f0\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31030}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:255383195,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;3b75aa13-2ff7-43da-ba5b-2e1c10a076f0\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31030}&quot;,&quot;Trouter-CD&quot;: &quot;13&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835006</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,001" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:41:38.911Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.96d43edfab0c4c8a.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834898911&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.648&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834898911&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-996" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684834991484</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,004" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:82494996,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;/QizB9UegUGTPCyZf31svA.1.1.1.1915592662.1.30.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;14a024bf-41c7-45ab-91cf-63b60f9888f0\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31009}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22QP9H9Ce5hZy2/cP0uhL61Q.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;connected=true&amp;t=1684835015472</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,002" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835006</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,007" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:303191527,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d53d67b2-1398-4a47-9257-0bfc6743de3a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31036}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:303191527,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;d53d67b2-1398-4a47-9257-0bfc6743de3a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31036}&quot;,&quot;Trouter-CD&quot;: &quot;12&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835017</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,006" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835017</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,005" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835015474</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,009" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:255398068,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;0f6b69f0-ba92-49ee-a550-e1e969add56c\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31030}&quot;,&quot;Trouter-CD&quot;: &quot;11&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:255398068,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;0f6b69f0-ba92-49ee-a550-e1e969add56c\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31030}&quot;,&quot;Trouter-CD&quot;: &quot;11&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835026</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,010" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:72587728,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;QaCCsoDglEezObGxPRSBiw.1.1.1.1916024290.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;37df5b06-5803-41d7-b847-04e90f1c8271\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22QP9H9Ce5hZy2/cP0uhL61Q.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;connected=true&amp;t=1684835027099</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,011" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835027100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,012" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:59160304,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;GgttJAwNjk26bJ/d1uPPLQ.1.1.1.1916205257.1.30.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;21385902-731f-4d6e-9283-19f5da30a1dd\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31007}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22QP9H9Ce5hZy2/cP0uhL61Q.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;connected=true&amp;t=1684835029691</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,013" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835029692</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,014" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:90375156,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;L0kJ/jeljk+DaNx0mwwtSQ.1.1.1.1916289132.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;dad093f5-23df-44a0-98ee-4d20d981ab4f\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22QP9H9Ce5hZy2/cP0uhL61Q.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;connected=true&amp;t=1684835032671</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,015" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835032672</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,017" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;QP9H9Ce5hZy2/cP0uhL61Q.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_55</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835036300</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,008" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835026</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,018" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:274586362,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;809e751e-9c49-481b-bace-48636a064047&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;a2df589e-5de6-4358-9bb3-69c2dcb3eef4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:274586362,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;809e751e-9c49-481b-bace-48636a064047&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;a2df589e-5de6-4358-9bb3-69c2dcb3eef4\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835043</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,019" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835043</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,020" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:135494825,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;c2e92628-4daf-4ef6-b693-b5f29168d50c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;9fe08f51-d3c3-4e3e-ae8b-71d7f6116063\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:135494825,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;c2e92628-4daf-4ef6-b693-b5f29168d50c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;9fe08f51-d3c3-4e3e-ae8b-71d7f6116063\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835049</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,021" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835049</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,022" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:74038775,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;9c7956b3-ddef-44d2-ad20-ea89b7a0744b&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fa3d6b30-a98f-424e-8078-d7436e635e46\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:74038775,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;9c7956b3-ddef-44d2-ad20-ea89b7a0744b&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;fa3d6b30-a98f-424e-8078-d7436e635e46\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835051</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,023" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835051</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,016" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:90380783,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;XRbCYHVZQ0GGHLMC+418Qw.1.1.1.1916421114.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;7a28f9a6-7c00-4a1a-904b-4bdabf19742a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/59951f103bb82243-494585a99d1b1aef?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22QP9H9Ce5hZy2/cP0uhL61Q.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_55&amp;connected=true&amp;t=1684835036298</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,025" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835056</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,026" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835062</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,030" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientDescription&quot;:{&quot;appId&quot;:&quot;TeamsCDLWebWorker&quot;,&quot;aesKey&quot;:&quot;&quot;,&quot;languageId&quot;:&quot;en-US&quot;,&quot;platform&quot;:&quot;electron&quot;,&quot;templateKey&quot;:&quot;TeamsCDLWebWorker_1.6&quot;,&quot;platformUIVersion&quot;:&quot;27/1.0.0.2023051118&quot;},&quot;registrationId&quot;:&quot;0bf19ae5-1da0-4802-aa39-a6de909ca974&quot;,&quot;nodeId&quot;:&quot;&quot;,&quot;transports&quot;:{&quot;TROUTER&quot;:[{&quot;context&quot;:&quot;&quot;,&quot;path&quot;:&quot;${scheme}://trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com:3443/v4/f/ctEHQsQ1EkKn9_LvO4Odhg/&quot;,&quot;ttl&quot;:86400}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/registrar/prod/V2/registrations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/statics/hashed/precompiled-shared-worker-5cd35bd47b731d1d.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,029" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_56&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,028" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�[[s&#x14;9�~�_QQOݱ��-/21&#x11;�.&#xc;�1��&#xb;�n&#x10;�PJG�&#xc;ge�df�&#x18;��&gt;G�,W�&#x2;�&#xc;����&#x7;;�����|��q\�&#x19;�7ǋ&#x16;��&#x18;?&#x1a;w��f���&#x11;�GDn&#xd;
�&#x19;�&#x1b;Y��/�8�&#x6;+�&#xd;��&#x17;/�&#x12;?��\sI��(gVp�&#xd;
H�(B�L�UY�u�}7��8n͙��k�O&#xf;���G�&#x1f;F|�m�X��&#x7f;�7���`^�S��3�Q��4&#x1d;&#x7f;z4V�W&#x3;��B&#x0;-��Edr�F�&#x18;&#x16;q��(�MfiBA��5s&#x13;t��Z���&#x10;���Е\@�&#xd;
L=SE�&#x5;&#x1d;�Y�1+tS���6t=�a�M}�U��K�]SW+�~.r�n����&#x1;�&#xe;�E!��[&amp;����Z�p	�*[�~��u;��ۢ2��jy)qC+��&#x1f;��@�]�y=?T���&#x2;%&#x4;�8!&apos;�&gt;`��&amp;�&amp;�-g�)�:劬_/��@u�k�7&#x13;�e&#xd;
5�ԧu�]	�&#x1f;ʇ��j��r�&#x6;8W&#x15;�JwE?q,x:T�7�&#x1c;���v�����&#x1c;��m79U&#x15;�����&apos;{X�&#x14;&#x6;��Z엋iQ&#xd;Ň�m&#x7;�U�.�R��P��&#x14;�J_&gt;_�Ƭ7&#x1c;�!��&#x1;&#xc;��T{��j^A���&#x1e;7&#x5;����nVn�j�&#x8;&#x16;�&#x6;7&#x1c;�?�&#x1b;�&#xd;
cJp�ލ7ߍcM��\�,5B��M���p*2&#x16;[ic&amp;��5&#x15;$O@2�r�S���&#x3;i����(ލ&#x1f;�&#x1b;�8^��*�e�&#x15;��Bl���1Kci&#x8;�&#x13;&#x19;K�e	S)ޡ4�&lt;�Z�ڜq.Q�ҕ�iS/�;�k���ؤ�a)*N��r�	ф&#x1a;&amp;�4��I&#x18;C=:q&#x3;�9&#x7;&#x1d;�&lt;�JI&#x19;&#x13;�������m+�{W�.�k�&#x4;&gt;�.#��&#x6;��&#x11;��{W���^�&gt;U]/��&#xe;�&#x17;��q&#x1;2S&#x16;R!3��FYjy�4�ޕָw&quot;&#x11;&#x16;u���&#x19;&#xe;@f�Y��\�|�M�&gt;&#x3;&#x3;n��}W뺳u���Y�-�&#xe;���B���h�^��9�[��=+�sX��.��qS��iQe��&#x2;&#x16;p��R��(Πm�&#x14;^�]a&#xb;���!4煆����&#x17;���&#x15;@��o�G�Z@�{�fu��5ƒd��LI&#x10;Ҧֲ4�����тل�ǌQ�&#xd;
�$���b�fJ�ƃ�&#x1a;�&#x1c;&#x1a;�{����y�]&gt;��o�&#x5;0�Iܳ�Y;}�Գ�&#x0;�ݢ:�g�h;�ØK&#x1c;�wPۂj��!�P&lt;���Z��3ХB#���6�Tm��d�s������ܷ��2j��a��Ǒ����w*�|&#x17;���&#x8;�j���n�lY_&lt;�(�(�{�҇�;��Q/�T����0&#x4;�2E&#x3;n��5F��I��&#x5eb;ް��&#x1d;Zg,��u��*��C�;h�\&#x3;3��ﳦ�Y1?��M�(Z&#xc;O/�{���LUfR7&#xd;��β&#xf;�Y��j&#x19;&apos;Y� &#x13;�&#xd;
&#x16;�&#x18;&#x7f;U��aX�]��&#x18;�ѹ$$�9&#x1e;K�5���+&#xd;
�&#x15;���T9�\W��&#xc;�0U�L���&#x13;&#x6;�o&#xd;
��I A=Z(&#x11;��Ƒ0:�&#x14;&#x3;��k�1dǻf�ˊ���&#x5;����v��%&#xd;
�,�&#x19;*��&#x4;���X&#xb;.�@ѡ�J5Eݧ&#xe;G���&#x1;&#x17;uWf�p�7��&#x14;&#x13;7��Um&#x16;�O�^��ݐ��h�p�NOv0�q�&#x16;�&#x15;���&#x6;�&#x2;&#xb;G~�`���s�q��r&#x1d;�&#x18;�@��3ƵV&apos;7��x&#x5;&apos;7���x��&#x16;�si6�y2�E/���b:8Ψ&#x13;&#x1d;c����&#x8;g]u&#x7;�ϡ&#xf;`�(U�UvU5]`˫�&#x1a;g�ˈihs�����`�-�&#xf;�j�&#x1f;S�0�-Q�}�����&#x7f;&#xe;��4&#x7f;�E^T�&#xf;��ӽ��|.���?^��ֳ�_�|9}]������&#x1b;c�&#x1e;&#x1;�&#xd;
r�y���&#x11;��y$-�&#x11;&#x8;@9ɍf�&#x1f;�&#x1b;�o��&#x4;�&#x7;�&#x11;�̱&#x5;�&#x11;v�Gx֘N�&#x16;�X7���\i�Z.&#x1e;��ݝ&#x1b;�&#x5;��&#x1;e��TnR�rb�L&#x11;�&#x5;&#x7;)��[�$R&#x1a;4&#x11;	�{�l���y�)�ĩ�&#x13;&#x4;�&#x1c;ST�&amp;�&#x3;�L���n&#x1c;��N���To�&#x19;@�]�&#x1c;��;H�&#x2;&#x1c;��bb�&#x15;�ty��ԣ&#x17;X�M�7&#x1c;�|�&amp;&#x6;��&#x14;ǕL &#x12;h&#x8;�&#xc;�3&#x11;	I��2&#xf;�a&#x11;���8&#x4;&#x17;&#x1b;&#x12;o��&#x11;�&#x13;w�h-&#x1c;F�&#x1;�q&#xb;�&#x1f;mG�H.��&amp;���&#x6;�$&lt;b&#x11;͆�,�G&#x13;&#x1a;�A (e��\~s¨k���y�&#x8;�2&#x19;&#x4;D��Eq�TIb�y�&#x2;�3)&#xb;�z�kl�=��9�������DX��n$&#x1b;�lP���3a}&#x19;���b��&#x1d;��&#x1d;P�����C&#xc;՟cw���Z�&#x16;laą�B&#xf;V�}&quot;������Nh�&gt;&#x14;e�&#x1e;�&#x1b;d�ˀ7�^&#x1f;�(��d��D&lt;&#x19;a�_G��%���e�=�y����//_&#x1c;��}4*�3&#x18;=&#x7;}V�:rס�6���&#x14;C`xL	�YĸH&#x1b;T��%b����F�ʢ�&#x1c;T�ury�ʪ�`sjS��\R�j&#x1;��D+`)M3�y����I�5&#x13;�R��L��:#,&#x17;&#xd;
&#x12;w�)�=v&#xb;r\��7�hi=��JU&#xb;��z9��z���U)��Y�n0�&#x1c;l&#x1d;҃�80o�=|y���������	�|�}x���zk�&#x17;�D�&#xd;
�jש�R�0��D�&#x5;س���+�[VA��&#x12;�*���`&#xd;&#x13;&#x18;/&#x10;��D��&#xc;�[��]av�]�_&#x1e;�;�&#x1e;z&#x1d;n���&#x4;Bu^����&#x13;07m4ǉE�C�#ն&#x10;&#x11;z���1�~&#xe;&#x1d;�(Js&#x3;&#x1e;��Q�����i�&#x1d;&lt;좗�{�Z�S��	�9ǰX�Y�5n&quot;Q\i�[�1�ȕ;8�GMOa��&#x6;�&#x1;f�Y&gt;�B�N5��a�Po��Ƚ&#xf;&#x1a;&#x16;��ߛ�&#xc;��&#x1c;�j��&#x4;���&#x19;���t��}�.j�p&#x5;=&#x0;&#x1c;]@&#x1e;�&apos;����&#x19;ִ&#x11;z7uK�&#x7;��-D&#x7;rK8-�\���S=ԋԢ;m�u�_&#x15;/�6*�&#x1b;&#x2;�����&#x8;���H�hq��&#xc;{6���x4V¹&gt;s&#x3;P7&#x5;&#x18;;�&#x16;&#x1a;{C�5�;x�~&#x1e;�[���&#xe;�9����m#]�&#xb;7�����V�ajk5���&#x1b;�[�k�&#xe;CƸ&#x14;.�ed��&#x1f;��:��&#x8f;F9F&#x4;�e&#x7f;��Z��A&#xf;�k�|�&#xb;&#x17;q�b��&amp;�L��(O(�&quot;�D2�S&#xc;ו��Q&#x1c;���.ԗ��������;̊/P�&#x1d;&#x0;^���N���L�;|&#x7;&#x7bc;f�t6k�&#x5;���&#x8;�&#xf;��1����Q,M$�&apos;�f���h��-��A�s�א�&#x1f;�%34ӥ��&#x1d;��&#x1c;�:&#x9c;&#x4;~9z��@3�ޙ&#x1c;�&amp;�ǣ���W���&#x7;l6[3�)&#x7;L�2��&#xf;&#x10;4;	S�0�	P�e1�H�`��Ʉ:�*�ҥ⎧�,��!wۂ��a�{Ӿ��X4O���&#x1f;w9�,aް9��K@�&#xb;5�A�&#x16;&#x16;=�˸��&#x0;Z��&#x11;@&#xb;o��v]&#x1d;���}-�&#x5;zi&#xd;݂�T�&#xb;Њ&#xf;�T�&#x1e;\ݼ�]=�1�Ѳ��s�|�&lt;��C0�:߅�^�ouݭMcހ&#x5;L&#x13;��@~3���:��&amp;8��.&#x17;}ƅ�&#xb;�ޜ�E&apos;&#x18;�����&apos;�v�]����V{Y�a&#x7;�vE8&#x11;&#x4;}O꽨�����&#xe;��={���K���?܌&#x17;n�O����4�@V&#x1c;�gP&#x6;��Ӻ�x芭��G�$Mb&#x19;i�RL2y&#x16;e�b�K��&#x4;0&#x8;wW�&#x7;̺�/�̪��&#x16;&quot;�d,&#x12;&quot;M&quot;E&#x14;Dx��,˵E/�&#x2;&#x15;����9&#x18;LA�&#x1d;�z8&#x18;y�Q:���&gt;~%W�7�N&amp;1�a\mL&#x2;W&#x1b;��o�j]*���w�S�dhM&#x18;����&#x6;�6����&#xd;�m`o&#x3;{&#x1b;����&#x6;��&#x1;����&#xc;�k+��4�sL��4J�&amp;)�2&apos;Z��q%���O&#x16;&#x6;ѡ7]7���w�}�&#x15;���m&gt;}=���W���{�&#x1a;ɼLy^�8�&#x12;��6۬{�Сݻ�Zґ�T�#�`���&#x1b;Ń�bڧO&#x5f8;�A�0��%b&#x3;&#x1d;��&#xc;̵�^��&#xb;&gt;-)�u�.m&#x7f;4~Vk&#xf;��k��&#x12;��&#x15;U1+&gt;���O�������R&#x2;�S�sHS�	\�&apos;&#x7f;J~~�H_��ɰ &#x3;���&#xd;B�.���&#x11;�&#x1f;���P���&lt;R7��&#xe;�&#x1c;&#x1a;&#xf;�9؞l�&gt;r&#x18;cݘ&#x2;os_�y���O�&#xd;
{��&#x2;��&gt;�&#x2;�7c�p���7�J&#x1c;���&#x4;�&#x1f;(�@�&#x7;&#xd;
&gt;P���&#xf;&#x14;|��&#x3;&#x5;&#x1f;(�@�&#x7;&#xd;
�aP�&#x19;��&#x14;&lt;&#xd;&#x14;��G��&#x17;�S��&#x4;����30�D���vL�7}��%�u�x&#x0;�n�����`ʇ&#x14;a	����&#x5;�&#x10;�u&#xc;`@��&#x0;Ieh��&#xd;�&#x8;&apos;6¼FGY���QY�&#x18;����K&#x7f;��ߠo�&#x17;�g+�C���O&gt;�^�&#xf;7��&gt;A�&#x5;�~^��8�S|�D2�Щ�uv���&#x10;&#x4;���E�&#x6;S��EL|W84&#x0;Q&#x1;�&#xd;
@T&#x0;�&#x2;&#x10;&#x15;��&#x0;D&#x5; *&#x0;Q&#x1;�&#xd;
@�&#x3;&#x0;�(�kI~&#x1c;&#x10;�&#x2;&#x10;��&#x1;Q�-�wx&#xb;��$&#x6;�&#x16;&#x14;�lB��ٷ�Z�ҔDq+MƬ�T*��&#xd;
��̀�5%���&#x16;$�&#x5;	oA�[&#x10;w&#x14;�&#x12;�[�����&#x17; �&#x5;Hx&#x1;&#x12;^��&#x17; &#xf;�&#x5;&#x8;�&#x12;�Il&quot;&#xc;�F�:�0}%�$�&#x8;:�45�2��&#x10;[��آ&#x17;�*�N���,�&#x0;��&#x17; w:�;�}ܮ&#x19;^{�_���4�J1E4$B�Je&quot;�Y�&#x3;�	ü�/�ڃ��k��G�}`�&#x3;�&#x1e;X���&#x7;�=��e&#xf;,{`�&#x3;�&#x1e;X����3)&#x7f;&#x1c;��&#x3;����&#x7f;��&#x1e;_��|��7h�ɞ{����&#x10;��&#x3;d$d&amp;�~h�&#x12;&#xd;&lt;e &#x12;L����&#x7;�G����;�gxQ�]�ЀC&#x5;&#x1c;*�P&#x1;�&#xd;
8T��&#x2;&#xe;&#x15;p��C&#x5;&#x1c;*�P&#xf;&#x1;�J7d&quot;~&#x1c;&#xe;%&#x2;&#xe;���P&#x7f;��&#x1e;wa5?�+��b��j!5�s&#xd;�`&#x1f;�!Tb�`:�,���&#x7;&#x5;&#x13;��3��;��!2�&#x8;����#��&#x8;�&lt;�+���#��&#x8;�&lt;�+���㡿� �+�&#x19;e66�&#x8;�&#x1b;cP�{Ɛ�F&apos;2Wy�@&apos;@-h+p&#x11;0�����&#x12;Iփ�&#x7;���+y֛&lt;�-���y�т�|��^u,�38~��C��;ż�&#x18;���|�3�&#xe;K5�-凋�CQ&#x1c;�3&#x14;�&#x6;0q�|W�w&#x19;�ʀ-&#x1c;.���&#xf;�O&#x6;����&#x17;x�k;w�o��d�p�d�ó�@�&#x7;�&gt;��&#xf;4����&#x6;)��&#xf;&lt;}��&#x3;O&#x1f;x�&#x7;���&#xb;&#x1e;�hTM�&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="upload-time" elementType="Header">
                  <stringProp name="Header.name">upload-time</stringProp>
                  <stringProp name="Header.value">1684835071590</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="apikey" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="client-version" elementType="Header">
                  <stringProp name="Header.name">client-version</stringProp>
                  <stringProp name="Header.value">1DS-Web-JS-3.2.5</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="time-delta-to-apply-millis" elementType="Header">
                  <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                  <stringProp name="Header.value">-1332</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-json-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache, no-store</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,031" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835073438</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,032" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">cSPh/icF54YJtrDaQ5VC+Q==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,033" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835075047</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,034" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835075975</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,035" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:90414668,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;XRbCYHVZQ0GGHLMC+418Qw.1.1.1.1916421114.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;7a28f9a6-7c00-4a1a-904b-4bdabf19742a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31010,\&quot;mstore\&quot;:true,\&quot;flow\&quot;:\&quot;messaging\&quot;,\&quot;seq\&quot;:13329250502588}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22KOmipqKvqD9/ZnCchuvPEw.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_56&amp;connected=true&amp;t=1684835076744</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,036" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835076746</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,024" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:274596328,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b366c981-e980-46b4-9fb9-183bd77f849d&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;809e751e-9c49-481b-bace-48636a064047&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;45e924a4-c93a-45f3-ab7d-b3997faf3ed9\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:274596328,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;b366c981-e980-46b4-9fb9-183bd77f849d&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;809e751e-9c49-481b-bace-48636a064047&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;45e924a4-c93a-45f3-ab7d-b3997faf3ed9\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31032}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835056</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,039" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="�444�3:::{&quot;id&quot;:135505759,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d62943d5-69a6-4cae-a05d-d1d1adf97bd9&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;c2e92628-4daf-4ef6-b693-b5f29168d50c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;de1b22c3-0972-4b78-8ada-2249fcaa6c2a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:74050526,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;41132797-7fd2-4320-985c-ccd84787999a&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;9c7956b3-ddef-44d2-ad20-ea89b7a0744b&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5e8b9986-d8af-41d5-a656-28d1d2b37062\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">�444�3:::{&quot;id&quot;:135505759,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;d62943d5-69a6-4cae-a05d-d1d1adf97bd9&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;c2e92628-4daf-4ef6-b693-b5f29168d50c&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;de1b22c3-0972-4b78-8ada-2249fcaa6c2a\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}�443�3:::{&quot;id&quot;:74050526,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;41132797-7fd2-4320-985c-ccd84787999a&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;9c7956b3-ddef-44d2-ad20-ea89b7a0744b&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;5e8b9986-d8af-41d5-a656-28d1d2b37062\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835078</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,037" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:139447078,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;evxJ7JEx50m4AZ8j8Xw4OA.1.1.1.1917014194.1.15.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;fac8140e-02d9-490f-9463-d127e7153cc5\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31016}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22KOmipqKvqD9/ZnCchuvPEw.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_56&amp;connected=true&amp;t=1684835078193</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,038" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835078194</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,041" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835079184</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,040" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:145684691,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;o3LMrbxd2ky2JSEMhTcJ4Q.1.1.1.1916693729.1.14.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;5c54dd19-b4eb-4f49-86bf-46c7e87ff9f3\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31017}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22KOmipqKvqD9/ZnCchuvPEw.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_56&amp;connected=true&amp;t=1684835079180</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,043" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�267�3:::{&quot;id&quot;:40923626,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;v+POs1C4z0Ss9r6RSfwANw.1.1.1.1917486965.1.30.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;efc2d443-4c07-4f63-9061-50658120c677\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31004}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}�267�3:::{&quot;id&quot;:90447937,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;bNa3j24AR0y86K6XEcK85g.1.1.1.1917396150.1.15.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;b542767b-76a2-48ba-a4e4-5c62ba5cc3e2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}�268�3:::{&quot;id&quot;:145685883,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;qDENkRKUmkeC6Da8oRDYGg.1.1.1.1917158956.1.15.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;dae593be-000b-4736-aa65-140b1b4c96e2\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31017}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}�283�3:::{&quot;id&quot;:72659100,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;psMiscqRdUGnljD6AbnjOA.1.1.1.1917026344.1.1.1.1917084538.1.2.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;1b5e4109-c4de-4267-aa13-196aa2850f7d\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22KOmipqKvqD9/ZnCchuvPEw.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_56&amp;connected=true&amp;t=1684835080064</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-995" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684834990563</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.c03e2a0108394a0f</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-c03e2a0108394a0f-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,042" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;KOmipqKvqD9/ZnCchuvPEw.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_56</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835080033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/c8a67a40721a8497-4ebe6ae7bbd3b667</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,045" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:43:10.563Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.c03e2a0108394a0f.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834990563&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.600&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684834990563&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,027" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835064</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,047" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_57&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-skypetoken" elementType="Header">
                  <stringProp name="Header.name">x-skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,048" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835117622</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,049" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/a9ea1fdec8fa2971-49eb02bd66fd46e9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">kJwrnaitKS4R3Agm3hraew==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,050" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835119318</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,051" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835120147</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,052" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:145742986,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;6nZCqZsYzUOBzrfhzZey2g.1.1.1.1918776328.1.15.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;b3aae71b-31bb-4ee8-880b-770975e2bb37\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31017}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:1}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22LeGXoo+HjXXvsAoHw9ZVqQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_57&amp;connected=true&amp;t=1684835121306</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,046" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835104</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,053" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835121308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,054" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835145</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,056" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:215673282,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;62820c65-13bd-4acf-9b74-dea2334b92c3\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;9&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:215673282,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;62820c65-13bd-4acf-9b74-dea2334b92c3\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31025}&quot;,&quot;Trouter-CD&quot;: &quot;9&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835162</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,055" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835162</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,058" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:74136728,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;284b972e-a7a8-4eef-a74c-33306a0bb2a5&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e2d5fcbd-ce77-4a42-ad9d-c0c7699c3060\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:74136728,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;284b972e-a7a8-4eef-a74c-33306a0bb2a5&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e2d5fcbd-ce77-4a42-ad9d-c0c7699c3060\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835163</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,060" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�[[sܶ&#xe;~?�bGO�&#x1c;kC�.g���N�:��v�&apos;�&#xc;%Ak���V�|I���&#x0;��&#x17;�M���n&#x13;桉&#x8;&#x10;&#x4;I&#x10;�&gt;���(�&#x18;�u������6�&#xc;��&#x16;�Y��\ӲOX����&#xd;=7�&#x5;5.�B&#x5;g����.��G�&#x1e;�vȬ$ඕ:6�&#x2;X�	���&#xf;S&#x11;&#x4;�&#xb;��X�d��&#x5;��Z�[��&#x19;D�Ǧ=��&#x1e;����]�a�I&#x19;����x��z�q�f��DY�z&apos;A&#x11;@&#x1c;�N�I�}3M&#x12;˴E&#x1c;�Q�&#x4;)�88��F3�~y&#x19;��&amp;&#x8;���$W&#x10;� )�&quot;+P A���8���.S9��1z&#x15;U�2al�&#x10;˪,f���T�!&#x1f;�&lt;�&#x2;(���F�&#x13;�&#x12;&#xd;�Y&#x16;5&#x14;�&#x2;��k�q˚��6�,+&#x12;�5]���&#x1;g�¨�&#x15;�u�f!c�4)&apos;�b&lt;�ypư&#x1d;gE��#v�/s�m�s&#xc;R$B&#xd;
&#x12;�j�T�#!Ai&#x1b;��-�Y3z�H�pr3!�&amp;��\�2k&apos;���NiR�&#x13;�d&#x6;u��5�&#x1b;�e-7�E��~P{��&#x0;�U����aތ��&#x13;&#x1f;��&#x12;�3�f��ҖU&apos;?��K&#x11;&#x7fc;jD�L;�e��ۗ��;EZ�&#x13;/~��&#x4;��4Sk&#x1a;�Y|�A���&#x1b;�p):�Ͳ��&#xf;}���#�y�%&amp;s��t,��0��&#x4;.�&#x14;��&#xd;
|&#xd;
�z��¥j�&#x16;{�&#x1d;&#x13;�y&#x5;�l*�GD��&#x18;&#xd;
Qe%��&#x1b;�&#x17;v&#x13;��(p&#x19;%�&#xb;���zY��&#x13;�H&#x3;&#x1d;�&#xc;i�#&#x18;�+�l���B��O��6�v��Y�7Ͷ��$&#x1a;{gd�� {/˸���D|1�ʦH�;)�j&#x1d;gE6�&gt;&#x2;5��ltN&amp;&#x2;�A&#x12;Iǔ�6}�fp5)+9&#x1b;){YQ�O=lG~�������&#x18;�`&#x4;&#x5;T&quot;G��&#x13;A&#xd;�&#xd;�	/&gt;�&#x3;o�8��48�%�mN�ʟ�&#xe;�&#xe;ң��.&#x13;�&gt;&#x7f;矾�.&#x7f;xo�s&#x18;���?&#x1f;�G��z��.���&quot;��&#xf;&#xe;��Ux��}&#x1d;�&#x1b;/&#x7f;���&#x1d;�g�?�m{�&#x11;Ũ&#x11;�Y�@�1#�R&#x16;0;[��o�RICG�&#x4;r�3W�Lw���LE!)�&#x2;�Զ�&#x8;B�Ĭ&#x14;�a�m&#x13;&#x1c;�v&#x16;%��+&#x1b;����&#x1e;V��&#x1e;c��&#x7f;c&#x1c;�Vh�&#x4;&quot;�G�&#x15;{V�8,��醠�9*�G{0�0�{s]�M��x�Ƣ��C������&gt;�&#x38b;��UdO&amp;�6m_Ov&#x12;��Cs��,��t���tֺ���&#xc;���w&#x10;���-��}�&#xd;
�;8�[&#xe;�`}��Фc�^ö&#x3;ϥ.&#x7b4;�u��i�~��\&#x1e;�3�N`;&#x1;�t)���&#xc;S�X%^�\�F�y��ݲ%P_�r��&#xd;N�t����&#x1b;��9�(�1Q�P�&#x1b;U|�I�S�&#x11;��&#x1c;:&#x1;&#x10;��Y�3&gt;��=�;&#x14;��&lt;��_�|@m1�TX&#x74b;�CLViY��(��Y&#x18;&#x1c;�9����ܙh&#x1f;��I�&#x1e;�m[��&#x11;`&gt;]X�{�`\@��&#x1a;�~{���\f�U�[&#x58c;&#x17;e�/���(�(&#x13;m�K&#x7f;g�&#x16;��Ş�O���QZ&quot;k(�Qٔ&quot;w&#x1f;�UY]���&quot;�&#xd;
P&#x3;I��&lt;,�&#x8;��&#x17;1�0��Fw�|z�ϰ+TӰI�&#x18;����^&#x6;�̥�Yr�������b�&#xf;�A�&#x7f;&#x17;&#x18;&#x1c;Գ���&#x1;��&#x14;�,�YP}���&#x4;�&#x0;ˋ)`�#�&#x7;-j&#x12;&#x11;O}��(�܏&#x1d;@H��&#x2;,���k�!�-�z~&#x1c;[N�&#x11;�YN�$�&#x3;fE�&#x0;�Rk)E%1dje�Q9&gt;�Y�V��1j��^�1�s��&#x1d;��w��nf�&#x7;��9�&#x7;x��&#x1f;`��&apos;g7��\�&#x1f;�����&apos;{o�&#x6;yv&#x1;�W&#x10;_��&#xf;N&#x8;�-��`�&#x1c;�Nxƙ�Q�b�&#x18;��&#x1f;�&#x10;�Y;���H�&#x6;�LO�f&#xb;��bR&#x7f;	2&gt;�,)^T&#x10;)4�]*(&#x12;�&#x8;�5jr�&amp;[d�5�Y�B!&quot;�e�oc9&#x16;&#x1b;qL-�R���ϧ?&#x0;ǹ5&#xc;}�	�8�p\�q&#xd;�5&#x1c;�p\�q&#xd;�5&#x1c;�p\�q&#xd;�&#x15;&#x1c;w֙=t���p��p\��Ǆ��F�F�d�Fʲ�@��?[�����+�j&#xf; ����&#x17;�g:a&#x18;���&#x10;S�ib��ǣ�M&#x10;�G��:&#x5;�6�!oz�n\&quot;d5�%=�F&#x17;�Np��t&#xb;b�f&#x5fa;}-���(˱&#x7;M�&#x2;��S���&quot;��q�^&#x10;&quot;mU�&#x0;$��&#xe;�M*�HTpm��3��I&#xf;&#x1;&#x3;&lt;����&#x19;z�e:�	0�&#x14;&#x1b;�(N&#x3;A&#x1;�����	�L�z�DH&#xe;0rKաV�ì��	u&#x13;�3��\�o�&#x1d;�B&#xd;
&#x7;jr&#xd;�)�/ߔ&quot;�$ݤ�D��F&#x1;24�DsZM���)L�I#�p�)�q&gt;�����0y�ig�L�\&#x1d;�)�X��&#x19;.��&#x15;!&#x4;��p:&#x18;��Ms�-�7�zO&#x2;�}���.&#x14;�&#xb;C3��7&#x1d;�&#xe;� Mm����\&#x6;^ ��I[G�zT&#x14;�j��;wf&#xd;
mC�3G�&#x1c;&apos;b)^�H&quot;�&#x4;&#xf;���H&#x4;�	a��&#x16;^j&#x16;&quot;�����&#x2;Z�OS&gt;6�݉�F ?��&#x1e;�9Y{H&#x1e;���R�&#x1;*)��SIϷ�$S���d&#xd;qY$�_&gt;�&amp;�^��UsU�&amp;5��lR�I�&amp;�&#x1a;6Yw0�K|�{����?�&apos;e9&#x1a;�8�&#x7;���ko�U��a�&#x1f;�&#x1f;�8ϧ&#x19;f����kCQ�&#x1e;�t)�ag�%&#x10;Y�[&lt;@_d�&#x7f;��O&#x7;&#x18;���&#x1b;��{�&#x5;9L�&#x14;��&#x3;mȇ&#x18;W~&#x4;�RK �&#x2;��	�&#xb;�=�I�n&#x7;ܲ&#x2;�mx�&#x1a;�FI�&gt;��֬��ڟ�&amp;��Ƿ�Obd��Y�ԟ�����m_w�מ��&#x1d;jк֓&#x3;��]��T��ߑRH)�&quot;2J&#x18;�Q�&#x5;-�W�ͩPq�aOÔp&#x19;&quot;��N�y�&#x10;���2��y7&#x1e;�&quot;9.�*n=�����;AIL�&#xb;`&quot;�eՁ��&#x1a;�&#x2;VuPy�C��|k&#x13;u;?�ᴪ&#xf;�j�O�&#xe;=^�&#x1b;�%.�&#x1b;��\�ɦ�8��5�s�Ɲ��r��Q%@~���ߞ��&#xc;�;�&#x10;&#x10;NSD�&#xd;l�v�T	�ڜpցRi�0Zp�&#x12;&#x6;!&#x14;��&#x13;F&#x7;sf&#xf;&#xc;&#x7f;�a�O&lt;�-&#x6;�܋��&#x19;�?�,�&#x2;��&#xd;&#x4;�&#x10;&#x6;�&lt;&#x1f;&#x4;�&#xd;
�e���~&#x7f;����櫧8D�!ʺ�\�&#xd;���&#x19;ź�̀qDdLp&#x16;����Q��N�]�98�&#xd;
�h��AS�ՠ�_����;|&#x1b;�&#x7f;����&#x7;�{��&#x7f;�E��z����_C�mf���%*��H!&#x7f;���9�eFW���ҿ����S�������&#x7;j�&#x16;����&#x15;&quot;&#x14;@\�(5�����&#xd;
����&#xd;
���&#x7f;&#xd;�&#x5;�ôW�=��`��E.�&quot;���s&lt;����&lt;��&lt;RW�u��1*��ݭ���ͿP��z�&#xd;
�2��&#xd;
�JՉue_���V�w,/$�2��3fܩ�S�0tE&#x7f;ي��V�y��-@�e�h�I&quot;a&#x6;&#x1;&#x8;��V`&apos;n&#x18;&#x5;Nb�J���KR��gu�&#x17;�&#xd;n�+�������|�����O��}O���J�����]��&#x7;~�oy�7����+�����LO?&#x1b;�Ƴ��0�Ux��6X�f�˰�%*��Oz��|��|RW�uE�&#x11;*���XP&#xf;U.�|A?p&#x1f;����躜�R�a��}�sOU�&#xf;]�f�&#x13;���&#x1f;��Bu��&#x17;������&#x13;[x �]{&#xe;&#xe;�x&#x8;�D��&#x19;���ƞ�@�W���k�����ʯ���ʯ�e���&#x1f;0��.�v&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="upload-time" elementType="Header">
                  <stringProp name="Header.name">upload-time</stringProp>
                  <stringProp name="Header.value">1684835164504</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="apikey" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="client-version" elementType="Header">
                  <stringProp name="Header.name">client-version</stringProp>
                  <stringProp name="Header.value">1DS-Web-JS-3.2.6</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="time-delta-to-apply-millis" elementType="Header">
                  <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                  <stringProp name="Header.value">-1326</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-json-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache, no-store</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,059" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835163</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,062" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:88472663,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;8b93ab5d-3d8d-4f28-b7a0-58f6b7ae22f1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;Trouter-CD&quot;: &quot;55&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:88472663,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;8b93ab5d-3d8d-4f28-b7a0-58f6b7ae22f1\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31010}&quot;,&quot;Trouter-CD&quot;: &quot;55&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835173</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,044" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ht60S2tQiHb5OJ5R0TpAjw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1684835082168</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_blazor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/epd</stringProp>
                </elementProp>
                <elementProp name="x-signalr-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                  <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|f0240babd01746d7b699fccb0bcba8d6.74fae2a57aa540d3</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f0240babd01746d7b699fccb0bcba8d6-74fae2a57aa540d3-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,061" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835173</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,065" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:74147569,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d43c5bb-feea-4d92-aa80-f93e4bf0dbf0&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;284b972e-a7a8-4eef-a74c-33306a0bb2a5&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;2839ea06-ed7c-4350-8477-d8cfdd187cff\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:74147569,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;4d43c5bb-feea-4d92-aa80-f93e4bf0dbf0&quot;,&quot;X-Microsoft-Skype-Original-Message-ID&quot;: &quot;284b972e-a7a8-4eef-a74c-33306a0bb2a5&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;2839ea06-ed7c-4350-8477-d8cfdd187cff\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835176</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,057" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685339555894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684737621894</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2023.13.01.3&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;27/1.0.0.2023051118&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">0bf19ae5-1da0-4802-aa39-a6de909ca974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;LeGXoo HjXXvsAoHw9ZVqQ.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">n9_LvO4Odhg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">cde4c8a3-1b6e-4e74-8ea3-64606ed46285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1684729201788_57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1684835162198</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,066" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3:::{&quot;id&quot;:145835195,&quot;status&quot;:200,&quot;headers&quot;:{&quot;MS-CV&quot;:&quot;7rsdT64r0UezZ0w3957QGQ.1.1.1.1922359600.1.15.0.1.1.0&quot;,&quot;trouter-request&quot;:&quot;{\&quot;id\&quot;:\&quot;3a961b65-7f2b-4086-bbd6-ee4966377849\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-jpwe-5-b\&quot;,\&quot;port\&quot;:31017}&quot;,&quot;trouter-client&quot;:&quot;{\&quot;cd\&quot;:0}&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a9ea1fdec8fa2971-49eb02bd66fd46e9?sr=K0wAAPsgctEHQsQ1EkKn9_LvO4Odhg26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjyWLZ2CZwRi9FjT8VWLxUSXgo9D6IpS5Jct3qk6nvTYs&amp;issuer=prod-2&amp;sp=connect&amp;se=1685339555894&amp;st=1684737621894&amp;sig=_dPjto2LPwFipUgomcKqpptRQ7WnFcwSnJuCha65R4A&amp;v=v4&amp;tc=%7B%22cv%22:%222023.13.01.3%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2227/1.0.0.2023051118%22%7D&amp;timeout=40&amp;auth=true&amp;epid=0bf19ae5-1da0-4802-aa39-a6de909ca974&amp;userActivity=%7B%22state%22:%22active%22,%22cv%22:%22LeGXoo+HjXXvsAoHw9ZVqQ.1%22%7D&amp;ccid=n9_LvO4Odhg&amp;cor_id=cde4c8a3-1b6e-4e74-8ea3-64606ed46285&amp;con_num=1684729201788_57&amp;connected=true&amp;t=1684835187126</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,068" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-05-23T09:44:42.169Z&quot;,&quot;iKey&quot;:&quot;438211d3-e2d9-4ce5-af4d-93f6735f5c1b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.438211d3e2d94ce5af4d93f6735f5c1b.RemoteDependency&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;WuoIQflKpdaNGUGCoxPbUg&quot;,&quot;ai.session.id&quot;:&quot;89xzMHXZmnoiiTiF/NdQQ7&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/epd&quot;,&quot;ai.operation.id&quot;:&quot;f0240babd01746d7b699fccb0bcba8d6&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.13&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;RemoteDependencyData&quot;,&quot;baseData&quot;:{&quot;id&quot;:&quot;|f0240babd01746d7b699fccb0bcba8d6.74fae2a57aa540d3.&quot;,&quot;ver&quot;:2,&quot;name&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684835082168&quot;,&quot;resultCode&quot;:&quot;200&quot;,&quot;duration&quot;:&quot;00:01:31.789&quot;,&quot;success&quot;:true,&quot;data&quot;:&quot;GET ${scheme}://mtblazordemoapp.azurewebsites.net/_blazor?id=ht60S2tQiHb5OJ5R0TpAjw&amp;_=1684835082168&quot;,&quot;target&quot;:&quot;mtblazordemoapp.azurewebsites.net | cid-v1:f88a4f06-b573-4aa0-8b4f-b29017c7c9ea&quot;,&quot;type&quot;:&quot;Fetch&quot;,&quot;properties&quot;:{&quot;HttpMethod&quot;:&quot;GET&quot;},&quot;measurements&quot;:{}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">centralus-2.in.applicationinsights.azure.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">//v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,069" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="displayname" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">displayname</stringProp>
                  <stringProp name="Argument.value">Solomon KUMBALA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">size</stringProp>
                  <stringProp name="Argument.value">HR96x96</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/mt/apac/beta/users/8:orgid:28c7f243-8dbd-47dd-9705-cf941da636f0/profilepicturev2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/multi-window/?agent=electron&amp;version=23040202705</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;102&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,064" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835176</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,071" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:159393536,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;ec493130-5fc4-4cfa-a4f8-67bf9d5d5d40\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31019}&quot;,&quot;Trouter-CD&quot;: &quot;8&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:159393536,&quot;status&quot;:200,&quot;headers&quot;:{&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;ec493130-5fc4-4cfa-a4f8-67bf9d5d5d40\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31019}&quot;,&quot;Trouter-CD&quot;: &quot;8&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835193</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,070" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835193</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,073" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:74161557,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;de3afec5-0e66-4079-a94a-472cc848cb72&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e6d0fd71-540c-4f56-9728-2b4532f99982\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:74161557,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;de3afec5-0e66-4079-a94a-472cc848cb72&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;e6d0fd71-540c-4f56-9728-2b4532f99982\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31008}&quot;,&quot;Trouter-CD&quot;: &quot;0&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835194</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,072" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1684814852402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1685416477402</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">MBWs22k0xuw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">55a396bb-ffff-ffff-57cf-a7257eb3bfd7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">7525526694270198739</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1684835194</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,075" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="3:::{&quot;id&quot;:124351507,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;9f64fb36-aa76-4431-950c-f031ed1abb62&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;277d91d4-de0a-4c28-b088-a33246feaf4f\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3:::{&quot;id&quot;:124351507,&quot;status&quot;:200,&quot;headers&quot;:{&quot;X-Microsoft-Skype-Chain-ID&quot;: &quot;e9a67659-c1a7-4538-8ff3-11d5650e68a4&quot;,&quot;X-Microsoft-Skype-Message-ID&quot;: &quot;9f64fb36-aa76-4431-950c-f031ed1abb62&quot;,&quot;Trouter-Responder&quot;: &quot;Client&quot;,&quot;trouter-request&quot;: &quot;{\&quot;id\&quot;:\&quot;277d91d4-de0a-4c28-b088-a33246feaf4f\&quot;,\&quot;src\&quot;:\&quot;trouter2-azsc-asse-3-a\&quot;,\&quot;port\&quot;:31014}&quot;,&quot;Trouter-CD&quot;: &quot;1&quot;},&quot;body&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trouter2-azsc-asse-3-a.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/a3e6aea6731f9054-49b48887d7e666b9?st=1684814852402&amp;se=1685416477402&amp;sr=LEwAAPsgzaAKeTwgzkuBMeznCPTTlA26QUQp0yU1oZh528boSB39gue9QSgqs7Wmvr-ZUsEjCmHMDYok87a2Set_l8IMDqQhJLhJtnINWiEiU5OCgAU&amp;sig=K4z94MDC6NzeVyLXqPBwnNfalBYmyeBPVweTGzHM1xc&amp;ccid=MBWs22k0xuw&amp;v=v3&amp;issuer=prod-2&amp;epid=55a396bb-ffff-ffff-57cf-a7257eb3bfd7&amp;cor_id=7525526694270198739&amp;connected=true&amp;ts=1684835200</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="Trouter-Client" elementType="Header">
                  <stringProp name="Header.name">Trouter-Client</stringProp>
                  <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;27\/1.6.00.11166\/\/&quot;, &quot;cv&quot;:&quot;2023.13.01.24&quot;}</stringProp>
                </elementProp>
                <elementProp name="X-ClientCorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                  <stringProp name="Header.value">7525526694270198739</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">SkyLib</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1,076" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientDescription&quot;:{&quot;appId&quot;:&quot;TeamsCDLWebWorker&quot;,&quot;aesKey&quot;:&quot;&quot;,&quot;languageId&quot;:&quot;en-US&quot;,&quot;platform&quot;:&quot;electron&quot;,&quot;templateKey&quot;:&quot;TeamsCDLWebWorker_1.6&quot;,&quot;platformUIVersion&quot;:&quot;27/1.0.0.2023051118&quot;},&quot;registrationId&quot;:&quot;0bf19ae5-1da0-4802-aa39-a6de909ca974&quot;,&quot;nodeId&quot;:&quot;&quot;,&quot;transports&quot;:{&quot;TROUTER&quot;:[{&quot;context&quot;:&quot;&quot;,&quot;path&quot;:&quot;${scheme}://trouter2-azsc-jpwe-5-b.trouter.teams.microsoft.com:3443/v4/f/ctEHQsQ1EkKn9_LvO4Odhg/&quot;,&quot;ttl&quot;:86400}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/registrar/prod/V2/registrations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/statics/hashed/precompiled-shared-worker-5cd35bd47b731d1d.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="X-Skypetoken" elementType="Header">
                  <stringProp name="Header.name">X-Skypetoken</stringProp>
                  <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6IjVFODQ4MjE0Qzc3MDczQUU1QzJCREU1Q0NENTQ0ODlEREYyQzRDODQiLCJ4NXQiOiJYb1NDRk1kd2M2NWNLOTVjelZSSW5kOHNUSVEiLCJ0eXAiOiJKV1QifQ.eyJpYXQiOjE2ODQ4MjQyODEsImV4cCI6MTY4NDkwODY5OSwic2t5cGVpZCI6Im9yZ2lkOmVmYWViZjMzLWJlOTMtNDM4Yi05ZjEzLWU0ZWViZjBiZGMyNyIsInNjcCI6NzgwLCJjc2kiOiIxNjg0ODIzOTgwIiwidGlkIjoiMmI2YzYwMGYtYjZjYi00MzI5LWFmM2ItMWIzMmM2MmM0NDBmIiwicmduIjoiYXBhYyIsImRldmljZWlkIjoiM2YxYjYzNDEtMDE5Ny00NGExLTk5ZDItMmFkOTZkZjhiODYxIiwiYWFkX3V0aSI6ImlmWmFUMkM2RmsyNGMzaFpxUkU3QUEiLCJhYWRfaWF0IjoxNjg0ODIzOTgwfQ.hsqUK9zJrAFQXB2dAzDrBOdpXoGn-ldx4iWAtVg84aILFGKn6DnaU7m0H4cugtRPWy8Ke49egjU_yEtNbSiOehpEY-mIcmp8g1Yqee85s-INajpEqQhweCazHEzQdhKQHkBFRm8fKYmdVwsUau15yPzILBf0o8Np7lzER-dSVmgMNY5TnFihl-eL8jNMstkna9aWmSPcqxK-DNU9nbzcI_3VmOlZGaEY-evbUgr3nQDRe4qHVW3KC2SjG-F8uh7pC2fcAK0flpQzMQXCa0LGdxcVbd5ky1eh4P_pkB40ubmXbAKW4bSQsPNSv0JLLweYmEdF_VqeZOIQz4YkurPVWA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Teams/1.6.00.11166 Chrome/102.0.5005.197 Electron/19.1.8 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8087</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Launch</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording6.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-543" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">VUnDwLoUcncvn7gYGOEiRw</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_</stringProp>
                <stringProp name="Argument.value">1684833481830</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mtblazordemoapp.azurewebsites.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/_blazor</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://mtblazordemoapp.azurewebsites.net/</stringProp>
              </elementProp>
              <elementProp name="x-signalr-user-agent" elementType="Header">
                <stringProp name="Header.name">x-signalr-user-agent</stringProp>
                <stringProp name="Header.value">Microsoft SignalR/6.0 (6.0.14; Unknown OS; Browser; Unknown Runtime Version)</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="request-id" elementType="Header">
                <stringProp name="Header.name">request-id</stringProp>
                <stringProp name="Header.value">|f6cebde0d89e407883e407f881d943dd.6dffd8e2788149be</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="traceparent" elementType="Header">
                <stringProp name="Header.name">traceparent</stringProp>
                <stringProp name="Header.value">00-f6cebde0d89e407883e407f881d943dd-6dffd8e2788149be-01</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="x-requested-with" elementType="Header">
                <stringProp name="Header.name">x-requested-with</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
